<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='14300' time_ms='1591343853333'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.121-b13
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.121-b13) for windows-amd64 JRE (1.8.0_121-b13), built on Dec 12 2016 18:21:36 by &quot;java_re&quot; with MS VC++ 10.0 (VS2010)
</info>
</vm_version>
<vm_arguments>
<args>
-agentlib:jdwp=transport=dt_socket,address=127.0.0.1:32563,suspend=y,server=n -XX:+UnlockDiagnosticVMOptions -XX:+TraceClassLoading -XX:+PrintAssembly -XX:+LogCompilation -XX:LogFile=live.log -javaagent:C:\Users\jiachao\.IntelliJIdea2018.2\system\captureAgent\debugger-agent.jar=file:/C:/Users/jiachao/AppData/Local/Temp/capture42424.props -Dfile.encoding=UTF-8 
</args>
<command>
com.wdq.juc.TestAssemly
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.121-b13
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext
java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_121\jre\lib\endorsed
sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin
java.library.path=C:\Program Files\Java\jdk1.8.0_121\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_121\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\mysql-5.7.2\bin;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\Program Files\Python\Python37;D:\Program Files (x86)\Tesseract-OCR;D:\Program Files\zookeeper-3.4.9\bin;D:\开发工具\gradle-5.4.1\bin;D:\Program Files\Python\Python37\Scripts;C:\Program Files\MySQL\MySQL Server 5.7\bin;D:\开发工具\apache-maven-3.2.1\bin;C:\Users\jiachao\AppData\Local\atom\bin;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;.
java.home=C:\Program Files\Java\jdk1.8.0_121\jre
java.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;D:\wdq\apollo\target\classes;D:\apache-maven-3.2.1\repo\org\springframework\boot\spring-boot-starter\2.1.0.RELEASE\spring-boot-starter-2.1.0.RELEASE.jar;D:\apache-maven-3.2.1\repo\org\springframework\boot\spring-boot\2.1.0.RELEASE\spring-boot-2.1.0.RELEASE.jar;D:\apache-maven-3.2.1\repo\org\springframework\spring-context\5.1.2.RELEASE\spring-context-5.1.2.RELEASE.jar;D:\apache-maven-3.2.1\repo\org\springframework\spring-expression\5.1.2.RELEASE\spring-expression-5.1.2.RELEASE.jar;D:\apache-maven-3.2.1\repo\org\springframework\boot\spring-boot-autoconfigure\2.1.0.RELEASE\spring-boot-autoconfigure-2.1.0.RELEASE.jar;D:\apache-maven-3.2.1\repo\org\springfr
sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
file.encoding=UTF-8
sun.java.command=com.wdq.juc.TestAssemly
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='20984'/>
[Opened C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Object from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.Serializable from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Comparable from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.CharSequence from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.String from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.reflect.AnnotatedElement from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.reflect.GenericDeclaration from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.reflect.Type from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Class from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Cloneable from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ClassLoader from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.System from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Throwable from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Error from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ThreadDeath from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Exception from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.RuntimeException from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.SecurityManager from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.ProtectionDomain from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.AccessControlContext from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.SecureClassLoader from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ReflectiveOperationException from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ClassNotFoundException from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.LinkageError from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.NoClassDefFoundError from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ClassCastException from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ArrayStoreException from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.VirtualMachineError from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.OutOfMemoryError from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.StackOverflowError from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.IllegalMonitorStateException from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ref.Reference from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ref.SoftReference from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ref.WeakReference from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ref.FinalReference from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ref.PhantomReference from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.Cleaner from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ref.Finalizer from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Runnable from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Thread from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Thread$UncaughtExceptionHandler from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ThreadGroup from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Map from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Dictionary from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Hashtable from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Properties from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.reflect.AccessibleObject from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.reflect.Member from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.reflect.Field from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.reflect.Parameter from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.reflect.Executable from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.reflect.Method from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.reflect.Constructor from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.MagicAccessorImpl from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.MethodAccessor from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.MethodAccessorImpl from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.ConstructorAccessor from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.ConstructorAccessorImpl from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.DelegatingClassLoader from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.ConstantPool from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.FieldAccessor from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.FieldAccessorImpl from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.UnsafeFieldAccessorImpl from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.UnsafeStaticFieldAccessorImpl from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.annotation.Annotation from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.CallerSensitive from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodHandle from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.invoke.DirectMethodHandle from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.invoke.MemberName from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodHandleNatives from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.invoke.LambdaForm from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodType from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.BootstrapMethodError from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.invoke.CallSite from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.invoke.ConstantCallSite from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.invoke.MutableCallSite from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.invoke.VolatileCallSite from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Appendable from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.AbstractStringBuilder from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.StringBuffer from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.StringBuilder from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.Unsafe from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.AutoCloseable from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.Closeable from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.InputStream from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.ByteArrayInputStream from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.File from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.net.URLClassLoader from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.net.URL from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.jar.Manifest from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.Launcher from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.CodeSource from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.StackTraceElement from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.Buffer from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Boolean from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Character from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Number from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Float from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Double from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Byte from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Short from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Integer from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Long from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.NullPointerException from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ArithmeticException from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.ObjectStreamField from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Comparator from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.String$CaseInsensitiveComparator from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.Guard from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.Permission from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.BasicPermission from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.RuntimePermission from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.AccessController from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.reflect.ReflectPermission from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.PrivilegedAction from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.ReflectionFactory$GetReflectionFactoryAction from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.cert.Certificate from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Iterable from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Collection from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.List from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.RandomAccess from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.AbstractCollection from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.AbstractList from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Vector from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Stack from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.ReflectionFactory from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ref.Reference$Lock from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ref.Reference$ReferenceHandler from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.InterruptedException from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.ArrayList from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Collections from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Set from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.AbstractSet from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Collections$EmptySet from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Collections$EmptyList from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.AbstractMap from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Collections$EmptyMap from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Collections$UnmodifiableCollection from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Collections$UnmodifiableList from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Collections$UnmodifiableRandomAccessList from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ref.ReferenceQueue from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Null from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Lock from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.JavaLangRefAccess from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ref.Reference$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.SharedSecrets from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.IncompatibleClassChangeError from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.NoSuchMethodError from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.Reflection from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.HashMap from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Map$Entry from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.HashMap$Node from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.VM from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Hashtable$Entry from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Math from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ref.Finalizer$FinalizerThread from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.charset.Charset from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.charset.spi.CharsetProvider from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.FastCharsetProvider from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.StandardCharsets from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.util.PreHashedMap from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Aliases from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Classes from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Cache from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ThreadLocal from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.concurrent.atomic.AtomicInteger from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Class$3 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Class$ReflectionData from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Class$Atomic from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.generics.repository.AbstractRepository from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.generics.repository.GenericDeclRepository from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.generics.repository.ClassRepository from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Class$AnnotationData from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.annotation.AnnotationType from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.WeakHashMap from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ClassValue$ClassValueMap from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.reflect.Modifier from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.LangReflectAccess from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.reflect.ReflectAccess from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Arrays from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.charset.Charset$ExtendedProviderHolder from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.charset.Charset$ExtendedProviderHolder$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Opened C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar]
[Loaded sun.nio.cs.AbstractCharsetProvider from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.ext.ExtendedCharsets from C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar]
[Loaded java.lang.Class$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.ReflectionFactory$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.NativeConstructorAccessorImpl from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.DelegatingConstructorAccessorImpl from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.SortedMap from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.NavigableMap from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.TreeMap from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.ASCIICaseInsensitiveComparator from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.TreeMap$Entry from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.HistoricallyNamedCharset from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.ext.GBK from C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar]
[Loaded java.lang.StringCoding from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap$Entry from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.StringCoding$StringDecoder from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.ext.DoubleByte from C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar]
[Loaded sun.nio.cs.ext.DelegatableDecoder from C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar]
[Loaded sun.nio.cs.ArrayDecoder from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.charset.CharsetDecoder from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.ext.DoubleByte$Decoder from C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar]
[Loaded java.nio.charset.CodingErrorAction from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Hashtable$EntrySet from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Collections$SynchronizedCollection from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Collections$SynchronizedSet from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Objects from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Enumeration from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Iterator from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Hashtable$Enumerator from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Runtime from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.Version from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.FileInputStream from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.FileDescriptor from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.JavaIOFileDescriptorAccess from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.FileDescriptor$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.Flushable from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.OutputStream from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.FileOutputStream from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.FilterInputStream from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.BufferedInputStream from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.PrivilegedExceptionAction from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.misc.ReflectUtil from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.FilterOutputStream from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.PrintStream from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.BufferedOutputStream from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.Writer from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.OutputStreamWriter from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.StreamEncoder from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.security.action.GetPropertyAction from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.Unicode from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_8 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.ArrayEncoder from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.charset.CharsetEncoder from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_8$Encoder from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.ByteBuffer from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.HeapByteBuffer from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.Bits from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.ByteOrder from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.concurrent.atomic.AtomicLong from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.JavaNioAccess from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.Bits$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.BufferedWriter from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.DefaultFileSystem from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.FileSystem from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.WinNTFileSystem from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.ExpiringCache from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.LinkedHashMap from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.ExpiringCache$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Enum from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.File$PathStatus from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.file.Watchable from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.file.Path from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.StringCoding$StringEncoder from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.ext.DoubleByte$Encoder from C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar]
[Loaded java.lang.Readable from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.CharBuffer from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.HeapCharBuffer from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.charset.CoderResult from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.charset.CoderResult$Cache from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.charset.CoderResult$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.charset.CoderResult$2 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ClassLoader$3 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.ExpiringCache$Entry from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.LinkedHashMap$Entry from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ClassLoader$NativeLibrary from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Terminator from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.SignalHandler from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Terminator$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.Signal from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.NativeSignalHandler from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Integer$IntegerCache from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.OSEnvironment from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.io.Win32ErrorMode from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.JavaLangAccess from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.System$2 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.IllegalArgumentException from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Compiler from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Compiler$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.net.URLStreamHandlerFactory from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.Launcher$Factory from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.security.util.Debug from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ClassLoader$ParallelLoaders from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.WeakHashMap$Entry from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Collections$SetFromMap from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.WeakHashMap$KeySet from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.JavaNetAccess from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.net.URLClassLoader$7 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.StringTokenizer from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.MetaIndex from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.Reader from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.BufferedReader from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.InputStreamReader from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.FileReader from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.StreamDecoder from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_8$Decoder from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.reflect.Array from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Locale from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.util.locale.LocaleObjectCache from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Locale$Cache from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentMap from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.concurrent.locks.Lock from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.concurrent.locks.ReentrantLock from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Segment from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Node from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CounterCell from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CollectionView from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$KeySetView from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ValuesView from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$EntrySetView from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.util.locale.BaseLocale from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.util.locale.BaseLocale$Cache from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.util.locale.BaseLocale$Key from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.util.locale.LocaleObjectCache$CacheEntry from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Locale$LocaleKey from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.util.locale.LocaleUtils from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.CharacterData from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.CharacterDataLatin1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.HashMap$TreeNode from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.FileInputStream$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.net.www.ParseUtil from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.BitSet from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.net.Parts from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.net.URLStreamHandler from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.net.www.protocol.file.Handler from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.JavaSecurityAccess from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.ProtectionDomain$JavaSecurityAccessImpl from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.JavaSecurityProtectionDomainAccess from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.ProtectionDomain$2 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.ProtectionDomain$Key from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.Principal from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.HashSet from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.net.www.protocol.jar.Handler from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.SystemClassLoaderAction from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.VMSupport from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.InternalError from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.instrument.Instrumentation from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.instrument.InstrumentationImpl from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.instrument.TransformerManager from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.instrument.TransformerManager$TransformerInfo from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Opened C:\Users\jiachao\.IntelliJIdea2018.2\system\captureAgent\debugger-agent-storage.jar]
[Loaded java.net.URLClassLoader$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.net.util.URLUtil from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$3 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$Loader from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.zip.ZipConstants from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.zip.ZipFile from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.JavaUtilZipFileAccess from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.zip.ZipFile$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.ThreadLocalCoders from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.ThreadLocalCoders$Cache from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.ThreadLocalCoders$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.ThreadLocalCoders$2 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.FileURLMapper from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.jar.JarFile from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.JavaUtilJarAccess from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.jar.JavaUtilJarAccessImpl from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.charset.StandardCharsets from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.US_ASCII from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.ISO_8859_1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_16BE from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_16LE from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.cs.UTF_16 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Queue from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Deque from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.ArrayDeque from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.zip.ZipCoder from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.PerfCounter from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.Perf$GetPerfAction from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.Perf from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.PerfCounter$CoreCounters from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.ch.DirectBuffer from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.MappedByteBuffer from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.DirectByteBuffer from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.LongBuffer from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.nio.DirectLongBufferU from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.JarIndex from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.ExtensionDependency from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.zip.ZipEntry from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.jar.JarEntry from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.jar.JarFile$JarFileEntry from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.zip.ZipFile$ZipFileInputStream from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.IOUtils from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.zip.Inflater from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.zip.ZStreamRef from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.zip.InflaterInputStream from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.zip.ZipFile$ZipFileInflaterInputStream from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.AbstractSequentialList from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.LinkedList from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.LinkedList$Node from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$FileLoader from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.jar.Attributes from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.jar.Manifest$FastInputStream from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.jar.Attributes$Name from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.jar.JarVerifier from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.CodeSigner from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.jar.JarVerifier$3 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.ByteArrayOutputStream from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.Resource from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader$2 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Package from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.security.util.ManifestEntryVerifier from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.security.util.SignatureFileVerifier from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.CryptoPrimitive from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.EnumSet from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Class$MethodArray from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Class$4 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.NativeMethodAccessorImpl from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.reflect.DelegatingMethodAccessorImpl from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.RegularEnumSet from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Collections$UnmodifiableSet from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.AlgorithmConstraints from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.security.util.AbstractAlgorithmConstraints from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.security.util.AlgorithmDecomposer from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$Node from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$4 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$LastNode from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$GroupHead from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$CharProperty from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$BmpCharProperty from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$Single from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$SliceNode from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$Slice from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$Begin from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$First from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$Start from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$TreeInfo from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.ASCII from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$SliceI from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$BranchConn from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$Branch from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.security.util.AbstractAlgorithmConstraints$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.Security from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.Security$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Properties$LineReader from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.ArrayList$SubList from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.ListIterator from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.ArrayList$SubList$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$Constraints from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$Ctype from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$Curly from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$GroupTail from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$BnM from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Pattern$SliceS from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.MatchResult from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.regex.Matcher from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$Constraint from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.nio.ByteBuffered from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.PermissionCollection from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.Permissions from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.net.URLConnection from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.net.www.URLConnection from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.net.www.protocol.file.FileURLConnection from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.net.www.MessageHeader from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.FilePermission from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.FilePermission$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.io.FilePermissionCollection from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.AllPermission from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.UnresolvedPermission from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.security.BasicPermissionCollection from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ForwardingNode from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded com.intellij.rt.debugger.agent.CaptureAgent from file:/C:/Users/jiachao/.IntelliJIdea2018.2/system/captureAgent/debugger-agent.jar]
[Loaded com.intellij.rt.debugger.agent.CaptureAgent$KeyProvider from file:/C:/Users/jiachao/.IntelliJIdea2018.2/system/captureAgent/debugger-agent.jar]
[Loaded java.lang.instrument.ClassFileTransformer from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.NumberFormatException from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.instrument.UnmodifiableClassException from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded sun.instrument.InstrumentationImpl$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded com.intellij.rt.debugger.agent.CaptureAgent$1 from file:/C:/Users/jiachao/.IntelliJIdea2018.2/system/captureAgent/debugger-agent.jar]
[Loaded java.lang.IllegalStateException from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.net.URI from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.net.URI$Parser from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded com.intellij.rt.debugger.agent.CaptureAgent$InstrumentPoint from file:/C:/Users/jiachao/.IntelliJIdea2018.2/system/captureAgent/debugger-agent.jar]
[Loaded com.intellij.rt.debugger.agent.CaptureAgent$ParamKeyProvider from file:/C:/Users/jiachao/.IntelliJIdea2018.2/system/captureAgent/debugger-agent.jar]
[Loaded com.intellij.rt.debugger.agent.CaptureAgent$FieldKeyProvider from file:/C:/Users/jiachao/.IntelliJIdea2018.2/system/captureAgent/debugger-agent.jar]
[Loaded com.intellij.rt.debugger.agent.CaptureAgent$CaptureTransformer from file:/C:/Users/jiachao/.IntelliJIdea2018.2/system/captureAgent/debugger-agent.jar]
[Loaded java.io.IOException from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded org.jetbrains.capture.org.objectweb.asm.ClassVisitor from file:/C:/Users/jiachao/.IntelliJIdea2018.2/system/captureAgent/debugger-agent.jar]
[Loaded org.jetbrains.capture.org.objectweb.asm.ClassWriter from file:/C:/Users/jiachao/.IntelliJIdea2018.2/system/captureAgent/debugger-agent.jar]
[Loaded com.intellij.rt.debugger.agent.CaptureAgent$CaptureInstrumentor from file:/C:/Users/jiachao/.IntelliJIdea2018.2/system/captureAgent/debugger-agent.jar]
<writer thread='18064'/>
<thread_logfile thread='18064' filename='C:\Users\jiachao\AppData\Local\Temp\\hs_c18064_pid14300.log'/>
<writer thread='9088'/>
<thread_logfile thread='9088' filename='C:\Users\jiachao\AppData\Local\Temp\\hs_c9088_pid14300.log'/>
<writer thread='8488'/>
<thread_logfile thread='8488' filename='C:\Users\jiachao\AppData\Local\Temp\\hs_c8488_pid14300.log'/>
<writer thread='20984'/>
[Loaded java.lang.invoke.MethodHandleImpl from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.function.Function from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$2 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$3 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ClassValue from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$4 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ClassValue$Entry from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ClassValue$Identity from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ClassValue$Version from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.invoke.MemberName$Factory from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
<task_queued compile_id='1' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='2304' iicount='2304' level='3' stamp='0.331' comment='tiered' hot_count='2304'/>
[Loaded java.lang.invoke.MethodHandleStatics from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.invoke.MethodHandleStatics$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
<task_queued compile_id='2' compile_kind='osr' method='java/lang/String hashCode ()I' bytes='55' count='2956' backedge_count='62464' iicount='2956' osr_bci='24' stamp='0.331' comment='tiered' hot_count='62464'/>
<writer thread='9088'/>
Loaded disassembler from C:\Program Files\Java\jdk1.8.0_121\jre\bin\server\hsdis-amd64.dll
Decoding compiled method 0x0000000002c33b10:
Code:
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001933b078} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002c33c80: mov    %eax,-0x6000(%rsp)
  0x0000000002c33c87: push   %rbp
  0x0000000002c33c88: sub    $0x30,%rsp
  0x0000000002c33c8c: movabs $0x19445bf0,%rsi   ;   {metadata(method data for {method} {0x000000001933b078} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c33c96: mov    0xdc(%rsi),%edi
  0x0000000002c33c9c: add    $0x8,%edi
  0x0000000002c33c9f: mov    %edi,0xdc(%rsi)
  0x0000000002c33ca5: movabs $0x1933b070,%rsi   ;   {metadata({method} {0x000000001933b078} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c33caf: and    $0x1ff8,%edi
  0x0000000002c33cb5: cmp    $0x0,%edi
  0x0000000002c33cb8: je     0x0000000002c33ddc  ;*aload_0
                                                ; - java.util.HashMap::hash@0 (line 338)

  0x0000000002c33cbe: cmp    $0x0,%rdx
  0x0000000002c33cc2: movabs $0x19445bf0,%rsi   ;   {metadata(method data for {method} {0x000000001933b078} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c33ccc: movabs $0x108,%rdi
  0x0000000002c33cd6: jne    0x0000000002c33ce6
  0x0000000002c33cdc: movabs $0x118,%rdi
  0x0000000002c33ce6: mov    (%rsi,%rdi,1),%rbx
  0x0000000002c33cea: lea    0x1(%rbx),%rbx
  0x0000000002c33cee: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002c33cf2: jne    0x0000000002c33d12  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 338)

  0x0000000002c33cf8: movabs $0x19445bf0,%rdx   ;   {metadata(method data for {method} {0x000000001933b078} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c33d02: incl   0x128(%rdx)
  0x0000000002c33d08: mov    $0x0,%esi
  0x0000000002c33d0d: jmpq   0x0000000002c33dcd  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 338)

  0x0000000002c33d12: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x0000000002c33df3
  0x0000000002c33d15: mov    %rdx,%rsi
  0x0000000002c33d18: movabs $0x19445bf0,%rdi   ;   {metadata(method data for {method} {0x000000001933b078} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c33d22: mov    0x8(%rsi),%esi
  0x0000000002c33d25: shl    $0x3,%rsi
  0x0000000002c33d29: cmp    0x148(%rdi),%rsi
  0x0000000002c33d30: jne    0x0000000002c33d3f
  0x0000000002c33d32: addq   $0x1,0x150(%rdi)
  0x0000000002c33d3a: jmpq   0x0000000002c33da5
  0x0000000002c33d3f: cmp    0x158(%rdi),%rsi
  0x0000000002c33d46: jne    0x0000000002c33d55
  0x0000000002c33d48: addq   $0x1,0x160(%rdi)
  0x0000000002c33d50: jmpq   0x0000000002c33da5
  0x0000000002c33d55: cmpq   $0x0,0x148(%rdi)
  0x0000000002c33d60: jne    0x0000000002c33d79
  0x0000000002c33d62: mov    %rsi,0x148(%rdi)
  0x0000000002c33d69: movq   $0x1,0x150(%rdi)
  0x0000000002c33d74: jmpq   0x0000000002c33da5
  0x0000000002c33d79: cmpq   $0x0,0x158(%rdi)
  0x0000000002c33d84: jne    0x0000000002c33d9d
  0x0000000002c33d86: mov    %rsi,0x158(%rdi)
  0x0000000002c33d8d: movq   $0x1,0x160(%rdi)
  0x0000000002c33d98: jmpq   0x0000000002c33da5
  0x0000000002c33d9d: addq   $0x1,0x140(%rdi)
  0x0000000002c33da5: mov    %rdx,%rsi
  0x0000000002c33da8: mov    %rsi,%rdx          ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)

  0x0000000002c33dab: mov    %rsi,0x20(%rsp)
  0x0000000002c33db0: nop
  0x0000000002c33db1: nop
  0x0000000002c33db2: nop
  0x0000000002c33db3: nop
  0x0000000002c33db4: nop
  0x0000000002c33db5: movabs $0xffffffffffffffff,%rax
  0x0000000002c33dbf: callq  0x0000000002b763e0  ; OopMap{[32]=Oop off=324}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ;   {virtual_call}
  0x0000000002c33dc4: mov    %rax,%rsi
  0x0000000002c33dc7: shr    $0x10,%esi
  0x0000000002c33dca: xor    %rax,%rsi
  0x0000000002c33dcd: mov    %rsi,%rax
  0x0000000002c33dd0: add    $0x30,%rsp
  0x0000000002c33dd4: pop    %rbp
  0x0000000002c33dd5: test   %eax,-0x2563cdb(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c33ddb: retq   
  0x0000000002c33ddc: mov    %rsi,0x8(%rsp)
  0x0000000002c33de1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c33de9: callq  0x0000000002c31360  ; OopMap{rdx=Oop off=366}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ;   {runtime_call}
  0x0000000002c33dee: jmpq   0x0000000002c33cbe
  0x0000000002c33df3: callq  0x0000000002c2cc80  ; OopMap{rdx=Oop off=376}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ;   {runtime_call}
  0x0000000002c33df8: nop
  0x0000000002c33df9: nop
  0x0000000002c33dfa: mov    0x2a8(%r15),%rax
  0x0000000002c33e01: movabs $0x0,%r10
  0x0000000002c33e0b: mov    %r10,0x2a8(%r15)
  0x0000000002c33e12: movabs $0x0,%r10
  0x0000000002c33e1c: mov    %r10,0x2b0(%r15)
  0x0000000002c33e23: add    $0x30,%rsp
  0x0000000002c33e27: pop    %rbp
  0x0000000002c33e28: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c33e2d: hlt    
  0x0000000002c33e2e: hlt    
  0x0000000002c33e2f: hlt    
  0x0000000002c33e30: hlt    
  0x0000000002c33e31: hlt    
  0x0000000002c33e32: hlt    
  0x0000000002c33e33: hlt    
  0x0000000002c33e34: hlt    
  0x0000000002c33e35: hlt    
  0x0000000002c33e36: hlt    
  0x0000000002c33e37: hlt    
  0x0000000002c33e38: hlt    
  0x0000000002c33e39: hlt    
  0x0000000002c33e3a: hlt    
  0x0000000002c33e3b: hlt    
  0x0000000002c33e3c: hlt    
  0x0000000002c33e3d: hlt    
  0x0000000002c33e3e: hlt    
  0x0000000002c33e3f: hlt    
[Stub Code]
  0x0000000002c33e40: nop                       ;   {no_reloc}
  0x0000000002c33e41: nop
  0x0000000002c33e42: nop
  0x0000000002c33e43: nop
  0x0000000002c33e44: nop
  0x0000000002c33e45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c33e4f: jmpq   0x0000000002c33e4f  ;   {runtime_call}
[Exception Handler]
  0x0000000002c33e54: callq  0x0000000002c2eb20  ;   {runtime_call}
  0x0000000002c33e59: mov    %rsp,-0x28(%rsp)
  0x0000000002c33e5e: sub    $0x80,%rsp
  0x0000000002c33e65: mov    %rax,0x78(%rsp)
  0x0000000002c33e6a: mov    %rcx,0x70(%rsp)
  0x0000000002c33e6f: mov    %rdx,0x68(%rsp)
  0x0000000002c33e74: mov    %rbx,0x60(%rsp)
  0x0000000002c33e79: mov    %rbp,0x50(%rsp)
  0x0000000002c33e7e: mov    %rsi,0x48(%rsp)
  0x0000000002c33e83: mov    %rdi,0x40(%rsp)
  0x0000000002c33e88: mov    %r8,0x38(%rsp)
  0x0000000002c33e8d: mov    %r9,0x30(%rsp)
  0x0000000002c33e92: mov    %r10,0x28(%rsp)
  0x0000000002c33e97: mov    %r11,0x20(%rsp)
  0x0000000002c33e9c: mov    %r12,0x18(%rsp)
  0x0000000002c33ea1: mov    %r13,0x10(%rsp)
  0x0000000002c33ea6: mov    %r14,0x8(%rsp)
  0x0000000002c33eab: mov    %r15,(%rsp)
  0x0000000002c33eaf: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c33eb9: movabs $0x2c33e59,%rdx    ;   {internal_word}
  0x0000000002c33ec3: mov    %rsp,%r8
  0x0000000002c33ec6: and    $0xfffffffffffffff0,%rsp
  0x0000000002c33eca: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c33ecf: hlt    
[Deopt Handler Code]
  0x0000000002c33ed0: movabs $0x2c33ed0,%r10    ;   {section_word}
  0x0000000002c33eda: push   %r10
  0x0000000002c33edc: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c33ee1: hlt    
  0x0000000002c33ee2: hlt    
  0x0000000002c33ee3: hlt    
  0x0000000002c33ee4: hlt    
  0x0000000002c33ee5: hlt    
  0x0000000002c33ee6: hlt    
  0x0000000002c33ee7: hlt    
<nmethod compile_id='1' compiler='C1' level='3' entry='0x0000000002c33c80' size='1216' address='0x0000000002c33b10' relocation_offset='288' insts_offset='368' stub_offset='816' scopes_data_offset='992' scopes_pcs_offset='1048' dependencies_offset='1192' nul_chk_table_offset='1200' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='2307' iicount='2307' stamp='0.360'/>
<writer thread='20984'/>
<task_queued compile_id='3' method='java/util/Hashtable get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='69' count='256' backedge_count='56' iicount='256' level='3' stamp='0.360' comment='tiered' hot_count='256'/>
<writer thread='9088'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31551'/>
</blob>
Decoding compiled method 0x0000000002c32d90:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000192889c0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;
  # this:     rdx:rdx   = &apos;java/util/Hashtable&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x70]  (sp of caller)
  0x0000000002c32f20: mov    0x8(%rdx),%r10d
  0x0000000002c32f24: shl    $0x3,%r10
  0x0000000002c32f28: cmp    %rax,%r10
  0x0000000002c32f2b: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c32f31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c32f3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c32f40: mov    %eax,-0x6000(%rsp)
  0x0000000002c32f47: push   %rbp
  0x0000000002c32f48: sub    $0x60,%rsp
  0x0000000002c32f4c: mov    %rdx,0x30(%rsp)
  0x0000000002c32f51: mov    %r8,0x28(%rsp)
  0x0000000002c32f56: lea    0x48(%rsp),%rsi
  0x0000000002c32f5b: mov    %rdx,0x8(%rsi)
  0x0000000002c32f5f: mov    (%rdx),%rax
  0x0000000002c32f62: mov    %rax,%rdi
  0x0000000002c32f65: and    $0x7,%rdi
  0x0000000002c32f69: cmp    $0x5,%rdi
  0x0000000002c32f6d: jne    0x0000000002c32ff4
  0x0000000002c32f73: mov    0x8(%rdx),%edi
  0x0000000002c32f76: shl    $0x3,%rdi
  0x0000000002c32f7a: mov    0xa8(%rdi),%rdi
  0x0000000002c32f81: or     %r15,%rdi
  0x0000000002c32f84: xor    %rax,%rdi
  0x0000000002c32f87: and    $0xffffffffffffff87,%rdi
  0x0000000002c32f8b: je     0x0000000002c3301c
  0x0000000002c32f91: test   $0x7,%rdi
  0x0000000002c32f98: jne    0x0000000002c32fe1
  0x0000000002c32f9a: test   $0x300,%rdi
  0x0000000002c32fa1: jne    0x0000000002c32fc0
  0x0000000002c32fa3: and    $0x37f,%rax
  0x0000000002c32faa: mov    %rax,%rdi
  0x0000000002c32fad: or     %r15,%rdi
  0x0000000002c32fb0: lock cmpxchg %rdi,(%rdx)
  0x0000000002c32fb5: jne    0x0000000002c333ad
  0x0000000002c32fbb: jmpq   0x0000000002c3301c
  0x0000000002c32fc0: mov    0x8(%rdx),%edi
  0x0000000002c32fc3: shl    $0x3,%rdi
  0x0000000002c32fc7: mov    0xa8(%rdi),%rdi
  0x0000000002c32fce: or     %r15,%rdi
  0x0000000002c32fd1: lock cmpxchg %rdi,(%rdx)
  0x0000000002c32fd6: jne    0x0000000002c333ad
  0x0000000002c32fdc: jmpq   0x0000000002c3301c
  0x0000000002c32fe1: mov    0x8(%rdx),%edi
  0x0000000002c32fe4: shl    $0x3,%rdi
  0x0000000002c32fe8: mov    0xa8(%rdi),%rdi
  0x0000000002c32fef: lock cmpxchg %rdi,(%rdx)
  0x0000000002c32ff4: mov    (%rdx),%rax
  0x0000000002c32ff7: or     $0x1,%rax
  0x0000000002c32ffb: mov    %rax,(%rsi)
  0x0000000002c32ffe: lock cmpxchg %rsi,(%rdx)
  0x0000000002c33003: je     0x0000000002c3301c
  0x0000000002c33009: sub    %rsp,%rax
  0x0000000002c3300c: and    $0xfffffffffffff007,%rax
  0x0000000002c33013: mov    %rax,(%rsi)
  0x0000000002c33016: jne    0x0000000002c333ad
  0x0000000002c3301c: movabs $0x1950f688,%rsi   ;   {metadata(method data for {method} {0x00000000192889c0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002c33026: mov    0xdc(%rsi),%edi
  0x0000000002c3302c: add    $0x8,%edi
  0x0000000002c3302f: mov    %edi,0xdc(%rsi)
  0x0000000002c33035: movabs $0x192889b8,%rsi   ;   {metadata({method} {0x00000000192889c0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002c3303f: and    $0x1ff8,%edi
  0x0000000002c33045: cmp    $0x0,%edi
  0x0000000002c33048: je     0x0000000002c333c0  ;*aload_0
                                                ; - java.util.Hashtable::get@0 (line 362)

  0x0000000002c3304e: mov    0x1c(%rdx),%esi
  0x0000000002c33051: shl    $0x3,%rsi          ;*getfield table
                                                ; - java.util.Hashtable::get@1 (line 362)

  0x0000000002c33055: mov    %rsi,0x20(%rsp)
  0x0000000002c3305a: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x0000000002c333d7
  0x0000000002c3305d: mov    %r8,%rdi
  0x0000000002c33060: movabs $0x1950f688,%rbx   ;   {metadata(method data for {method} {0x00000000192889c0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002c3306a: mov    0x8(%rdi),%edi
  0x0000000002c3306d: shl    $0x3,%rdi
  0x0000000002c33071: cmp    0x110(%rbx),%rdi
  0x0000000002c33078: jne    0x0000000002c33087
  0x0000000002c3307a: addq   $0x1,0x118(%rbx)
  0x0000000002c33082: jmpq   0x0000000002c330ed
  0x0000000002c33087: cmp    0x120(%rbx),%rdi
  0x0000000002c3308e: jne    0x0000000002c3309d
  0x0000000002c33090: addq   $0x1,0x128(%rbx)
  0x0000000002c33098: jmpq   0x0000000002c330ed
  0x0000000002c3309d: cmpq   $0x0,0x110(%rbx)
  0x0000000002c330a8: jne    0x0000000002c330c1
  0x0000000002c330aa: mov    %rdi,0x110(%rbx)
  0x0000000002c330b1: movq   $0x1,0x118(%rbx)
  0x0000000002c330bc: jmpq   0x0000000002c330ed
  0x0000000002c330c1: cmpq   $0x0,0x120(%rbx)
  0x0000000002c330cc: jne    0x0000000002c330e5
  0x0000000002c330ce: mov    %rdi,0x120(%rbx)
  0x0000000002c330d5: movq   $0x1,0x128(%rbx)
  0x0000000002c330e0: jmpq   0x0000000002c330ed
  0x0000000002c330e5: addq   $0x1,0x108(%rbx)
  0x0000000002c330ed: mov    %r8,%rdx           ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::get@6 (line 363)

  0x0000000002c330f0: nop
  0x0000000002c330f1: nop
  0x0000000002c330f2: nop
  0x0000000002c330f3: nop
  0x0000000002c330f4: nop
  0x0000000002c330f5: movabs $0xffffffffffffffff,%rax
  0x0000000002c330ff: callq  0x0000000002b763e0  ; OopMap{[40]=Oop [48]=Oop [32]=Oop [80]=Oop off=484}
                                                ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::get@6 (line 363)
                                                ;   {virtual_call}
  0x0000000002c33104: mov    %eax,0x40(%rsp)
  0x0000000002c33108: mov    0x20(%rsp),%rsi
  0x0000000002c3310d: mov    0xc(%rsi),%r8d     ;*arraylength
                                                ; - java.util.Hashtable::get@15 (line 364)
                                                ; implicit exception: dispatches to 0x0000000002c333dc
  0x0000000002c33111: mov    %rax,%rdx
  0x0000000002c33114: and    $0x7fffffff,%edx
  0x0000000002c3311a: mov    %rax,%rdi
  0x0000000002c3311d: mov    %rdx,%rax
  0x0000000002c33120: cmp    $0x80000000,%eax
  0x0000000002c33126: jne    0x0000000002c33138
  0x0000000002c3312c: xor    %edx,%edx
  0x0000000002c3312e: cmp    $0xffffffff,%r8d
  0x0000000002c33132: je     0x0000000002c3313c
  0x0000000002c33138: cltd   
  0x0000000002c33139: idiv   %r8d               ;*irem
                                                ; - java.util.Hashtable::get@16 (line 364)
                                                ; implicit exception: dispatches to 0x0000000002c333e1
  0x0000000002c3313c: mov    %edx,0x44(%rsp)
  0x0000000002c33140: movslq %edx,%r8
  0x0000000002c33143: mov    0x10(%rsi,%r8,4),%r8d
  0x0000000002c33148: shl    $0x3,%r8           ;*aaload
                                                ; - java.util.Hashtable::get@22 (line 365)

  0x0000000002c3314c: nopl   0x0(%rax)
  0x0000000002c33150: mov    0x28(%rsp),%rsi
  0x0000000002c33155: cmp    $0x0,%r8
  0x0000000002c33159: movabs $0x1950f688,%rcx   ;   {metadata(method data for {method} {0x00000000192889c0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002c33163: movabs $0x138,%r9
  0x0000000002c3316d: je     0x0000000002c3317d
  0x0000000002c33173: movabs $0x148,%r9
  0x0000000002c3317d: mov    (%rcx,%r9,1),%r11
  0x0000000002c33181: lea    0x1(%r11),%r11
  0x0000000002c33185: mov    %r11,(%rcx,%r9,1)
  0x0000000002c33189: je     0x0000000002c33366  ;*ifnull
                                                ; - java.util.Hashtable::get@27 (line 365)

  0x0000000002c3318f: mov    0xc(%r8),%ecx      ;*getfield hash
                                                ; - java.util.Hashtable::get@32 (line 366)
                                                ; implicit exception: dispatches to 0x0000000002c333e6
  0x0000000002c33193: cmp    %edi,%ecx
  0x0000000002c33195: movabs $0x1950f688,%rcx   ;   {metadata(method data for {method} {0x00000000192889c0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002c3319f: movabs $0x158,%r9
  0x0000000002c331a9: jne    0x0000000002c331b9
  0x0000000002c331af: movabs $0x168,%r9
  0x0000000002c331b9: mov    (%rcx,%r9,1),%r11
  0x0000000002c331bd: lea    0x1(%r11),%r11
  0x0000000002c331c1: mov    %r11,(%rcx,%r9,1)
  0x0000000002c331c5: jne    0x0000000002c332c2  ;*if_icmpne
                                                ; - java.util.Hashtable::get@36 (line 366)

  0x0000000002c331cb: mov    0x10(%r8),%ecx
  0x0000000002c331cf: shl    $0x3,%rcx          ;*getfield key
                                                ; - java.util.Hashtable::get@41 (line 366)

  0x0000000002c331d3: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x0000000002c333eb
  0x0000000002c331d6: mov    %rcx,%r9
  0x0000000002c331d9: movabs $0x1950f688,%r11   ;   {metadata(method data for {method} {0x00000000192889c0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002c331e3: mov    0x8(%r9),%r9d
  0x0000000002c331e7: shl    $0x3,%r9
  0x0000000002c331eb: cmp    0x180(%r11),%r9
  0x0000000002c331f2: jne    0x0000000002c33201
  0x0000000002c331f4: addq   $0x1,0x188(%r11)
  0x0000000002c331fc: jmpq   0x0000000002c33267
  0x0000000002c33201: cmp    0x190(%r11),%r9
  0x0000000002c33208: jne    0x0000000002c33217
  0x0000000002c3320a: addq   $0x1,0x198(%r11)
  0x0000000002c33212: jmpq   0x0000000002c33267
  0x0000000002c33217: cmpq   $0x0,0x180(%r11)
  0x0000000002c33222: jne    0x0000000002c3323b
  0x0000000002c33224: mov    %r9,0x180(%r11)
  0x0000000002c3322b: movq   $0x1,0x188(%r11)
  0x0000000002c33236: jmpq   0x0000000002c33267
  0x0000000002c3323b: cmpq   $0x0,0x190(%r11)
  0x0000000002c33246: jne    0x0000000002c3325f
  0x0000000002c33248: mov    %r9,0x190(%r11)
  0x0000000002c3324f: movq   $0x1,0x198(%r11)
  0x0000000002c3325a: jmpq   0x0000000002c33267
  0x0000000002c3325f: addq   $0x1,0x178(%r11)
  0x0000000002c33267: mov    %r8,0x38(%rsp)
  0x0000000002c3326c: mov    %rsi,%r8
  0x0000000002c3326f: mov    %rcx,%rdx          ;*invokevirtual equals
                                                ; - java.util.Hashtable::get@45 (line 366)

  0x0000000002c33272: nop
  0x0000000002c33273: nop
  0x0000000002c33274: nop
  0x0000000002c33275: movabs $0xffffffffffffffff,%rax
  0x0000000002c3327f: callq  0x0000000002b763e0  ; OopMap{[40]=Oop [48]=Oop [56]=Oop [32]=Oop [80]=Oop off=868}
                                                ;*invokevirtual equals
                                                ; - java.util.Hashtable::get@45 (line 366)
                                                ;   {virtual_call}
  0x0000000002c33284: cmp    $0x0,%eax
  0x0000000002c33287: movabs $0x1950f688,%rax   ;   {metadata(method data for {method} {0x00000000192889c0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002c33291: movabs $0x1a8,%rsi
  0x0000000002c3329b: je     0x0000000002c332ab
  0x0000000002c332a1: movabs $0x1b8,%rsi
  0x0000000002c332ab: mov    (%rax,%rsi,1),%rdi
  0x0000000002c332af: lea    0x1(%rdi),%rdi
  0x0000000002c332b3: mov    %rdi,(%rax,%rsi,1)
  0x0000000002c332b7: mov    0x38(%rsp),%r8
  0x0000000002c332bc: jne    0x0000000002c3331e  ;*ifeq
                                                ; - java.util.Hashtable::get@48 (line 366)

  0x0000000002c332c2: mov    0x18(%r8),%eax
  0x0000000002c332c6: shl    $0x3,%rax          ;*getfield next
                                                ; - java.util.Hashtable::get@59 (line 365)

  0x0000000002c332ca: movabs $0x1950f688,%rsi   ;   {metadata(method data for {method} {0x00000000192889c0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002c332d4: mov    0xe0(%rsi),%edi
  0x0000000002c332da: add    $0x8,%edi
  0x0000000002c332dd: mov    %edi,0xe0(%rsi)
  0x0000000002c332e3: movabs $0x192889b8,%rsi   ;   {metadata({method} {0x00000000192889c0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002c332ed: and    $0xfff8,%edi
  0x0000000002c332f3: cmp    $0x0,%edi
  0x0000000002c332f6: je     0x0000000002c333f0  ; OopMap{[40]=Oop [48]=Oop [32]=Oop rax=Oop [80]=Oop off=988}
                                                ;*goto
                                                ; - java.util.Hashtable::get@64 (line 365)

  0x0000000002c332fc: test   %eax,-0x2563202(%rip)        # 0x00000000006d0100
                                                ;   {poll}
  0x0000000002c33302: movabs $0x1950f688,%rsi   ;   {metadata(method data for {method} {0x00000000192889c0} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002c3330c: incl   0x1c8(%rsi)
  0x0000000002c33312: mov    %rax,%r8
  0x0000000002c33315: mov    0x40(%rsp),%edi
  0x0000000002c33319: jmpq   0x0000000002c33150  ;*goto
                                                ; - java.util.Hashtable::get@64 (line 365)

  0x0000000002c3331e: mov    0x14(%r8),%esi
  0x0000000002c33322: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.util.Hashtable::get@53 (line 367)

  0x0000000002c33326: lea    0x48(%rsp),%rax
  0x0000000002c3332b: mov    0x8(%rax),%rbx
  0x0000000002c3332f: mov    (%rbx),%rdi
  0x0000000002c33332: and    $0x7,%rdi
  0x0000000002c33336: cmp    $0x5,%rdi
  0x0000000002c3333a: je     0x0000000002c33357
  0x0000000002c33340: mov    (%rax),%rdi
  0x0000000002c33343: test   %rdi,%rdi
  0x0000000002c33346: je     0x0000000002c33357
  0x0000000002c3334c: lock cmpxchg %rdi,(%rbx)
  0x0000000002c33351: jne    0x0000000002c33407
  0x0000000002c33357: mov    %rsi,%rax
  0x0000000002c3335a: add    $0x60,%rsp
  0x0000000002c3335e: pop    %rbp
  0x0000000002c3335f: test   %eax,-0x2563265(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c33365: retq                      ;*areturn
                                                ; - java.util.Hashtable::get@56 (line 367)

  0x0000000002c33366: lea    0x48(%rsp),%rax
  0x0000000002c3336b: mov    0x8(%rax),%rdi
  0x0000000002c3336f: mov    (%rdi),%rsi
  0x0000000002c33372: and    $0x7,%rsi
  0x0000000002c33376: cmp    $0x5,%rsi
  0x0000000002c3337a: je     0x0000000002c33397
  0x0000000002c33380: mov    (%rax),%rsi
  0x0000000002c33383: test   %rsi,%rsi
  0x0000000002c33386: je     0x0000000002c33397
  0x0000000002c3338c: lock cmpxchg %rsi,(%rdi)
  0x0000000002c33391: jne    0x0000000002c3341a  ;*areturn
                                                ; - java.util.Hashtable::get@68 (line 370)

  0x0000000002c33397: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002c333a1: add    $0x60,%rsp
  0x0000000002c333a5: pop    %rbp
  0x0000000002c333a6: test   %eax,-0x25632ac(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c333ac: retq   
  0x0000000002c333ad: mov    %rdx,0x8(%rsp)
  0x0000000002c333b2: mov    %rsi,(%rsp)
  0x0000000002c333b6: callq  0x0000000002c2f660  ; OopMap{rdx=Oop [48]=Oop r8=Oop [40]=Oop [80]=Oop off=1179}
                                                ;*synchronization entry
                                                ; - java.util.Hashtable::get@-1 (line 362)
                                                ;   {runtime_call}
  0x0000000002c333bb: jmpq   0x0000000002c3301c
  0x0000000002c333c0: mov    %rsi,0x8(%rsp)
  0x0000000002c333c5: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c333cd: callq  0x0000000002c31360  ; OopMap{rdx=Oop [48]=Oop r8=Oop [40]=Oop [80]=Oop off=1202}
                                                ;*synchronization entry
                                                ; - java.util.Hashtable::get@-1 (line 362)
                                                ;   {runtime_call}
  0x0000000002c333d2: jmpq   0x0000000002c3304e
  0x0000000002c333d7: callq  0x0000000002c2cc80  ; OopMap{rdx=Oop [48]=Oop r8=Oop [40]=Oop rsi=Oop [32]=Oop [80]=Oop off=1212}
                                                ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::get@6 (line 363)
                                                ;   {runtime_call}
  0x0000000002c333dc: callq  0x0000000002c2cc80  ; OopMap{[40]=Oop [48]=Oop rsi=Oop [32]=Oop [80]=Oop off=1217}
                                                ;*arraylength
                                                ; - java.util.Hashtable::get@15 (line 364)
                                                ;   {runtime_call}
  0x0000000002c333e1: callq  0x0000000002c2ca40  ; OopMap{[40]=Oop [48]=Oop rsi=Oop [32]=Oop [80]=Oop off=1222}
                                                ;*irem
                                                ; - java.util.Hashtable::get@16 (line 364)
                                                ;   {runtime_call}
  0x0000000002c333e6: callq  0x0000000002c2cc80  ; OopMap{r8=Oop [32]=Oop rsi=Oop [40]=Oop [48]=Oop [80]=Oop off=1227}
                                                ;*getfield hash
                                                ; - java.util.Hashtable::get@32 (line 366)
                                                ;   {runtime_call}
  0x0000000002c333eb: callq  0x0000000002c2cc80  ; OopMap{r8=Oop rsi=Oop [40]=Oop [48]=Oop [32]=Oop rcx=Oop [80]=Oop off=1232}
                                                ;*invokevirtual equals
                                                ; - java.util.Hashtable::get@45 (line 366)
                                                ;   {runtime_call}
  0x0000000002c333f0: mov    %rsi,0x8(%rsp)
  0x0000000002c333f5: movq   $0x40,(%rsp)
  0x0000000002c333fd: callq  0x0000000002c31360  ; OopMap{[40]=Oop [48]=Oop [32]=Oop rax=Oop [80]=Oop off=1250}
                                                ;*goto
                                                ; - java.util.Hashtable::get@64 (line 365)
                                                ;   {runtime_call}
  0x0000000002c33402: jmpq   0x0000000002c332fc
  0x0000000002c33407: lea    0x48(%rsp),%rax
  0x0000000002c3340c: mov    %rax,(%rsp)
  0x0000000002c33410: callq  0x0000000002c2fa60  ;   {runtime_call}
  0x0000000002c33415: jmpq   0x0000000002c33357
  0x0000000002c3341a: lea    0x48(%rsp),%rax
  0x0000000002c3341f: mov    %rax,(%rsp)
  0x0000000002c33423: callq  0x0000000002c2fa60  ;   {runtime_call}
  0x0000000002c33428: jmpq   0x0000000002c33397
  0x0000000002c3342d: nop
  0x0000000002c3342e: nop
  0x0000000002c3342f: mov    0x2a8(%r15),%rax
  0x0000000002c33436: movabs $0x0,%r10
  0x0000000002c33440: mov    %r10,0x2a8(%r15)
  0x0000000002c33447: movabs $0x0,%r10
  0x0000000002c33451: mov    %r10,0x2b0(%r15)
  0x0000000002c33458: mov    %rax,%rbx
  0x0000000002c3345b: lea    0x48(%rsp),%rax
  0x0000000002c33460: mov    0x8(%rax),%rsi
  0x0000000002c33464: mov    (%rsi),%rdi
  0x0000000002c33467: and    $0x7,%rdi
  0x0000000002c3346b: cmp    $0x5,%rdi
  0x0000000002c3346f: je     0x0000000002c3348c
  0x0000000002c33475: mov    (%rax),%rdi
  0x0000000002c33478: test   %rdi,%rdi
  0x0000000002c3347b: je     0x0000000002c3348c
  0x0000000002c33481: lock cmpxchg %rdi,(%rsi)
  0x0000000002c33486: jne    0x0000000002c33499
  0x0000000002c3348c: mov    %rbx,%rax
  0x0000000002c3348f: add    $0x60,%rsp
  0x0000000002c33493: pop    %rbp
  0x0000000002c33494: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c33499: lea    0x48(%rsp),%rax
  0x0000000002c3349e: mov    %rax,(%rsp)
  0x0000000002c334a2: callq  0x0000000002c2fa60  ;   {runtime_call}
  0x0000000002c334a7: jmp    0x0000000002c3348c
  0x0000000002c334a9: hlt    
  0x0000000002c334aa: hlt    
  0x0000000002c334ab: hlt    
  0x0000000002c334ac: hlt    
  0x0000000002c334ad: hlt    
  0x0000000002c334ae: hlt    
  0x0000000002c334af: hlt    
  0x0000000002c334b0: hlt    
  0x0000000002c334b1: hlt    
  0x0000000002c334b2: hlt    
  0x0000000002c334b3: hlt    
  0x0000000002c334b4: hlt    
  0x0000000002c334b5: hlt    
  0x0000000002c334b6: hlt    
  0x0000000002c334b7: hlt    
  0x0000000002c334b8: hlt    
  0x0000000002c334b9: hlt    
  0x0000000002c334ba: hlt    
  0x0000000002c334bb: hlt    
  0x0000000002c334bc: hlt    
  0x0000000002c334bd: hlt    
  0x0000000002c334be: hlt    
  0x0000000002c334bf: hlt    
[Stub Code]
  0x0000000002c334c0: nop                       ;   {no_reloc}
  0x0000000002c334c1: nop
  0x0000000002c334c2: nop
  0x0000000002c334c3: nop
  0x0000000002c334c4: nop
  0x0000000002c334c5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c334cf: jmpq   0x0000000002c334cf  ;   {runtime_call}
  0x0000000002c334d4: nop
  0x0000000002c334d5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c334df: jmpq   0x0000000002c334df  ;   {runtime_call}
[Exception Handler]
  0x0000000002c334e4: callq  0x0000000002c2eb20  ;   {runtime_call}
  0x0000000002c334e9: mov    %rsp,-0x28(%rsp)
  0x0000000002c334ee: sub    $0x80,%rsp
  0x0000000002c334f5: mov    %rax,0x78(%rsp)
  0x0000000002c334fa: mov    %rcx,0x70(%rsp)
  0x0000000002c334ff: mov    %rdx,0x68(%rsp)
  0x0000000002c33504: mov    %rbx,0x60(%rsp)
  0x0000000002c33509: mov    %rbp,0x50(%rsp)
  0x0000000002c3350e: mov    %rsi,0x48(%rsp)
  0x0000000002c33513: mov    %rdi,0x40(%rsp)
  0x0000000002c33518: mov    %r8,0x38(%rsp)
  0x0000000002c3351d: mov    %r9,0x30(%rsp)
  0x0000000002c33522: mov    %r10,0x28(%rsp)
  0x0000000002c33527: mov    %r11,0x20(%rsp)
  0x0000000002c3352c: mov    %r12,0x18(%rsp)
  0x0000000002c33531: mov    %r13,0x10(%rsp)
  0x0000000002c33536: mov    %r14,0x8(%rsp)
  0x0000000002c3353b: mov    %r15,(%rsp)
  0x0000000002c3353f: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c33549: movabs $0x2c334e9,%rdx    ;   {internal_word}
  0x0000000002c33553: mov    %rsp,%r8
  0x0000000002c33556: and    $0xfffffffffffffff0,%rsp
  0x0000000002c3355a: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c3355f: hlt    
[Deopt Handler Code]
  0x0000000002c33560: movabs $0x2c33560,%r10    ;   {section_word}
  0x0000000002c3356a: push   %r10
  0x0000000002c3356c: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c33571: hlt    
  0x0000000002c33572: hlt    
  0x0000000002c33573: hlt    
  0x0000000002c33574: hlt    
  0x0000000002c33575: hlt    
  0x0000000002c33576: hlt    
  0x0000000002c33577: hlt    
<nmethod compile_id='3' compiler='C1' level='3' entry='0x0000000002c32f20' size='2896' address='0x0000000002c32d90' relocation_offset='288' insts_offset='400' stub_offset='1840' scopes_data_offset='2032' scopes_pcs_offset='2360' dependencies_offset='2840' nul_chk_table_offset='2848' method='java/util/Hashtable get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='69' count='272' backedge_count='58' iicount='272' stamp='0.367'/>
<writer thread='20984'/>
[Loaded sun.misc.PostVMInitHook from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
<writer thread='8488'/>
Decoding compiled method 0x0000000002c3fe10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000019255058} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  0x0000000002c3ff60: int3   
  0x0000000002c3ff61: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c3ff6c: data16 data16 xchg %ax,%ax
  0x0000000002c3ff70: mov    %eax,-0x6000(%rsp)
  0x0000000002c3ff77: push   %rbp
  0x0000000002c3ff78: sub    $0x50,%rsp
  0x0000000002c3ff7c: mov    (%rdx),%r13d
  0x0000000002c3ff7f: mov    0x10(%rdx),%ebx
  0x0000000002c3ff82: mov    0x18(%rdx),%r14
  0x0000000002c3ff86: mov    0x8(%rdx),%rbp
  0x0000000002c3ff8a: mov    %rdx,%rcx
  0x0000000002c3ff8d: movabs $0x5b6bc170,%r10
  0x0000000002c3ff97: callq  *%r10
  0x0000000002c3ff9a: test   %r14,%r14
  0x0000000002c3ff9d: je     0x0000000002c40112
  0x0000000002c3ffa3: mov    0x8(%r14),%r11d
  0x0000000002c3ffa7: cmp    $0xf80002da,%r11d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002c3ffae: jne    0x0000000002c40195
  0x0000000002c3ffb4: mov    %r14,%r9
  0x0000000002c3ffb7: test   %rbp,%rbp
  0x0000000002c3ffba: je     0x0000000002c4011a
  0x0000000002c3ffc0: 
<writer thread='20984'/>
[Loaded sun.usagetracker.UsageTrackerClient from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
<writer thread='8488'/>
mov    0x8(%rbp),%r10d
  0x0000000002c3ffc4: cmp    $0xf8000041,%r10d  ;   {metadata({type array char})}
  0x0000000002c3ffcb: jne    0x0000000002c40195
  0x0000000002c3ffd1: test   %r9,%r9
  0x0000000002c3ffd4: je     0x0000000002c40149
  0x0000000002c3ffda: mov    0xc(%r9),%r10d     ;*getfield value
                                                ; - java.lang.String::hashCode@26 (line 1470)

  0x0000000002c3ffde: test   %r10d,%r10d
  0x0000000002c3ffe1: je     0x0000000002c4016d
  0x0000000002c3ffe7: mov    0xc(%r12,%r10,8),%edi  ;*arraylength
                                                ; - java.lang.String::hashCode@29 (line 1470)

  0x0000000002c3ffec: cmp    %edi,%r13d
  0x0000000002c3ffef: jge    0x0000000002c40100  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000002c3fff5: mov    %ebx,%r11d
  0x0000000002c3fff8: shl    $0x5,%r11d
  0x0000000002c3fffc: sub    %ebx,%r11d         ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000000002c3ffff: test   %rbp,%rbp
  0x0000000002c40002: je     0x0000000002c401b1
  0x0000000002c40008: mov    0xc(%rbp),%edx
  0x0000000002c4000b: cmp    %edx,%r13d
  0x0000000002c4000e: jae    0x0000000002c40127  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000002c40014: movzwl 0x10(%rbp,%r13,2),%ebx
  0x0000000002c4001a: add    %r11d,%ebx         ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000000002c4001d: mov    %r13d,%esi
  0x0000000002c40020: inc    %esi               ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000000002c40022: cmp    %edi,%esi
  0x0000000002c40024: jge    0x0000000002c40100  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000002c4002a: add    $0x2,%r13d
  0x0000000002c4002e: xor    %r11d,%r11d
  0x0000000002c40031: cmp    %r11d,%r13d
  0x0000000002c40034: cmovl  %r11d,%r13d
  0x0000000002c40038: cmp    %edi,%r13d
  0x0000000002c4003b: cmovg  %edi,%r13d         ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000002c4003f: mov    %ebx,%r11d
  0x0000000002c40042: shl    $0x5,%r11d
  0x0000000002c40046: sub    %ebx,%r11d         ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000000002c40049: cmp    %edx,%esi
  0x0000000002c4004b: jae    0x0000000002c40121  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000002c40051: movzwl 0x10(%rbp,%rsi,2),%ebx
  0x0000000002c40056: add    %r11d,%ebx         ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000000002c40059: inc    %esi               ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000000002c4005b: cmp    %r13d,%esi
  0x0000000002c4005e: jl     0x0000000002c4003f  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000002c40060: cmp    %edx,%edi
  0x0000000002c40062: mov    %edi,%r11d
  0x0000000002c40065: cmovg  %edx,%r11d
  0x0000000002c40069: mov    %r11d,%r10d
  0x0000000002c4006c: add    $0xfffffffd,%r10d
  0x0000000002c40070: mov    $0x80000000,%r8d
  0x0000000002c40076: cmp    %r10d,%r11d
  0x0000000002c40079: cmovl  %r8d,%r10d
  0x0000000002c4007d: cmp    %r10d,%esi
  0x0000000002c40080: jge    0x0000000002c400df
  0x0000000002c40082: data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c4008c: data16 data16 xchg %ax,%ax  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000002c40090: movzwl 0x10(%rbp,%rsi,2),%r8d
  0x0000000002c40096: movslq %esi,%rcx
  0x0000000002c40099: movzwl 0x12(%rbp,%rcx,2),%r11d
  0x0000000002c4009f: movzwl 0x16(%rbp,%rcx,2),%r13d
  0x0000000002c400a5: movzwl 0x14(%rbp,%rcx,2),%ecx
  0x0000000002c400aa: mov    %ebx,%eax
  0x0000000002c400ac: shl    $0x5,%eax
  0x0000000002c400af: sub    %ebx,%eax
  0x0000000002c400b1: add    %r8d,%eax
  0x0000000002c400b4: mov    %eax,%ebx
  0x0000000002c400b6: shl    $0x5,%ebx
  0x0000000002c400b9: sub    %eax,%ebx
  0x0000000002c400bb: add    %r11d,%ebx
  0x0000000002c400be: mov    %ebx,%r11d
  0x0000000002c400c1: shl    $0x5,%r11d
  0x0000000002c400c5: sub    %ebx,%r11d
  0x0000000002c400c8: add    %ecx,%r11d
  0x0000000002c400cb: mov    %r11d,%ebx
  0x0000000002c400ce: shl    $0x5,%ebx
  0x0000000002c400d1: sub    %r11d,%ebx
  0x0000000002c400d4: add    %r13d,%ebx         ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000000002c400d7: add    $0x4,%esi          ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000000002c400da: cmp    %r10d,%esi
  0x0000000002c400dd: jl     0x0000000002c40090  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000002c400df: cmp    %edi,%esi
  0x0000000002c400e1: jge    0x0000000002c40100
  0x0000000002c400e3: nop                       ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000002c400e4: mov    %ebx,%r11d
  0x0000000002c400e7: shl    $0x5,%r11d
  0x0000000002c400eb: sub    %ebx,%r11d         ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000000002c400ee: cmp    %edx,%esi
  0x0000000002c400f0: jae    0x0000000002c40121  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000002c400f2: movzwl 0x10(%rbp,%rsi,2),%ebx
  0x0000000002c400f7: add    %r11d,%ebx         ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000000002c400fa: inc    %esi               ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000000002c400fc: cmp    %edi,%esi
  0x0000000002c400fe: jl     0x0000000002c400e4  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000002c40100: mov    %ebx,0x10(%r9)     ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x0000000002c40104: mov    %ebx,%eax
  0x0000000002c40106: add    $0x50,%rsp
  0x0000000002c4010a: pop    %rbp
  0x0000000002c4010b: test   %eax,-0x2570111(%rip)        # 0x00000000006d0000
                                                ;   {poll_return}
  0x0000000002c40111: retq   
  0x0000000002c40112: xor    %r9d,%r9d
  0x0000000002c40115: jmpq   0x0000000002c3ffb7
  0x0000000002c4011a: xor    %ebp,%ebp
  0x0000000002c4011c: jmpq   0x0000000002c3ffd1
  0x0000000002c40121: mov    %ebx,0x20(%rsp)
  0x0000000002c40125: jmp    0x0000000002c4012e
  0x0000000002c40127: mov    %r13d,%esi
  0x0000000002c4012a: mov    %ebx,0x20(%rsp)
  0x0000000002c4012e: mov    $0xffffffe4,%edx
  0x0000000002c40133: mov    %r11d,0x28(%rsp)
  0x0000000002c40138: mov    %esi,0x2c(%rsp)
  0x0000000002c4013c: mov    %r9,0x38(%rsp)
  0x0000000002c40141: xchg   %ax,%ax
  0x0000000002c40143: callq  0x0000000002b757a0  ; OopMap{rbp=Oop [56]=Oop off=488}
                                                ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ;   {runtime_call}
  0x0000000002c40148: int3                      ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000002c40149: mov    0x39c(%r15),%r10d
  0x0000000002c40150: test   %r10d,%r10d
  0x0000000002c40153: jne    0x0000000002c401d9  ;*getfield value
                                                ; - java.lang.String::hashCode@26 (line 1470)

  0x0000000002c40159: mov    $0xfffffff6,%edx
  0x0000000002c4015e: mov    %ebx,0x20(%rsp)
  0x0000000002c40162: mov    %r13d,0x28(%rsp)
  0x0000000002c40167: callq  0x0000000002b757a0  ; OopMap{rbp=Oop off=524}
                                                ;*getfield value
                                                ; - java.lang.String::hashCode@26 (line 1470)
                                                ;   {runtime_call}
  0x0000000002c4016c: int3                      ;*getfield value
                                                ; - java.lang.String::hashCode@26 (line 1470)

  0x0000000002c4016d: mov    0x39c(%r15),%r10d
  0x0000000002c40174: test   %r10d,%r10d
  0x0000000002c40177: jne    0x0000000002c401ed
  0x0000000002c40179: mov    $0xfffffff6,%edx
  0x0000000002c4017e: mov    %ebx,0x20(%rsp)
  0x0000000002c40182: mov    %r9,0x28(%rsp)
  0x0000000002c40187: mov    %r13d,0x30(%rsp)
  0x0000000002c4018c: data16 xchg %ax,%ax
  0x0000000002c4018f: callq  0x0000000002b757a0  ; OopMap{rbp=Oop [40]=Oop off=564}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@29 (line 1470)
                                                ;   {runtime_call}
  0x0000000002c40194: int3   
  0x0000000002c40195: mov    $0xffffff9d,%edx
  0x0000000002c4019a: mov    %ebx,0x20(%rsp)
  0x0000000002c4019e: mov    %r14,0x28(%rsp)
  0x0000000002c401a3: mov    %r13d,0x24(%rsp)
  0x0000000002c401a8: data16 xchg %ax,%ax
  0x0000000002c401ab: callq  0x0000000002b757a0  ; OopMap{rbp=Oop [40]=Oop off=592}
                                                ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)
                                                ;   {runtime_call}
  0x0000000002c401b0: int3                      ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x0000000002c401b1: mov    0x39c(%r15),%r10d
  0x0000000002c401b8: test   %r10d,%r10d
  0x0000000002c401bb: jne    0x0000000002c40209
  0x0000000002c401bd: mov    $0xfffffff6,%edx
  0x0000000002c401c2: mov    %ebx,%ebp
  0x0000000002c401c4: mov    %r11d,0x20(%rsp)
  0x0000000002c401c9: mov    %r9,0x28(%rsp)
  0x0000000002c401ce: mov    %r13d,0x30(%rsp)
  0x0000000002c401d3: callq  0x0000000002b757a0  ; OopMap{[40]=Oop off=632}
                                                ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ;   {runtime_call}
  0x0000000002c401d8: int3                      ;*getfield value
                                                ; - java.lang.String::hashCode@26 (line 1470)

  0x0000000002c401d9: mov    $0xfffffff7,%edx
  0x0000000002c401de: mov    %ebx,0x20(%rsp)
  0x0000000002c401e2: mov    %r13d,0x28(%rsp)
  0x0000000002c401e7: callq  0x0000000002b757a0  ; OopMap{rbp=Oop off=652}
                                                ;*getfield value
                                                ; - java.lang.String::hashCode@26 (line 1470)
                                                ;   {runtime_call}
  0x0000000002c401ec: int3   
  0x0000000002c401ed: mov    $0xfffffff7,%edx
  0x0000000002c401f2: mov    %ebx,0x20(%rsp)
  0x0000000002c401f6: mov    %r9,0x28(%rsp)
  0x0000000002c401fb: mov    %r13d,0x30(%rsp)
  0x0000000002c40200: data16 xchg %ax,%ax
  0x0000000002c40203: callq  0x0000000002b757a0  ; OopMap{rbp=Oop [40]=Oop off=680}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@29 (line 1470)
                                                ;   {runtime_call}
  0x0000000002c40208: int3   
  0x0000000002c40209: mov    $0xfffffff7,%edx
  0x0000000002c4020e: mov    %ebx,%ebp
  0x0000000002c40210: mov    %r11d,0x20(%rsp)
  0x0000000002c40215: mov    %r9,0x28(%rsp)
  0x0000000002c4021a: mov    %r13d,0x30(%rsp)
  0x0000000002c4021f: callq  0x0000000002b757a0  ; OopMap{[40]=Oop off=708}
                                                ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ;   {runtime_call}
  0x0000000002c40224: int3                      ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000002c40225: hlt    
  0x0000000002c40226: hlt    
  0x0000000002c40227: hlt    
  0x0000000002c40228: hlt    
  0x0000000002c40229: hlt    
  0x0000000002c4022a: hlt    
  0x0000000002c4022b: hlt    
  0x0000000002c4022c: hlt    
  0x0000000002c4022d: hlt    
  0x0000000002c4022e: hlt    
  0x0000000002c4022f: hlt    
  0x0000000002c40230: hlt    
  0x0000000002c40231: hlt    
  0x0000000002c40232: hlt    
  0x0000000002c40233: hlt    
  0x0000000002c40234: hlt    
  0x0000000002c40235: hlt    
  0x0000000002c40236: hlt    
  0x0000000002c40237: hlt    
  0x0000000002c40238: hlt    
  0x0000000002c40239: hlt    
  0x0000000002c4023a: hlt    
  0x0000000002c4023b: hlt    
  0x0000000002c4023c: hlt    
  0x0000000002c4023d: hlt    
  0x0000000002c4023e: hlt    
  0x0000000002c4023f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c40240: jmpq   0x0000000002b87ee0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002c40245: callq  0x0000000002c4024a
  0x0000000002c4024a: subq   $0x5,(%rsp)
  0x0000000002c4024f: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c40254: hlt    
  0x0000000002c40255: hlt    
  0x0000000002c40256: hlt    
  0x0000000002c40257: hlt    
<nmethod compile_id='2' compile_kind='osr' compiler='C2' level='4' entry='0x0000000002c3ff60' size='1968' address='0x0000000002c3fe10' relocation_offset='288' insts_offset='336' stub_offset='1072' scopes_data_offset='1120' scopes_pcs_offset='1304' dependencies_offset='1960' method='java/lang/String hashCode ()I' bytes='55' count='2978' backedge_count='62952' iicount='2978' stamp='0.372'/>
<writer thread='20984'/>
[Loaded java.util.concurrent.atomic.AtomicBoolean from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
<task_queued compile_id='4' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='640' iicount='640' level='3' stamp='0.372' comment='tiered' hot_count='640'/>
[Loaded sun.usagetracker.UsageTrackerClient$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
<task_queued compile_id='5' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='29568' backedge_count='17672' iicount='29568' stamp='0.373' comment='tiered' hot_count='29568'/>
<writer thread='9088'/>
Decoding compiled method 0x0000000002c35a10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019278d58} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/
<writer thread='20984'/>
[Loaded sun.usagetracker.UsageTrackerClient$4 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
<writer thread='9088'/>
Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;
  # this:     rdx:rdx   = &apos;java/lang/ref/Reference&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = &apos;java/lang/ref/ReferenceQueue&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002c35b80: mov    0x8(%rdx),%r10d
  0x0000000002c35b84: shl    $0x3,%r10
  0x0000000002c35b88: cmp    %rax,%r10
  0x0000000002c35b8b: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c35b91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c35b9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c35ba0: mov    %eax,-0x6000(%rsp)
  0x0000000002c35ba7: push   %rbp
  0x0000000002c35ba8: sub    $0x30,%rsp
  0x0000000002c35bac: movabs $0x19491d60,%rsi   ;   {metadata(method data for {method} {0x0000000019278d58} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000000002c35bb6: mov    0xdc(%rsi),%edi
  0x0000000002c35bbc: add    $0x8,%edi
  0x0000000002c35bbf: mov    %edi,0xdc(%rsi)
  0x0000000002c35bc5: movabs $0x19278d50,%rsi   ;   {metadata({method} {0x0000000019278d58} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000000002c35bcf: and    $0x1ff8,%edi
  0x0000000002c35bd5: cmp    $0x0,%edi
  0x0000000002c35bd8: je     0x0000000002c35cd6  ;*aload_0
                                                ; - java.lang.ref.Reference::&lt;init&gt;@0 (line 306)

  0x0000000002c35bde: mov    %rdx,%rsi
  0x0000000002c35be1: movabs $0x19491d60,%rdi   ;   {metadata(method data for {method} {0x0000000019278d58} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000000002c35beb: addq   $0x1,0x108(%rdi)
  0x0000000002c35bf3: movabs $0x19387898,%rsi   ;   {metadata(method data for {method} {0x0000000019250488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002c35bfd: mov    0xdc(%rsi),%edi
  0x0000000002c35c03: add    $0x8,%edi
  0x0000000002c35c06: mov    %edi,0xdc(%rsi)
  0x0000000002c35c0c: movabs $0x19250480,%rsi   ;   {metadata({method} {0x0000000019250488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002c35c16: and    $0x7ffff8,%edi
  0x0000000002c35c1c: cmp    $0x0,%edi
  0x0000000002c35c1f: je     0x0000000002c35ced
  0x0000000002c35c25: mov    %r8,%r10
  0x0000000002c35c28: shr    $0x3,%r10
  0x0000000002c35c2c: mov    %r10d,0xc(%rdx)
  0x0000000002c35c30: mov    %rdx,%rsi
  0x0000000002c35c33: shr    $0x9,%rsi
  0x0000000002c35c37: movabs $0xe6e6000,%rdi
  0x0000000002c35c41: movb   $0x0,(%rsi,%rdi,1)  ;*putfield referent
                                                ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 307)

  0x0000000002c35c45: cmp    $0x0,%r9
  0x0000000002c35c49: movabs $0x19491d60,%rsi   ;   {metadata(method data for {method} {0x0000000019278d58} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000000002c35c53: movabs $0x118,%rdi
  0x0000000002c35c5d: jne    0x0000000002c35c6d
  0x0000000002c35c63: movabs $0x128,%rdi
  0x0000000002c35c6d: mov    (%rsi,%rdi,1),%rbx
  0x0000000002c35c71: lea    0x1(%rbx),%rbx
  0x0000000002c35c75: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002c35c79: jne    0x0000000002c35ca5  ;*ifnonnull
                                                ; - java.lang.ref.Reference::&lt;init&gt;@11 (line 308)

  0x0000000002c35c7f: movabs $0x7807073e0,%rsi  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x0000000002c35c89: mov    0x68(%rsi),%esi
  0x0000000002c35c8c: shl    $0x3,%rsi          ;*getstatic NULL
                                                ; - java.lang.ref.Reference::&lt;init&gt;@14 (line 308)

  0x0000000002c35c90: movabs $0x19491d60,%rdi   ;   {metadata(method data for {method} {0x0000000019278d58} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000000002c35c9a: incl   0x138(%rdi)
  0x0000000002c35ca0: jmpq   0x0000000002c35ca8  ;*goto
                                                ; - java.lang.ref.Reference::&lt;init&gt;@17 (line 308)

  0x0000000002c35ca5: mov    %r9,%rsi
  0x0000000002c35ca8: mov    %rsi,%r10
  0x0000000002c35cab: shr    $0x3,%r10
  0x0000000002c35caf: mov    %r10d,0x10(%rdx)
  0x0000000002c35cb3: shr    $0x9,%rdx
  0x0000000002c35cb7: movabs $0xe6e6000,%rsi
  0x0000000002c35cc1: movb   $0x0,(%rdx,%rsi,1)
  0x0000000002c35cc5: lock addl $0x0,(%rsp)     ;*putfield queue
                                                ; - java.lang.ref.Reference::&lt;init&gt;@21 (line 308)

  0x0000000002c35cca: add    $0x30,%rsp
  0x0000000002c35cce: pop    %rbp
  0x0000000002c35ccf: test   %eax,-0x2565bd5(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c35cd5: retq   
  0x0000000002c35cd6: mov    %rsi,0x8(%rsp)
  0x0000000002c35cdb: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c35ce3: callq  0x0000000002c31360  ; OopMap{rdx=Oop r8=Oop r9=Oop off=360}
                                                ;*synchronization entry
                                                ; - java.lang.ref.Reference::&lt;init&gt;@-1 (line 306)
                                                ;   {runtime_call}
  0x0000000002c35ce8: jmpq   0x0000000002c35bde
  0x0000000002c35ced: mov    %rsi,0x8(%rsp)
  0x0000000002c35cf2: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c35cfa: callq  0x0000000002c31360  ; OopMap{rdx=Oop r8=Oop r9=Oop off=383}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.ref.Reference::&lt;init&gt;@1 (line 306)
                                                ;   {runtime_call}
  0x0000000002c35cff: jmpq   0x0000000002c35c25
  0x0000000002c35d04: nop
  0x0000000002c35d05: nop
  0x0000000002c35d06: mov    0x2a8(%r15),%rax
  0x0000000002c35d0d: movabs $0x0,%r10
  0x0000000002c35d17: mov    %r10,0x2a8(%r15)
  0x0000000002c35d1e: movabs $0x0,%r10
  0x0000000002c35d28: mov    %r10,0x2b0(%r15)
  0x0000000002c35d2f: add    $0x30,%rsp
  0x0000000002c35d33: pop    %rbp
  0x0000000002c35d34: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c35d39: hlt    
  0x0000000002c35d3a: hlt    
  0x0000000002c35d3b: hlt    
  0x0000000002c35d3c: hlt    
  0x0000000002c35d3d: hlt    
  0x0000000002c35d3e: hlt    
  0x0000000002c35d3f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c35d40: callq  0x0000000002c2eb20  ;   {no_reloc}
  0x0000000002c35d45: mov    %rsp,-0x28(%rsp)
  0x0000000002c35d4a: sub    $0x80,%rsp
  0x0000000002c35d51: mov    %rax,0x78(%rsp)
  0x0000000002c35d56: mov    %rcx,0x70(%rsp)
  0x0000000002c35d5b: mov    %rdx,0x68(%rsp)
  0x0000000002c35d60: mov    %rbx,0x60(%rsp)
  0x0000000002c35d65: mov    %rbp,0x50(%rsp)
  0x0000000002c35d6a: mov    %rsi,0x48(%rsp)
  0x0000000002c35d6f: mov    %rdi,0x40(%rsp)
  0x0000000002c35d74: mov    %r8,0x38(%rsp)
  0x0000000002c35d79: mov    %r9,0x30(%rsp)
  0x0000000002c35d7e: mov    %r10,0x28(%rsp)
  0x0000000002c35d83: mov    %r11,0x20(%rsp)
  0x0000000002c35d88: mov    %r12,0x18(%rsp)
  0x0000000002c35d8d: mov    %r13,0x10(%rsp)
  0x0000000002c35d92: mov    %r14,0x8(%rsp)
  0x0000000002c35d97: mov    %r15,(%rsp)
  0x0000000002c35d9b: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c35da5: movabs $0x2c35d45,%rdx    ;   {internal_word}
  0x0000000002c35daf: mov    %rsp,%r8
  0x0000000002c35db2: and    $0xfffffffffffffff0,%rsp
  0x0000000002c35db6: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c35dbb: hlt    
[Deopt Handler Code]
  0x0000000002c35dbc: movabs $0x2c35dbc,%r10    ;   {section_word}
  0x0000000002c35dc6: push   %r10
  0x0000000002c35dc8: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c35dcd: hlt    
  0x0000000002c35dce: hlt    
  0x0000000002c35dcf: hlt    
<nmethod compile_id='4' compiler='C1' level='3' entry='0x0000000002c35b80' size='1224' address='0x0000000002c35a10' relocation_offset='288' insts_offset='368' stub_offset='816' scopes_data_offset='984' scopes_pcs_offset='1056' dependencies_offset='1216' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='640' iicount='640' stamp='0.375'/>
<writer thread='20984'/>
[Loaded sun.usagetracker.UsageTrackerClient$2 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ProcessEnvironment from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.ProcessEnvironment$NameComparator from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
<task_queued compile_id='6' method='java/util/HashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='23' count='1024' iicount='1024' level='3' stamp='0.376' comment='tiered' hot_count='1024'/>
[Loaded java.lang.ProcessEnvironment$EntryComparator from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.util.Collections$UnmodifiableMap from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
<task_queued compile_id='7' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='512' iicount='512' level='3' stamp='0.376' comment='tiered' hot_count='512'/>
<task_queued compile_id='8' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='512' iicount='512' level='3' stamp='0.376' comment='tiered' hot_count='512'/>
<writer thread='9088'/>
Decoding compiled method 0x0000000002c35250:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001933b8f8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x70]  (sp of caller)
  0x0000000002c353e0: mov    0x8(%rdx),%r10d
  0x0000000002c353e4: shl    $0x3,%r10
  0x0000000002c353e8: cmp    %rax,%r10
  0x0000000002c353eb: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c353f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c353fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c35400: mov    %eax,-0x6000(%rsp)
  0x0000000002c35407: push   %rbp
  0x0000000002c35408: sub    $0x60,%rsp
  0x0000000002c3540c: movabs $0x1948fc90,%rsi   ;   {metadata(method data for {method} {0x000000001933b8f8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c35416: mov    0xdc(%rsi),%edi
  0x0000000002c3541c: add    $0x8,%edi
  0x0000000002c3541f: mov    %edi,0xdc(%rsi)
  0x0000000002c35425: movabs $0x1933b8f0,%rsi   ;   {metadata({method} {0x000000001933b8f8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c3542f: and    $0x1ff8,%edi
  0x0000000002c35435: cmp    $0x0,%edi
  0x0000000002c35438: je     0x0000000002c356cc  ;*aload_0
                                                ; - java.util.HashMap::get@0 (line 556)

  0x0000000002c3543e: movabs $0x1948fc90,%rsi   ;   {metadata(method data for {method} {0x000000001933b8f8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c35448: addq   $0x1,0x108(%rsi)
  0x0000000002c35450: movabs $0x19445bf0,%rsi   ;   {metadata(method data for {method} {0x000000001933b078} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c3545a: mov    0xdc(%rsi),%edi
  0x0000000002c35460: add    $0x8,%edi
  0x0000000002c35463: mov    %edi,0xdc(%rsi)
  0x0000000002c35469: movabs $0x1933b070,%rsi   ;   {metadata({method} {0x000000001933b078} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c35473: and    $0x7ffff8,%edi
  0x0000000002c35479: cmp    $0x0,%edi
  0x0000000002c3547c: je     0x0000000002c356e3
  0x0000000002c35482: cmp    $0x0,%r8
  0x0000000002c35486: movabs $0x19445bf0,%rsi   ;   {metadata(method data for {method} {0x000000001933b078} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c35490: movabs $0x108,%rdi
  0x0000000002c3549a: jne    0x0000000002c354aa
  0x0000000002c354a0: movabs $0x118,%rdi
  0x0000000002c354aa: mov    (%rsi,%rdi,1),%rbx
  0x0000000002c354ae: lea    0x1(%rbx),%rbx
  0x0000000002c354b2: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002c354b6: jne    0x0000000002c354e0  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 338)
                                                ; - java.util.HashMap::get@2 (line 556)

  0x0000000002c354bc: movabs $0x19445bf0,%rsi   ;   {metadata(method data for {method} {0x000000001933b078} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c354c6: incl   0x128(%rsi)
  0x0000000002c354cc: mov    $0x0,%esi
  0x0000000002c354d1: mov    %r8,0x48(%rsp)
  0x0000000002c354d6: mov    %rdx,0x40(%rsp)
  0x0000000002c354db: jmpq   0x0000000002c355a1  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 338)
                                                ; - java.util.HashMap::get@2 (line 556)

  0x0000000002c354e0: mov    %rdx,0x40(%rsp)
  0x0000000002c354e5: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x0000000002c356fa
  0x0000000002c354e8: mov    %r8,%rsi
  0x0000000002c354eb: movabs $0x19445bf0,%rdi   ;   {metadata(method data for {method} {0x000000001933b078} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c354f5: mov    0x8(%rsi),%esi
  0x0000000002c354f8: shl    $0x3,%rsi
  0x0000000002c354fc: cmp    0x148(%rdi),%rsi
  0x0000000002c35503: jne    0x0000000002c35512
  0x0000000002c35505: addq   $0x1,0x150(%rdi)
  0x0000000002c3550d: jmpq   0x0000000002c35578
  0x0000000002c35512: cmp    0x158(%rdi),%rsi
  0x0000000002c35519: jne    0x0000000002c35528
  0x0000000002c3551b: addq   $0x1,0x160(%rdi)
  0x0000000002c35523: jmpq   0x0000000002c35578
  0x0000000002c35528: cmpq   $0x0,0x148(%rdi)
  0x0000000002c35533: jne    0x0000000002c3554c
  0x0000000002c35535: mov    %rsi,0x148(%rdi)
  0x0000000002c3553c: movq   $0x1,0x150(%rdi)
  0x0000000002c35547: jmpq   0x0000000002c35578
  0x0000000002c3554c: cmpq   $0x0,0x158(%rdi)
  0x0000000002c35557: jne    0x0000000002c35570
  0x0000000002c35559: mov    %rsi,0x158(%rdi)
  0x0000000002c35560: movq   $0x1,0x160(%rdi)
  0x0000000002c3556b: jmpq   0x0000000002c35578
  0x0000000002c35570: addq   $0x1,0x140(%rdi)
  0x0000000002c35578: mov    %r8,%rdx           ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::get@2 (line 556)

  0x0000000002c3557b: mov    %r8,0x48(%rsp)
  0x0000000002c35580: nop
  0x0000000002c35581: nop
  0x0000000002c35582: nop
  0x0000000002c35583: nop
  0x0000000002c35584: nop
  0x0000000002c35585: movabs $0xffffffffffffffff,%rax
  0x0000000002c3558f: callq  0x0000000002b763e0  ; OopMap{[72]=Oop [64]=Oop off=436}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::get@2 (line 556)
                                                ;   {virtual_call}
  0x0000000002c35594: mov    %rax,%r8
  0x0000000002c35597: shr    $0x10,%r8d
  0x0000000002c3559b: xor    %rax,%r8
  0x0000000002c3559e: mov    %r8,%rsi           ;*ireturn
                                                ; - java.util.HashMap::hash@19 (line 338)
                                                ; - java.util.HashMap::get@2 (line 556)

  0x0000000002c355a1: mov    0x40(%rsp),%rdx
  0x0000000002c355a6: movabs $0x1948fc90,%r8    ;   {metadata(method data for {method} {0x000000001933b8f8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c355b0: mov    0x8(%rdx),%edx
  0x0000000002c355b3: shl    $0x3,%rdx
  0x0000000002c355b7: cmp    0x120(%r8),%rdx
  0x0000000002c355be: jne    0x0000000002c355cd
  0x0000000002c355c0: addq   $0x1,0x128(%r8)
  0x0000000002c355c8: jmpq   0x0000000002c35633
  0x0000000002c355cd: cmp    0x130(%r8),%rdx
  0x0000000002c355d4: jne    0x0000000002c355e3
  0x0000000002c355d6: addq   $0x1,0x138(%r8)
  0x0000000002c355de: jmpq   0x0000000002c35633
  0x0000000002c355e3: cmpq   $0x0,0x120(%r8)
  0x0000000002c355ee: jne    0x0000000002c35607
  0x0000000002c355f0: mov    %rdx,0x120(%r8)
  0x0000000002c355f7: movq   $0x1,0x128(%r8)
  0x0000000002c35602: jmpq   0x0000000002c35633
  0x0000000002c35607: cmpq   $0x0,0x130(%r8)
  0x0000000002c35612: jne    0x0000000002c3562b
  0x0000000002c35614: mov    %rdx,0x130(%r8)
  0x0000000002c3561b: movq   $0x1,0x138(%r8)
  0x0000000002c35626: jmpq   0x0000000002c35633
  0x0000000002c3562b: addq   $0x1,0x118(%r8)
  0x0000000002c35633: mov    %rsi,%r8
  0x0000000002c35636: mov    0x48(%rsp),%r9
  0x0000000002c3563b: mov    0x40(%rsp),%rdx    ;*invokevirtual getNode
                                                ; - java.util.HashMap::get@6 (line 556)

  0x0000000002c35640: nop
  0x0000000002c35641: nop
  0x0000000002c35642: nop
  0x0000000002c35643: nop
  0x0000000002c35644: nop
  0x0000000002c35645: nop
  0x0000000002c35646: nop
  0x0000000002c35647: callq  0x0000000002b761a0  ; OopMap{[72]=Oop [64]=Oop off=620}
                                                ;*invokevirtual getNode
                                                ; - java.util.HashMap::get@6 (line 556)
                                                ;   {optimized virtual_call}
  0x0000000002c3564c: cmp    $0x0,%rax
  0x0000000002c35650: movabs $0x1948fc90,%rsi   ;   {metadata(method data for {method} {0x000000001933b8f8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c3565a: movabs $0x148,%rdi
  0x0000000002c35664: jne    0x0000000002c35674
  0x0000000002c3566a: movabs $0x158,%rdi
  0x0000000002c35674: mov    (%rsi,%rdi,1),%rbx
  0x0000000002c35678: lea    0x1(%rbx),%rbx
  0x0000000002c3567c: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002c35680: jne    0x0000000002c356ac  ;*ifnonnull
                                                ; - java.util.HashMap::get@11 (line 556)

  0x0000000002c35686: movabs $0x1948fc90,%rax   ;   {metadata(method data for {method} {0x000000001933b8f8} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c35690: incl   0x168(%rax)
  0x0000000002c35696: movabs $0x0,%rax          ;*goto
                                                ; - java.util.HashMap::get@15 (line 556)
                                                ;   {oop(NULL)}
  0x0000000002c356a0: add    $0x60,%rsp
  0x0000000002c356a4: pop    %rbp
  0x0000000002c356a5: test   %eax,-0x25655ab(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c356ab: retq   
  0x0000000002c356ac: mov    0x48(%rsp),%r8
  0x0000000002c356b1: mov    0x40(%rsp),%rdx
  0x0000000002c356b6: mov    0x14(%rax),%esi    ; implicit exception: dispatches to 0x0000000002c356ff
  0x0000000002c356b9: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.util.HashMap::get@19 (line 556)

  0x0000000002c356bd: mov    %rsi,%rax          ;*areturn
                                                ; - java.util.HashMap::get@22 (line 556)

  0x0000000002c356c0: add    $0x60,%rsp
  0x0000000002c356c4: pop    %rbp
  0x0000000002c356c5: test   %eax,-0x25655cb(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c356cb: retq   
  0x0000000002c356cc: mov    %rsi,0x8(%rsp)
  0x0000000002c356d1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c356d9: callq  0x0000000002c31360  ; OopMap{rdx=Oop r8=Oop off=766}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::get@-1 (line 556)
                                                ;   {runtime_call}
  0x0000000002c356de: jmpq   0x0000000002c3543e
  0x0000000002c356e3: mov    %rsi,0x8(%rsp)
  0x0000000002c356e8: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c356f0: callq  0x0000000002c31360  ; OopMap{rdx=Oop r8=Oop off=789}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ; - java.util.HashMap::get@2 (line 556)
                                                ;   {runtime_call}
  0x0000000002c356f5: jmpq   0x0000000002c35482
  0x0000000002c356fa: callq  0x0000000002c2cc80  ; OopMap{r8=Oop [64]=Oop off=799}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::get@2 (line 556)
                                                ;   {runtime_call}
  0x0000000002c356ff: callq  0x0000000002c2cc80  ; OopMap{rdx=Oop r8=Oop rax=Oop off=804}
                                                ;*getfield value
                                                ; - java.util.HashMap::get@19 (line 556)
                                                ;   {runtime_call}
  0x0000000002c35704: nop
  0x0000000002c35705: nop
  0x0000000002c35706: mov    0x2a8(%r15),%rax
  0x0000000002c3570d: movabs $0x0,%r10
  0x0000000002c35717: mov    %r10,0x2a8(%r15)
  0x0000000002c3571e: movabs $0x0,%r10
  0x0000000002c35728: mov    %r10,0x2b0(%r15)
  0x0000000002c3572f: add    $0x60,%rsp
  0x0000000002c35733: pop    %rbp
  0x0000000002c35734: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c35739: hlt    
  0x0000000002c3573a: hlt    
  0x0000000002c3573b: hlt    
  0x0000000002c3573c: hlt    
  0x0000000002c3573d: hlt    
  0x0000000002c3573e: hlt    
  0x0000000002c3573f: hlt    
[Stub Code]
  0x0000000002c35740: nop                       ;   {no_reloc}
  0x0000000002c35741: nop
  0x0000000002c35742: nop
  0x0000000002c35743: nop
  0x0000000002c35744: nop
  0x0000000002c35745: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c3574f: jmpq   0x0000000002c3574f  ;   {runtime_call}
  0x0000000002c35754: nop
  0x0000000002c35755: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c3575f: jmpq   0x0000000002c3575f  ;   {runtime_call}
[Exception Handler]
  0x0000000002c35764: callq  0x0000000002c2eb20  ;   {runtime_call}
  0x0000000002c35769: mov    %rsp,-0x28(%rsp)
  0x0000000002c3576e: sub    $0x80,%rsp
  0x0000000002c35775: mov    %rax,0x78(%rsp)
  0x0000000002c3577a: mov    %rcx,0x70(%rsp)
  0x0000000002c3577f: mov    %rdx,0x68(%rsp)
  0x0000000002c35784: mov    %rbx,0x60(%rsp)
  0x0000000002c35789: mov    %rbp,0x50(%rsp)
  0x0000000002c3578e: mov    %rsi,0x48(%rsp)
  0x0000000002c35793: mov    %rdi,0x40(%rsp)
  0x0000000002c35798: mov    %r8,0x38(%rsp)
  0x0000000002c3579d: mov    %r9,0x30(%rsp)
  0x0000000002c357a2: mov    %r10,0x28(%rsp)
  0x0000000002c357a7: mov    %r11,0x20(%rsp)
  0x0000000002c357ac: mov    %r12,0x18(%rsp)
  0x0000000002c357b1: mov    %r13,0x10(%rsp)
  0x0000000002c357b6: mov    %r14,0x8(%rsp)
  0x0000000002c357bb: mov    %r15,(%rsp)
  0x0000000002c357bf: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c357c9: movabs $0x2c35769,%rdx    ;   {internal_word}
  0x0000000002c357d3: mov    %rsp,%r8
  0x0000000002c357d6: and    $0xfffffffffffffff0,%rsp
  0x0000000002c357da: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c357df: hlt    
[Deopt Handler Code]
  0x0000000002c357e0: movabs $0x2c357e0,%r10    ;   {section_word}
  0x0000000002c357ea: push   %r10
  0x0000000002c357ec: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c357f1: hlt    
  0x0000000002c357f2: hlt    
  0x0000000002c357f3: hlt    
  0x0000000002c357f4: hlt    
  0x0000000002c357f5: hlt    
  0x0000000002c357f6: hlt    
  0x0000000002c357f7: hlt    
<nmethod compile_id='6' compiler='C1' level='3' entry='0x0000000002c353e0' size='1960' address='0x0000000002c35250' relocation_offset='288' insts_offset='400' stub_offset='1264' scopes_data_offset='1464' scopes_pcs_offset='1640' dependencies_offset='1928' nul_chk_table_offset='1936' method='java/util/HashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='23' count='1027' iicount='1027' stamp='0.380'/>
<writer thread='20984'/>
<task_queued compile_id='9' compile_kind='osr' method='java/lang/String indexOf (II)I' bytes='70' count='1809' backedge_count='97280' iicount='1809' osr_bci='37' stamp='0.380' comment='tiered' hot_count='97280'/>
<writer thread='18064'/>
Decoding compiled method 0x0000000002c34950:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019254670} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000002c34aa0: mov    0x8(%rdx),%r10d
  0x0000000002c34aa4: shl    $0x3,%r10
  0x0000000002c34aa8: cmp    %r10,%rax
  0x0000000002c34aab: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c34ab1: data16 xchg %ax,%ax
  0x0000000002c34ab4: nopl   0x0(%rax,%rax,1)
  0x0000000002c34abc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c34ac0: mov    %eax,-0x6000(%rsp)
  0x0000000002c34ac7: push   %rbp
  0x0000000002c34ac8: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x0000000002c34acc: mov    %rdx,%r10
  0x0000000002c34acf: cmp    %r8,%rdx
  0x0000000002c34ad2: je     0x0000000002c34c9b  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x0000000002c34ad8: mov    0x8(%r8),%r11d     ; implicit exception: dispatches to 0x0000000002c34d81
  0x0000000002c34adc: cmp    $0xf80002da,%r11d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002c34ae3: jne    0x0000000002c34d6d  ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x0000000002c34ae9: mov    0xc(%rdx),%r11d
  0x0000000002c34aed: test   %r11d,%r11d
  0x0000000002c34af0: je     0x0000000002c34ca5
  0x0000000002c34af6: mov    0xc(%r12,%r11,8),%ecx  ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)

  0x0000000002c34afb: mov    0xc(%r8),%r9d      ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x0000000002c34aff: test   %r9d,%r9d
  0x0000000002c34b02: je     0x0000000002c34cc9
  0x0000000002c34b08: mov    0xc(%r12,%r9,8),%esi  ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)

  0x0000000002c34b0d: xor    %eax,%eax
  0x0000000002c34b0f: cmp    %esi,%ecx
  0x0000000002c34b11: je     0x0000000002c34b1f  ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x0000000002c34b13: add    $0x40,%rsp
  0x0000000002c34b17: pop    %rbp
  0x0000000002c34b18: test   %eax,-0x2564b1e(%rip)        # 0x00000000006d0000
                                                ;   {poll_return}
  0x0000000002c34b1e: retq   
  0x0000000002c34b1f: test   %ecx,%ecx
  0x0000000002c34b21: je     0x0000000002c34c91  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x0000000002c34b27: vmovq  %rdx,%xmm0
  0x0000000002c34b2c: mov    %ecx,%r10d
  0x0000000002c34b2f: dec    %r10d              ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x0000000002c34b32: vmovd  %r10d,%xmm1
  0x0000000002c34b37: movslq %ecx,%r10
  0x0000000002c34b3a: vmovq  %r10,%xmm2
  0x0000000002c34b3f: lea    (%r12,%r11,8),%r13
  0x0000000002c34b43: lea    (%r12,%r9,8),%rdx
  0x0000000002c34b47: mov    %ecx,%ebx
  0x0000000002c34b49: add    $0xfffffffe,%ebx
  0x0000000002c34b4c: mov    $0xffffffff,%r10d
  0x0000000002c34b52: cmp    %r10d,%ebx
  0x0000000002c34b55: mov    $0xffffffff,%edi
  0x0000000002c34b5a: cmovl  %edi,%ebx
  0x0000000002c34b5d: vmovd  %xmm1,%edi
  0x0000000002c34b61: vmovd  %xmm1,%r10d
  0x0000000002c34b66: sub    %edi,%r10d         ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x0000000002c34b69: cmp    %ecx,%r10d
  0x0000000002c34b6c: jae    0x0000000002c34cf1
  0x0000000002c34b72: movslq %edi,%rbp
  0x0000000002c34b75: vmovq  %xmm2,%r14
  0x0000000002c34b7a: sub    %rbp,%r14
  0x0000000002c34b7d: movzwl 0xe(%r13,%r14,2),%ebp  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000002c34b83: cmp    %esi,%r10d
  0x0000000002c34b86: jae    0x0000000002c34d19  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000002c34b8c: movzwl 0xe(%rdx,%r14,2),%r10d
  0x0000000002c34b92: cmp    %r10d,%ebp
  0x0000000002c34b95: jne    0x0000000002c34b13  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000002c34b9b: dec    %edi               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x0000000002c34b9d: cmp    %ebx,%edi
  0x0000000002c34b9f: jg     0x0000000002c34b61  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x0000000002c34ba1: mov    %ecx,%ebp
  0x0000000002c34ba3: sub    %esi,%ebp
  0x0000000002c34ba5: dec    %ebp
  0x0000000002c34ba7: mov    $0xffffffff,%r10d
  0x0000000002c34bad: cmp    %r10d,%ebp
  0x0000000002c34bb0: cmovl  %r10d,%ebp
  0x0000000002c34bb4: mov    %ebp,%r14d
  0x0000000002c34bb7: add    $0x3,%r14d
  0x0000000002c34bbb: mov    $0x7fffffff,%r10d
  0x0000000002c34bc1: cmp    %r14d,%ebp
  0x0000000002c34bc4: cmovg  %r10d,%r14d
  0x0000000002c34bc8: cmp    %r14d,%edi
  0x0000000002c34bcb: jle    0x0000000002c34c48  ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x0000000002c34bd1: movslq %edi,%r10
  0x0000000002c34bd4: vmovq  %xmm2,%rbp
  0x0000000002c34bd9: sub    %r10,%rbp
  0x0000000002c34bdc: movzwl 0xe(%rdx,%rbp,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000002c34be2: movzwl 0xe(%r13,%rbp,2),%ebx  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000002c34be8: cmp    %r10d,%ebx
  0x0000000002c34beb: jne    0x0000000002c34b13  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000002c34bf1: movzwl 0x10(%rdx,%rbp,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000002c34bf7: movzwl 0x10(%r13,%rbp,2),%ebx  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000002c34bfd: cmp    %r10d,%ebx
  0x0000000002c34c00: jne    0x0000000002c34b13  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000002c34c06: mov    %edi,%ebp
  0x0000000002c34c08: add    $0xfffffffe,%ebp
  0x0000000002c34c0b: movslq %ebp,%r10
  0x0000000002c34c0e: vmovq  %xmm2,%rbp
  0x0000000002c34c13: sub    %r10,%rbp
  0x0000000002c34c16: movzwl 0xe(%rdx,%rbp,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000002c34c1c: movzwl 0xe(%r13,%rbp,2),%ebx  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000002c34c22: cmp    %r10d,%ebx
  0x0000000002c34c25: jne    0x0000000002c34b13  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000002c34c2b: movzwl 0x10(%rdx,%rbp,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000002c34c31: movzwl 0x10(%r13,%rbp,2),%ebx  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000002c34c37: cmp    %r10d,%ebx
  0x0000000002c34c3a: jne    0x0000000002c34b13  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000002c34c40: add    $0xfffffffc,%edi   ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x0000000002c34c43: cmp    %r14d,%edi
  0x0000000002c34c46: jg     0x0000000002c34bd1  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x0000000002c34c48: cmp    $0xffffffff,%edi
  0x0000000002c34c4b: je     0x0000000002c34c91
  0x0000000002c34c4d: data16 xchg %ax,%ax
  0x0000000002c34c50: vmovd  %xmm1,%r10d
  0x0000000002c34c55: sub    %edi,%r10d         ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x0000000002c34c58: cmp    %ecx,%r10d
  0x0000000002c34c5b: jae    0x0000000002c34cf1
  0x0000000002c34c61: movslq %edi,%rbp
  0x0000000002c34c64: vmovq  %xmm2,%rbx
  0x0000000002c34c69: sub    %rbp,%rbx
  0x0000000002c34c6c: movzwl 0xe(%r13,%rbx,2),%ebp  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000002c34c72: cmp    %esi,%r10d
  0x0000000002c34c75: jae    0x0000000002c34d19  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000002c34c7b: movzwl 0xe(%rdx,%rbx,2),%r10d
  0x0000000002c34c81: cmp    %r10d,%ebp
  0x0000000002c34c84: jne    0x0000000002c34b13  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000002c34c8a: dec    %edi               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x0000000002c34c8c: cmp    $0xffffffff,%edi
  0x0000000002c34c8f: jne    0x0000000002c34c50  ;*iconst_1
                                                ; - java.lang.String::equals@77 (line 992)

  0x0000000002c34c91: mov    $0x1,%eax
  0x0000000002c34c96: jmpq   0x0000000002c34b13
  0x0000000002c34c9b: mov    $0x1,%eax
  0x0000000002c34ca0: jmpq   0x0000000002c34b13
  0x0000000002c34ca5: mov    0x39c(%r15),%r11d
  0x0000000002c34cac: test   %r11d,%r11d
  0x0000000002c34caf: jne    0x0000000002c34d41
  0x0000000002c34cb5: mov    $0xfffffff6,%edx
  0x0000000002c34cba: mov    %r10,%rbp
  0x0000000002c34cbd: mov    %r8,0x8(%rsp)
  0x0000000002c34cc2: nop
  0x0000000002c34cc3: callq  0x0000000002b757a0  ; OopMap{rbp=Oop [8]=Oop off=552}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x0000000002c34cc8: int3                      ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)

  0x0000000002c34cc9: mov    0x39c(%r15),%r11d
  0x0000000002c34cd0: test   %r11d,%r11d
  0x0000000002c34cd3: jne    0x0000000002c34d55
  0x0000000002c34cd9: mov    $0xfffffff6,%edx
  0x0000000002c34cde: mov    %r10,%rbp
  0x0000000002c34ce1: mov    %r8,0x8(%rsp)
  0x0000000002c34ce6: mov    %ecx,0x14(%rsp)
  0x0000000002c34cea: nop
  0x0000000002c34ceb: callq  0x0000000002b757a0  ; OopMap{rbp=Oop [8]=Oop off=592}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x0000000002c34cf0: int3                      ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)

  0x0000000002c34cf1: mov    $0xffffffe4,%edx
  0x0000000002c34cf6: vmovq  %xmm0,%rbp
  0x0000000002c34cfb: mov    %r8,0x8(%rsp)
  0x0000000002c34d00: mov    %edi,0x10(%rsp)
  0x0000000002c34d04: mov    %r9d,0x18(%rsp)
  0x0000000002c34d09: mov    %r11d,0x20(%rsp)
  0x0000000002c34d0e: mov    %r10d,0x24(%rsp)
  0x0000000002c34d13: callq  0x0000000002b757a0  ; OopMap{rbp=Oop [8]=Oop [24]=NarrowOop [32]=NarrowOop off=632}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x0000000002c34d18: int3                      ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000002c34d19: mov    $0xffffffe4,%edx
  0x0000000002c34d1e: vmovsd %xmm0,(%rsp)
  0x0000000002c34d23: mov    %r8,0x10(%rsp)
  0x0000000002c34d28: mov    %edi,0x18(%rsp)
  0x0000000002c34d2c: mov    %r11d,0x1c(%rsp)
  0x0000000002c34d31: mov    %r9d,0x28(%rsp)
  0x0000000002c34d36: mov    %r10d,0x2c(%rsp)
  0x0000000002c34d3b: callq  0x0000000002b757a0  ; OopMap{[0]=Oop [16]=Oop [28]=NarrowOop [40]=NarrowOop off=672}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x0000000002c34d40: int3                      ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000002c34d41: mov    $0xfffffff7,%edx
  0x0000000002c34d46: mov    %r10,%rbp
  0x0000000002c34d49: mov    %r8,0x8(%rsp)
  0x0000000002c34d4e: nop
  0x0000000002c34d4f: callq  0x0000000002b757a0  ; OopMap{rbp=Oop [8]=Oop off=692}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x0000000002c34d54: int3                      ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)

  0x0000000002c34d55: mov    $0xfffffff7,%edx
  0x0000000002c34d5a: mov    %r10,%rbp
  0x0000000002c34d5d: mov    %r8,0x8(%rsp)
  0x0000000002c34d62: mov    %ecx,0x14(%rsp)
  0x0000000002c34d66: nop
  0x0000000002c34d67: callq  0x0000000002b757a0  ; OopMap{rbp=Oop [8]=Oop off=716}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x0000000002c34d6c: int3                      ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)

  0x0000000002c34d6d: mov    $0xffffffde,%edx
  0x0000000002c34d72: mov    %r10,%rbp
  0x0000000002c34d75: mov    %r8,0x8(%rsp)
  0x0000000002c34d7a: nop
  0x0000000002c34d7b: callq  0x0000000002b757a0  ; OopMap{rbp=Oop [8]=Oop off=736}
                                                ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x0000000002c34d80: int3   
  0x0000000002c34d81: mov    $0xfffffff4,%edx
  0x0000000002c34d86: mov    %r10,%rbp
  0x0000000002c34d89: xchg   %ax,%ax
  0x0000000002c34d8b: callq  0x0000000002b757a0  ; OopMap{rbp=Oop off=752}
                                                ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x0000000002c34d90: int3                      ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x0000000002c34d91: hlt    
  0x0000000002c34d92: hlt    
  0x0000000002c34d93: hlt    
  0x0000000002c34d94: hlt    
  0x0000000002c34d95: hlt    
  0x0000000002c34d96: hlt    
  0x0000000002c34d97: hlt    
  0x0000000002c34d98: hlt    
  0x0000000002c34d99: hlt    
  0x0000000002c34d9a: hlt    
  0x0000000002c34d9b: hlt    
  0x0000000002c34d9c: hlt    
  0x0000000002c34d9d: hlt    
  0x0000000002c34d9e: hlt    
  0x0000000002c34d9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c34da0: jmpq   0x0000000002b87ee0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002c34da5: callq  0x0000000002c34daa
  0x0000000002c34daa: subq   $0x5,(%rsp)
  0x0000000002c34daf: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c34db4: hlt    
  0x0000000002c34db5: hlt    
  0x0000000002c34db6: hlt    
  0x0000000002c34db7: hlt    
<nmethod compile_id='5' compiler='C2' level='4' entry='0x0000000002c34aa0' size='2264' address='0x0000000002c34950' relocation_offset='288' insts_offset='336' stub_offset='1104' scopes_data_offset='1144' scopes_pcs_offset='1392' dependencies_offset='2240' nul_chk_table_offset='2248' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='29572' backedge_count='17695' iicount='29572' stamp='0.386'/>
<writer thread='20984'/>
<task_queued compile_id='10' method='java/lang/String hashCode ()I' bytes='55' count='3011' backedge_count='63488' iicount='3011' stamp='0.386' comment='tiered' hot_count='3011'/>
<task_queued compile_id='11' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='2304' iicount='2304' level='3' stamp='0.386' comment='tiered' hot_count='2304'/>
<task_queued compile_id='12' method='java/lang/String indexOf (I)I' bytes='7' count='1664' iicount='1664' level='3' stamp='0.386' comment='tiered' hot_count='1664'/>
<task_queued compile_id='13' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='12160' iicount='12160' stamp='0.386' comment='tiered' hot_count='12160'/>
<task_queued compile_id='14' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='768' backedge_count='79' iicount='768' level='3' stamp='0.386' comment='tiered' hot_count='768'/>
<task_queued compile_id='15' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='768' iicount='768' level='3' stamp='0.386' comment='tiered' hot_count='768'/>
<writer thread='9088'/>
Decoding compiled method 0x0000000002c3f890:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001933d8d8} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi:rsi   = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x70]  (sp of caller)
  0x0000000002c3fa00: mov    0x8(%rdx),%r10d
  0x0000000002c3fa04: shl    $0x3,%r10
  0x0000000002c3fa08: cmp    %rax,%r10
  0x0000000002c3fa0b: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c3fa11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c3fa1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c3fa20: mov    %eax,-0x6000(%rsp)
  0x0000000002c3fa27: push   %rbp
  0x0000000002c3fa28: sub    $0x60,%rsp
  0x0000000002c3fa2c: mov    %rdx,%rbx
  0x0000000002c3fa2f: mov    %rdi,%r11
  0x0000000002c3fa32: mov    %rsi,%r13
  0x0000000002c3fa35: movabs $0x1951cb90,%rdx   ;   {metadata(method data for {method} {0x000000001933d8d8} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c3fa3f: mov    0xdc(%rdx),%esi
  0x0000000002c3fa45: add    $0x8,%esi
  0x0000000002c3fa48: mov    %esi,0xdc(%rdx)
  0x0000000002c3fa4e: movabs $0x1933d8d0,%rdx   ;   {metadata({method} {0x000000001933d8d8} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c3fa58: and    $0x1ff8,%esi
  0x0000000002c3fa5e: cmp    $0x0,%esi
  0x0000000002c3fa61: je     0x0000000002c3fb96
  0x0000000002c3fa67: movabs $0x7c001c2e8,%rdx  ;   {metadata(&apos;java/util/HashMap$Node&apos;)}
  0x0000000002c3fa71: mov    0x60(%r15),%rax
  0x0000000002c3fa75: lea    0x20(%rax),%rdi
  0x0000000002c3fa79: cmp    0x70(%r15),%rdi
  0x0000000002c3fa7d: ja     0x0000000002c3fbad
  0x0000000002c3fa83: mov    %rdi,0x60(%r15)
  0x0000000002c3fa87: mov    0xa8(%rdx),%rcx
  0x0000000002c3fa8e: mov    %rcx,(%rax)
  0x0000000002c3fa91: mov    %rdx,%rcx
  0x0000000002c3fa94: shr    $0x3,%rcx
  0x0000000002c3fa98: mov    %ecx,0x8(%rax)
  0x0000000002c3fa9b: xor    %rcx,%rcx
  0x0000000002c3fa9e: mov    %ecx,0xc(%rax)
  0x0000000002c3faa1: xor    %rcx,%rcx
  0x0000000002c3faa4: mov    %rcx,0x10(%rax)
  0x0000000002c3faa8: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.HashMap::newNode@0 (line 1742)

  0x0000000002c3faac: mov    %rax,%rsi
  0x0000000002c3faaf: movabs $0x1951cb90,%rdi   ;   {metadata(method data for {method} {0x000000001933d8d8} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c3fab9: addq   $0x1,0x108(%rdi)
  0x0000000002c3fac1: movabs $0x194906a0,%rsi   ;   {metadata(method data for {method} {0x0000000019340040} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002c3facb: mov    0xdc(%rsi),%edi
  0x0000000002c3fad1: add    $0x8,%edi
  0x0000000002c3fad4: mov    %edi,0xdc(%rsi)
  0x0000000002c3fada: movabs $0x19340038,%rsi   ;   {metadata({method} {0x0000000019340040} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002c3fae4: and    $0x7ffff8,%edi
  0x0000000002c3faea: cmp    $0x0,%edi
  0x0000000002c3faed: je     0x0000000002c3fbba
  0x0000000002c3faf3: mov    %rax,%rsi
  0x0000000002c3faf6: movabs $0x194906a0,%rdi   ;   {metadata(method data for {method} {0x0000000019340040} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002c3fb00: addq   $0x1,0x108(%rdi)
  0x0000000002c3fb08: movabs $0x19387898,%rsi   ;   {metadata(method data for {method} {0x0000000019250488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002c3fb12: mov    0xdc(%rsi),%edi
  0x0000000002c3fb18: add    $0x8,%edi
  0x0000000002c3fb1b: mov    %edi,0xdc(%rsi)
  0x0000000002c3fb21: movabs $0x19250480,%rsi   ;   {metadata({method} {0x0000000019250488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002c3fb2b: and    $0x7ffff8,%edi
  0x0000000002c3fb31: cmp    $0x0,%edi
  0x0000000002c3fb34: je     0x0000000002c3fbd1
  0x0000000002c3fb3a: mov    %r8d,0xc(%rax)     ;*putfield hash
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 285)
                                                ; - java.util.HashMap::newNode@9 (line 1742)

  0x0000000002c3fb3e: mov    %r9,%r10
  0x0000000002c3fb41: shr    $0x3,%r10
  0x0000000002c3fb45: mov    %r10d,0x10(%rax)
  0x0000000002c3fb49: mov    %rax,%rsi
  0x0000000002c3fb4c: shr    $0x9,%rsi
  0x0000000002c3fb50: movabs $0xe6e6000,%rdi
  0x0000000002c3fb5a: movb   $0x0,(%rsi,%rdi,1)  ;*putfield key
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 286)
                                                ; - java.util.HashMap::newNode@9 (line 1742)

  0x0000000002c3fb5e: mov    %r11,%r10
  0x0000000002c3fb61: shr    $0x3,%r10
  0x0000000002c3fb65: mov    %r10d,0x14(%rax)
  0x0000000002c3fb69: mov    %rax,%rsi
  0x0000000002c3fb6c: shr    $0x9,%rsi
  0x0000000002c3fb70: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1742)

  0x0000000002c3fb74: mov    %r13,%r10
  0x0000000002c3fb77: shr    $0x3,%r10
  0x0000000002c3fb7b: mov    %r10d,0x18(%rax)
  0x0000000002c3fb7f: mov    %rax,%rsi
  0x0000000002c3fb82: shr    $0x9,%rsi
  0x0000000002c3fb86: movb   $0x0,(%rsi,%rdi,1)  ;*putfield next
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1742)

  0x0000000002c3fb8a: add    $0x60,%rsp
  0x0000000002c3fb8e: pop    %rbp
  0x0000000002c3fb8f: test   %eax,-0x256fa95(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c3fb95: retq   
  0x0000000002c3fb96: mov    %rdx,0x8(%rsp)
  0x0000000002c3fb9b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c3fba3: callq  0x0000000002c31360  ; OopMap{rbx=Oop r9=Oop r11=Oop r13=Oop off=424}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::newNode@-1 (line 1742)
                                                ;   {runtime_call}
  0x0000000002c3fba8: jmpq   0x0000000002c3fa67
  0x0000000002c3fbad: mov    %rdx,%rdx
  0x0000000002c3fbb0: callq  0x0000000002c2d400  ; OopMap{rbx=Oop r9=Oop r11=Oop r13=Oop off=437}
                                                ;*new  ; - java.util.HashMap::newNode@0 (line 1742)
                                                ;   {runtime_call}
  0x0000000002c3fbb5: jmpq   0x0000000002c3faac
  0x0000000002c3fbba: mov    %rsi,0x8(%rsp)
  0x0000000002c3fbbf: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c3fbc7: callq  0x0000000002c31360  ; OopMap{rbx=Oop r9=Oop r11=Oop r13=Oop rax=Oop off=460}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 284)
                                                ; - java.util.HashMap::newNode@9 (line 1742)
                                                ;   {runtime_call}
  0x0000000002c3fbcc: jmpq   0x0000000002c3faf3
  0x0000000002c3fbd1: mov    %rsi,0x8(%rsp)
  0x0000000002c3fbd6: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c3fbde: callq  0x0000000002c31360  ; OopMap{rbx=Oop r9=Oop r11=Oop r13=Oop rax=Oop off=483}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 284)
                                                ; - java.util.HashMap::newNode@9 (line 1742)
                                                ;   {runtime_call}
  0x0000000002c3fbe3: jmpq   0x0000000002c3fb3a
  0x0000000002c3fbe8: nop
  0x0000000002c3fbe9: nop
  0x0000000002c3fbea: mov    0x2a8(%r15),%rax
  0x0000000002c3fbf1: movabs $0x0,%r10
  0x0000000002c3fbfb: mov    %r10,0x2a8(%r15)
  0x0000000002c3fc02: movabs $0x0,%r10
  0x0000000002c3fc0c: mov    %r10,0x2b0(%r15)
  0x0000000002c3fc13: add    $0x60,%rsp
  0x0000000002c3fc17: pop    %rbp
  0x0000000002c3fc18: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c3fc1d: hlt    
  0x0000000002c3fc1e: hlt    
  0x0000000002c3fc1f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c3fc20: callq  0x0000000002c2eb20  ;   {no_reloc}
  0x0000000002c3fc25: mov    %rsp,-0x28(%rsp)
  0x0000000002c3fc2a: sub    $0x80,%rsp
  0x0000000002c3fc31: mov    %rax,0x78(%rsp)
  0x0000000002c3fc36: mov    %rcx,0x70(%rsp)
  0x0000000002c3fc3b: mov    %rdx,0x68(%rsp)
  0x0000000002c3fc40: mov    %rbx,0x60(%rsp)
  0x0000000002c3fc45: mov    %rbp,0x50(%rsp)
  0x0000000002c3fc4a: mov    %rsi,0x48(%rsp)
  0x0000000002c3fc4f: mov    %rdi,0x40(%rsp)
  0x0000000002c3fc54: mov    %r8,0x38(%rsp)
  0x0000000002c3fc59: mov    %r9,0x30(%rsp)
  0x0000000002c3fc5e: mov    %r10,0x28(%rsp)
  0x0000000002c3fc63: mov    %r11,0x20(%rsp)
  0x0000000002c3fc68: mov    %r12,0x18(%rsp)
  0x0000000002c3fc6d: mov    %r13,0x10(%rsp)
  0x0000000002c3fc72: mov    %r14,0x8(%rsp)
  0x0000000002c3fc77: mov    %r15,(%rsp)
  0x0000000002c3fc7b: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c3fc85: movabs $0x2c3fc25,%rdx    ;   {internal_word}
  0x0000000002c3fc8f: mov    %rsp,%r8
  0x0000000002c3fc92: and    $0xfffffffffffffff0,%rsp
  0x0000000002c3fc96: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c3fc9b: hlt    
[Deopt Handler Code]
  0x0000000002c3fc9c: movabs $0x2c3fc9c,%r10    ;   {section_word}
  0x0000000002c3fca6: push   %r10
  0x0000000002c3fca8: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c3fcad: hlt    
  0x0000000002c3fcae: hlt    
  0x0000000002c3fcaf: hlt    
<nmethod compile_id='7' compiler='C1' level='3' entry='0x0000000002c3fa00' size='1376' address='0x0000000002c3f890' relocation_offset='288' insts_offset='368' stub_offset='912' scopes_data_offset='1080' scopes_pcs_offset='1192' dependencies_offset='1368' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='554' iicount='554' stamp='0.390'/>
<writer thread='20984'/>
Decoding compiled method 0x0000000002c40750:
Code:
[Entry Point]
  # {method} {0x0000000019269c90} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8        = int
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi       = int
  # parm4:    rsi       = int
  #           [sp+0x90]  (sp of caller)
  0x0000000002c408c0: mov    0x8(%rdx),%r10d
  0x0000000002c408c4: shl    $0x3,%r10
  0x0000000002c408c8: cmp    %r10,%rax
  0x0000000002c408cb: je     0x0000000002c408d8
  0x0000000002c408d1: jmpq   0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c408d6: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000002c408d8: mov    %eax,-0x6000(%rsp)
  0x0000000002c408df: push   %rbp
  0x0000000002c408e0: mov    %rsp,%rbp
  0x0000000002c408e3: sub    $0x80,%rsp
  0x0000000002c408ea: mov    %rsi,0x30(%rsp)
  0x0000000002c408ef: mov    %rdi,0x28(%rsp)
  0x0000000002c408f4: mov    %r9,0x48(%rsp)
  0x0000000002c408f9: cmp    $0x0,%r9
  0x0000000002c408fd: lea    0x48(%rsp),%rax
  0x0000000002c40902: cmove  0x48(%rsp),%rax
  0x0000000002c40908: mov    %rax,0x20(%rsp)
  0x0000000002c4090d: mov    %r8,%r9
  0x0000000002c40910: mov    %rdx,0x38(%rsp)
  0x0000000002c40915: cmp    $0x0,%rdx
  0x0000000002c40919: lea    0x38(%rsp),%r8
  0x0000000002c4091e: cmove  0x38(%rsp),%r8
  0x0000000002c40924: movabs $0x780700c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000000002c4092e: mov    %r14,0x68(%rsp)
  0x0000000002c40933: lea    0x68(%rsp),%r14
  0x0000000002c40938: mov    %r14,%rdx          ; OopMap{[72]=Oop [56]=Oop [104]=Oop off=123}
  0x0000000002c4093b: movabs $0x2c4093b,%r10    ;   {section_word}
  0x0000000002c40945: mov    %r10,0x1e0(%r15)
  0x0000000002c4094c: mov    %rsp,0x1d8(%r15)
  0x0000000002c40953: cmpb   $0x0,0x5905be27(%rip)        # 0x000000005bc9c781
                                                ;   {external_word}
  0x0000000002c4095a: je     0x0000000002c409a2
  0x0000000002c40960: push   %rdx
  0x0000000002c40961: push   %r8
  0x0000000002c40963: push   %r9
  0x0000000002c40965: movabs $0x19269c88,%rdx   ;   {metadata({method} {0x0000000019269c90} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000002c4096f: mov    %r15,%rcx
  0x0000000002c40972: sub    $0x20,%rsp
  0x0000000002c40976: test   $0xf,%esp
  0x0000000002c4097c: je     0x0000000002c40994
  0x0000000002c40982: sub    $0x8,%rsp
  0x0000000002c40986: callq  0x000000005b6bc870  ;   {runtime_call}
  0x0000000002c4098b: add    $0x8,%rsp
  0x0000000002c4098f: jmpq   0x0000000002c40999
  0x0000000002c40994: callq  0x000000005b6bc870  ;   {runtime_call}
  0x0000000002c40999: add    $0x20,%rsp
  0x0000000002c4099d: pop    %r9
  0x0000000002c4099f: pop    %r8
  0x0000000002c409a1: pop    %rdx
  0x0000000002c409a2: lea    0x1f8(%r15),%rcx
  0x0000000002c409a9: movl   $0x4,0x270(%r15)
  0x0000000002c409b4: callq  0x000000005b46097a  ;   {runtime_call}
  0x0000000002c409b9: vzeroupper 
  0x0000000002c409bc: movl   $0x5,0x270(%r15)
  0x0000000002c409c7: mov    %r15d,%ecx
  0x0000000002c409ca: shr    $0x4,%ecx
  0x0000000002c409cd: and    $0xffc,%ecx
  0x0000000002c409d3: movabs $0x9e0000,%r10     ;   {external_word}
  0x0000000002c409dd: mov    %ecx,(%r10,%rcx,1)
  0x0000000002c409e1: cmpl   $0x0,0x5905c965(%rip)        # 0x000000005bc9d350
                                                ;   {external_word}
  0x0000000002c409eb: jne    0x0000000002c409ff
  0x0000000002c409f1: cmpl   $0x0,0x30(%r15)
  0x0000000002c409f9: je     0x0000000002c40a18
  0x0000000002c409ff: mov    %r15,%rcx
  0x0000000002c40a02: mov    %rsp,%r12
  0x0000000002c40a05: sub    $0x20,%rsp
  0x0000000002c40a09: and    $0xfffffffffffffff0,%rsp
  0x0000000002c40a0d: callq  0x000000005b6d39e0  ;   {runtime_call}
  0x0000000002c40a12: mov    %r12,%rsp
  0x0000000002c40a15: xor    %r12,%r12
  0x0000000002c40a18: movl   $0x8,0x270(%r15)
  0x0000000002c40a23: cmpl   $0x1,0x29c(%r15)
  0x0000000002c40a2e: je     0x0000000002c40abe
  0x0000000002c40a34: cmpb   $0x0,0x5905bd46(%rip)        # 0x000000005bc9c781
                                                ;   {external_word}
  0x0000000002c40a3b: je     0x0000000002c40a79
  0x0000000002c40a41: movabs $0x19269c88,%rdx   ;   {metadata({method} {0x0000000019269c90} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000002c40a4b: mov    %r15,%rcx
  0x0000000002c40a4e: sub    $0x20,%rsp
  0x0000000002c40a52: test   $0xf,%esp
  0x0000000002c40a58: je     0x0000000002c40a70
  0x0000000002c40a5e: sub    $0x8,%rsp
  0x0000000002c40a62: callq  0x000000005b6bc870  ;   {runtime_call}
  0x0000000002c40a67: add    $0x8,%rsp
  0x0000000002c40a6b: jmpq   0x0000000002c40a75
  0x0000000002c40a70: callq  0x000000005b6bc870  ;   {runtime_call}
  0x0000000002c40a75: add    $0x20,%rsp
  0x0000000002c40a79: movabs $0x0,%r10
  0x0000000002c40a83: mov    %r10,0x1d8(%r15)
  0x0000000002c40a8a: movabs $0x0,%r10
  0x0000000002c40a94: mov    %r10,0x1e0(%r15)
  0x0000000002c40a9b: mov    0x38(%r15),%rcx
  0x0000000002c40a9f: movl   $0x0,0x100(%rcx)
  0x0000000002c40aa9: leaveq 
  0x0000000002c40aaa: cmpq   $0x0,0x8(%r15)
  0x0000000002c40ab2: jne    0x0000000002c40ab9
  0x0000000002c40ab8: retq   
  0x0000000002c40ab9: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000002c40abe: mov    %rsp,%r12
  0x0000000002c40ac1: sub    $0x20,%rsp
  0x0000000002c40ac5: and    $0xfffffffffffffff0,%rsp
  0x0000000002c40ac9: callq  0x000000005b6bc890  ;   {runtime_call}
  0x0000000002c40ace: mov    %r12,%rsp
  0x0000000002c40ad1: xor    %r12,%r12
  0x0000000002c40ad4: jmpq   0x0000000002c40a34
  0x0000000002c40ad9: hlt    
  0x0000000002c40ada: hlt    
  0x0000000002c40adb: hlt    
  0x0000000002c40adc: hlt    
  0x0000000002c40add: hlt    
  0x0000000002c40ade: hlt    
  0x0000000002c40adf: hlt    
<nmethod compile_id='16' compile_kind='c2n' level='0' entry='0x0000000002c408c0' size='912' address='0x0000000002c40750' relocation_offset='288' consts_offset='912' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='9088' iicount='9088' stamp='0.392'/>
<writer thread='9088'/>
Decoding compiled method 0x0000000002c43510:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi       = boolean
  # parm4:    rcx       = boolean
  #           [sp+0xe0]  (sp of caller)
  0x0000000002c43780: mov    0x8(%rdx),%r10d
  0x0000000002c43784: shl    $0x3,%r10
  0x0000000002c43788: cmp    %rax,%r10
  0x0000000002c4378b: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c43791: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c4379c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c437a0: mov    %eax,-0x6000(%rsp)
  0x0000000002c437a7: push   %rbp
  0x0000000002c437a8: sub    $0xd0,%rsp
  0x0000000002c437af: mov    %rdx,0x48(%rsp)
  0x0000000002c437b4: mov    %r8d,0x40(%rsp)
  0x0000000002c437b9: mov    %r9,0x50(%rsp)
  0x0000000002c437be: mov    %rdi,0x58(%rsp)
  0x0000000002c437c3: mov    %esi,0x44(%rsp)
  0x0000000002c437c7: mov    %ecx,0x60(%rsp)
  0x0000000002c437cb: movabs $0x1948fff0,%rbx   ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c437d5: mov    0xdc(%rbx),%eax
  0x0000000002c437db: add    $0x8,%eax
  0x0000000002c437de: mov    %eax,0xdc(%rbx)
  0x0000000002c437e4: movabs $0x1933bd40,%rbx   ;   {metadata({method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c437ee: and    $0x1ff8,%eax
  0x0000000002c437f4: cmp    $0x0,%eax
  0x0000000002c437f7: je     0x0000000002c448cd  ;*aload_0
                                                ; - java.util.HashMap::putVal@0 (line 627)

  0x0000000002c437fd: mov    0x24(%rdx),%ebx
  0x0000000002c43800: shl    $0x3,%rbx          ;*getfield table
                                                ; - java.util.HashMap::putVal@1 (line 627)

  0x0000000002c43804: cmp    $0x0,%rbx
  0x0000000002c43808: movabs $0x1948fff0,%rax   ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c43812: movabs $0x108,%r11
  0x0000000002c4381c: je     0x0000000002c4382c
  0x0000000002c43822: movabs $0x118,%r11
  0x0000000002c4382c: mov    (%rax,%r11,1),%r13
  0x0000000002c43830: lea    0x1(%r13),%r13
  0x0000000002c43834: mov    %r13,(%rax,%r11,1)
  0x0000000002c43838: je     0x0000000002c4387a  ;*ifnull
                                                ; - java.util.HashMap::putVal@7 (line 627)

  0x0000000002c4383e: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.util.HashMap::putVal@12 (line 627)
                                                ; implicit exception: dispatches to 0x0000000002c448e4
  0x0000000002c43841: cmp    $0x0,%eax
  0x0000000002c43844: movabs $0x1948fff0,%r11   ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c4384e: movabs $0x128,%r13
  0x0000000002c43858: jne    0x0000000002c43868
  0x0000000002c4385e: movabs $0x138,%r13
  0x0000000002c43868: mov    (%r11,%r13,1),%r14
  0x0000000002c4386c: lea    0x1(%r14),%r14
  0x0000000002c43870: mov    %r14,(%r11,%r13,1)
  0x0000000002c43874: jne    0x0000000002c43929  ;*ifne
                                                ; - java.util.HashMap::putVal@16 (line 627)

  0x0000000002c4387a: mov    %rbx,0x68(%rsp)
  0x0000000002c4387f: mov    %rdx,%rax
  0x0000000002c43882: movabs $0x1948fff0,%r11   ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c4388c: mov    0x8(%rax),%eax
  0x0000000002c4388f: shl    $0x3,%rax
  0x0000000002c43893: cmp    0x150(%r11),%rax
  0x0000000002c4389a: jne    0x0000000002c438a9
  0x0000000002c4389c: addq   $0x1,0x158(%r11)
  0x0000000002c438a4: jmpq   0x0000000002c4390f
  0x0000000002c438a9: cmp    0x160(%r11),%rax
  0x0000000002c438b0: jne    0x0000000002c438bf
  0x0000000002c438b2: addq   $0x1,0x168(%r11)
  0x0000000002c438ba: jmpq   0x0000000002c4390f
  0x0000000002c438bf: cmpq   $0x0,0x150(%r11)
  0x0000000002c438ca: jne    0x0000000002c438e3
  0x0000000002c438cc: mov    %rax,0x150(%r11)
  0x0000000002c438d3: movq   $0x1,0x158(%r11)
  0x0000000002c438de: jmpq   0x0000000002c4390f
  0x0000000002c438e3: cmpq   $0x0,0x160(%r11)
  0x0000000002c438ee: jne    0x0000000002c43907
  0x0000000002c438f0: mov    %rax,0x160(%r11)
  0x0000000002c438f7: movq   $0x1,0x168(%r11)
  0x0000000002c43902: jmpq   0x0000000002c4390f
  0x0000000002c43907: addq   $0x1,0x148(%r11)
  0x0000000002c4390f: mov    %rdx,%rax
  0x0000000002c43912: mov    %rax,%rdx          ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 628)

  0x0000000002c43915: nop
  0x0000000002c43916: nop
  0x0000000002c43917: callq  0x0000000002b761a0  ; OopMap{[88]=Oop [80]=Oop [104]=Oop [72]=Oop off=412}
                                                ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 628)
                                                ;   {optimized virtual_call}
  0x0000000002c4391c: mov    %rax,%r8           ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 628)

  0x0000000002c4391f: mov    0xc(%r8),%r9d      ;*arraylength
                                                ; - java.util.HashMap::putVal@26 (line 628)
                                                ; implicit exception: dispatches to 0x0000000002c448e9
  0x0000000002c43923: mov    %r9,%rax
  0x0000000002c43926: mov    %r8,%rbx           ;*aload
                                                ; - java.util.HashMap::putVal@29 (line 629)

  0x0000000002c43929: mov    %rax,%r8
  0x0000000002c4392c: dec    %r8d
  0x0000000002c4392f: and    0x40(%rsp),%r8d
  0x0000000002c43934: mov    %r8d,0x64(%rsp)
  0x0000000002c43939: movslq %r8d,%r9
  0x0000000002c4393c: cmp    0xc(%rbx),%r8d     ; implicit exception: dispatches to 0x0000000002c448ee
  0x0000000002c43940: jae    0x0000000002c448f8
  0x0000000002c43946: mov    0x10(%rbx,%r9,4),%ecx
  0x0000000002c4394b: shl    $0x3,%rcx          ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 629)

  0x0000000002c4394f: mov    %rcx,0x78(%rsp)
  0x0000000002c43954: cmp    $0x0,%rcx
  0x0000000002c43958: movabs $0x1948fff0,%r9    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c43962: movabs $0x178,%rdi
  0x0000000002c4396c: jne    0x0000000002c4397c
  0x0000000002c43972: movabs $0x188,%rdi
  0x0000000002c4397c: mov    (%r9,%rdi,1),%rsi
  0x0000000002c43980: lea    0x1(%rsi),%rsi
  0x0000000002c43984: mov    %rsi,(%r9,%rdi,1)
  0x0000000002c43988: mov    %eax,0x80(%rsp)
  0x0000000002c4398f: jne    0x0000000002c43bb6  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@44 (line 629)

  0x0000000002c43995: mov    %rbx,0x70(%rsp)
  0x0000000002c4399a: mov    0x48(%rsp),%rdx
  0x0000000002c4399f: movabs $0x1948fff0,%r9    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c439a9: mov    0x8(%rdx),%edx
  0x0000000002c439ac: shl    $0x3,%rdx
  0x0000000002c439b0: cmp    0x1a0(%r9),%rdx
  0x0000000002c439b7: jne    0x0000000002c439c6
  0x0000000002c439b9: addq   $0x1,0x1a8(%r9)
  0x0000000002c439c1: jmpq   0x0000000002c43a2c
  0x0000000002c439c6: cmp    0x1b0(%r9),%rdx
  0x0000000002c439cd: jne    0x0000000002c439dc
  0x0000000002c439cf: addq   $0x1,0x1b8(%r9)
  0x0000000002c439d7: jmpq   0x0000000002c43a2c
  0x0000000002c439dc: cmpq   $0x0,0x1a0(%r9)
  0x0000000002c439e7: jne    0x0000000002c43a00
  0x0000000002c439e9: mov    %rdx,0x1a0(%r9)
  0x0000000002c439f0: movq   $0x1,0x1a8(%r9)
  0x0000000002c439fb: jmpq   0x0000000002c43a2c
  0x0000000002c43a00: cmpq   $0x0,0x1b0(%r9)
  0x0000000002c43a0b: jne    0x0000000002c43a24
  0x0000000002c43a0d: mov    %rdx,0x1b0(%r9)
  0x0000000002c43a14: movq   $0x1,0x1b8(%r9)
  0x0000000002c43a1f: jmpq   0x0000000002c43a2c
  0x0000000002c43a24: addq   $0x1,0x198(%r9)
  0x0000000002c43a2c: mov    0x40(%rsp),%r8d
  0x0000000002c43a31: mov    0x50(%rsp),%r9
  0x0000000002c43a36: mov    0x58(%rsp),%rdi
  0x0000000002c43a3b: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x0000000002c43a45: mov    0x48(%rsp),%rdx    ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@56 (line 630)

  0x0000000002c43a4a: nop
  0x0000000002c43a4b: nop
  0x0000000002c43a4c: nop
  0x0000000002c43a4d: movabs $0xffffffffffffffff,%rax
  0x0000000002c43a57: callq  0x0000000002b763e0  ; OopMap{[88]=Oop [80]=Oop [72]=Oop [112]=Oop [120]=Oop off=732}
                                                ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@56 (line 630)
                                                ;   {virtual_call}
  0x0000000002c43a5c: mov    0x64(%rsp),%r8d
  0x0000000002c43a61: movslq %r8d,%rdx
  0x0000000002c43a64: mov    0x70(%rsp),%rbx
  0x0000000002c43a69: lea    0x10(%rbx,%rdx,4),%rdx
  0x0000000002c43a6e: cmp    0xc(%rbx),%r8d
  0x0000000002c43a72: jae    0x0000000002c44901
  0x0000000002c43a78: cmp    $0x0,%rax
  0x0000000002c43a7c: jne    0x0000000002c43a97
  0x0000000002c43a7e: movabs $0x1948fff0,%rdi   ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c43a88: orl    $0x100,0x1c0(%rdi)
  0x0000000002c43a92: jmpq   0x0000000002c43b7b
  0x0000000002c43a97: mov    0x8(%rbx),%esi     ; implicit exception: dispatches to 0x0000000002c4490a
  0x0000000002c43a9a: shl    $0x3,%rsi
  0x0000000002c43a9e: mov    0x8(%rax),%edi
  0x0000000002c43aa1: shl    $0x3,%rdi
  0x0000000002c43aa5: mov    0xf0(%rsi),%rsi
  0x0000000002c43aac: cmp    %rsi,%rdi
  0x0000000002c43aaf: je     0x0000000002c43add
  0x0000000002c43ab5: mov    0xc(%rsi),%ecx
  0x0000000002c43ab8: cmp    (%rdi,%rcx,1),%rsi
  0x0000000002c43abc: je     0x0000000002c43add
  0x0000000002c43ac2: cmp    $0x18,%ecx
  0x0000000002c43ac5: jne    0x0000000002c43b64
  0x0000000002c43acb: push   %rdi
  0x0000000002c43acc: push   %rsi
  0x0000000002c43acd: callq  0x0000000002c2f2e0  ;   {runtime_call}
  0x0000000002c43ad2: pop    %rdi
  0x0000000002c43ad3: pop    %rsi
  0x0000000002c43ad4: cmp    $0x0,%esi
  0x0000000002c43ad7: je     0x0000000002c43b64
  0x0000000002c43add: movabs $0x1948fff0,%rdi   ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c43ae7: mov    0x8(%rax),%esi
  0x0000000002c43aea: shl    $0x3,%rsi
  0x0000000002c43aee: cmp    0x1d0(%rdi),%rsi
  0x0000000002c43af5: jne    0x0000000002c43b04
  0x0000000002c43af7: addq   $0x1,0x1d8(%rdi)
  0x0000000002c43aff: jmpq   0x0000000002c43b7b
  0x0000000002c43b04: cmp    0x1e0(%rdi),%rsi
  0x0000000002c43b0b: jne    0x0000000002c43b1a
  0x0000000002c43b0d: addq   $0x1,0x1e8(%rdi)
  0x0000000002c43b15: jmpq   0x0000000002c43b7b
  0x0000000002c43b1a: cmpq   $0x0,0x1d0(%rdi)
  0x0000000002c43b25: jne    0x0000000002c43b3e
  0x0000000002c43b27: mov    %rsi,0x1d0(%rdi)
  0x0000000002c43b2e: movq   $0x1,0x1d8(%rdi)
  0x0000000002c43b39: jmpq   0x0000000002c43b7b
  0x0000000002c43b3e: cmpq   $0x0,0x1e0(%rdi)
  0x0000000002c43b49: jne    0x0000000002c43b62
  0x0000000002c43b4b: mov    %rsi,0x1e0(%rdi)
  0x0000000002c43b52: movq   $0x1,0x1e8(%rdi)
  0x0000000002c43b5d: jmpq   0x0000000002c43b7b
  0x0000000002c43b62: jmp    0x0000000002c43b7b
  0x0000000002c43b64: movabs $0x1948fff0,%rdi   ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c43b6e: subq   $0x1,0x1c8(%rdi)
  0x0000000002c43b76: jmpq   0x0000000002c4490f
  0x0000000002c43b7b: mov    %rax,%r10
  0x0000000002c43b7e: shr    $0x3,%r10
  0x0000000002c43b82: mov    %r10d,(%rdx)
  0x0000000002c43b85: shr    $0x9,%rdx
  0x0000000002c43b89: movabs $0xe6e6000,%rsi
  0x0000000002c43b93: movb   $0x0,(%rdx,%rsi,1)  ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 630)

  0x0000000002c43b97: movabs $0x1948fff0,%rdx   ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c43ba1: incl   0x1f8(%rdx)
  0x0000000002c43ba7: mov    0x78(%rsp),%rcx
  0x0000000002c43bac: mov    %rbx,0x70(%rsp)
  0x0000000002c43bb1: jmpq   0x0000000002c44570  ;*goto
                                                ; - java.util.HashMap::putVal@60 (line 630)

  0x0000000002c43bb6: mov    0xc(%rcx),%edx     ;*getfield hash
                                                ; - java.util.HashMap::putVal@65 (line 633)
                                                ; implicit exception: dispatches to 0x0000000002c44918
  0x0000000002c43bb9: cmp    0x40(%rsp),%edx
  0x0000000002c43bbd: movabs $0x1948fff0,%rdx   ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c43bc7: movabs $0x210,%rsi
  0x0000000002c43bd1: jne    0x0000000002c43be1
  0x0000000002c43bd7: movabs $0x220,%rsi
  0x0000000002c43be1: mov    (%rdx,%rsi,1),%rdi
  0x0000000002c43be5: lea    0x1(%rdi),%rdi
  0x0000000002c43be9: mov    %rdi,(%rdx,%rsi,1)
  0x0000000002c43bed: je     0x0000000002c43bfd  ;*if_icmpne
                                                ; - java.util.HashMap::putVal@69 (line 633)

  0x0000000002c43bf3: mov    %rbx,0x70(%rsp)
  0x0000000002c43bf8: jmpq   0x0000000002c43d7a  ;*aload
                                                ; - java.util.HashMap::putVal@104 (line 636)

  0x0000000002c43bfd: mov    0x50(%rsp),%r9
  0x0000000002c43c02: mov    0x10(%rcx),%esi
  0x0000000002c43c05: shl    $0x3,%rsi          ;*getfield key
                                                ; - java.util.HashMap::putVal@74 (line 633)

  0x0000000002c43c09: cmp    %r9,%rsi
  0x0000000002c43c0c: movabs $0x1948fff0,%rdx   ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c43c16: movabs $0x230,%rdi
  0x0000000002c43c20: je     0x0000000002c43c30
  0x0000000002c43c26: movabs $0x240,%rdi
  0x0000000002c43c30: mov    (%rdx,%rdi,1),%rax
  0x0000000002c43c34: lea    0x1(%rax),%rax
  0x0000000002c43c38: mov    %rax,(%rdx,%rdi,1)
  0x0000000002c43c3c: jne    0x0000000002c43c4c  ;*if_acmpeq
                                                ; - java.util.HashMap::putVal@81 (line 633)

  0x0000000002c43c42: mov    %rbx,0x70(%rsp)
  0x0000000002c43c47: jmpq   0x0000000002c44522  ;*aload
                                                ; - java.util.HashMap::putVal@97 (line 635)

  0x0000000002c43c4c: cmp    $0x0,%r9
  0x0000000002c43c50: movabs $0x1948fff0,%rdx   ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c43c5a: movabs $0x250,%rdi
  0x0000000002c43c64: je     0x0000000002c43c74
  0x0000000002c43c6a: movabs $0x260,%rdi
  0x0000000002c43c74: mov    (%rdx,%rdi,1),%rax
  0x0000000002c43c78: lea    0x1(%rax),%rax
  0x0000000002c43c7c: mov    %rax,(%rdx,%rdi,1)
  0x0000000002c43c80: mov    %rbx,0x70(%rsp)
  0x0000000002c43c85: je     0x0000000002c43d7a  ;*ifnull
                                                ; - java.util.HashMap::putVal@85 (line 633)

  0x0000000002c43c8b: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x0000000002c4491d
  0x0000000002c43c8e: mov    %r9,%rdx
  0x0000000002c43c91: movabs $0x1948fff0,%rdi   ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c43c9b: mov    0x8(%rdx),%edx
  0x0000000002c43c9e: shl    $0x3,%rdx
  0x0000000002c43ca2: cmp    0x278(%rdi),%rdx
  0x0000000002c43ca9: jne    0x0000000002c43cb8
  0x0000000002c43cab: addq   $0x1,0x280(%rdi)
  0x0000000002c43cb3: jmpq   0x0000000002c43d1e
  0x0000000002c43cb8: cmp    0x288(%rdi),%rdx
  0x0000000002c43cbf: jne    0x0000000002c43cce
  0x0000000002c43cc1: addq   $0x1,0x290(%rdi)
  0x0000000002c43cc9: jmpq   0x0000000002c43d1e
  0x0000000002c43cce: cmpq   $0x0,0x278(%rdi)
  0x0000000002c43cd9: jne    0x0000000002c43cf2
  0x0000000002c43cdb: mov    %rdx,0x278(%rdi)
  0x0000000002c43ce2: movq   $0x1,0x280(%rdi)
  0x0000000002c43ced: jmpq   0x0000000002c43d1e
  0x0000000002c43cf2: cmpq   $0x0,0x288(%rdi)
  0x0000000002c43cfd: jne    0x0000000002c43d16
  0x0000000002c43cff: mov    %rdx,0x288(%rdi)
  0x0000000002c43d06: movq   $0x1,0x290(%rdi)
  0x0000000002c43d11: jmpq   0x0000000002c43d1e
  0x0000000002c43d16: addq   $0x1,0x270(%rdi)
  0x0000000002c43d1e: mov    %rsi,%r8
  0x0000000002c43d21: mov    %r9,%rdx           ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 634)

  0x0000000002c43d24: mov    %rsi,0x88(%rsp)
  0x0000000002c43d2c: nop
  0x0000000002c43d2d: movabs $0xffffffffffffffff,%rax
  0x0000000002c43d37: callq  0x0000000002b763e0  ; OopMap{[88]=Oop [72]=Oop [112]=Oop [136]=Oop [120]=Oop [80]=Oop off=1468}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 634)
                                                ;   {virtual_call}
  0x0000000002c43d3c: cmp    $0x0,%eax
  0x0000000002c43d3f: movabs $0x1948fff0,%r8    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c43d49: movabs $0x2a0,%r9
  0x0000000002c43d53: je     0x0000000002c43d63
  0x0000000002c43d59: movabs $0x2b0,%r9
  0x0000000002c43d63: mov    (%r8,%r9,1),%rdi
  0x0000000002c43d67: lea    0x1(%rdi),%rdi
  0x0000000002c43d6b: mov    %rdi,(%r8,%r9,1)
  0x0000000002c43d6f: mov    0x78(%rsp),%rcx
  0x0000000002c43d74: jne    0x0000000002c44522  ;*ifeq
                                                ; - java.util.HashMap::putVal@94 (line 634)

  0x0000000002c43d7a: cmp    $0x0,%rcx
  0x0000000002c43d7e: jne    0x0000000002c43d99
  0x0000000002c43d80: movabs $0x1948fff0,%rdi   ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c43d8a: orl    $0x100,0x2d0(%rdi)
  0x0000000002c43d94: jmpq   0x0000000002c43e5a
  0x0000000002c43d99: movabs $0x7c0039770,%rsi  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x0000000002c43da3: mov    0x8(%rcx),%r9d
  0x0000000002c43da7: shl    $0x3,%r9
  0x0000000002c43dab: cmp    %r9,%rsi
  0x0000000002c43dae: jne    0x0000000002c43e3e
  0x0000000002c43db4: movabs $0x1948fff0,%rdi   ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c43dbe: mov    0x8(%rcx),%esi
  0x0000000002c43dc1: shl    $0x3,%rsi
  0x0000000002c43dc5: cmp    0x2e0(%rdi),%rsi
  0x0000000002c43dcc: jne    0x0000000002c43ddb
  0x0000000002c43dce: addq   $0x1,0x2e8(%rdi)
  0x0000000002c43dd6: jmpq   0x0000000002c43e5f
  0x0000000002c43ddb: cmp    0x2f0(%rdi),%rsi
  0x0000000002c43de2: jne    0x0000000002c43df1
  0x0000000002c43de4: addq   $0x1,0x2f8(%rdi)
  0x0000000002c43dec: jmpq   0x0000000002c43e5f
  0x0000000002c43df1: cmpq   $0x0,0x2e0(%rdi)
  0x0000000002c43dfc: jne    0x0000000002c43e15
  0x0000000002c43dfe: mov    %rsi,0x2e0(%rdi)
  0x0000000002c43e05: movq   $0x1,0x2e8(%rdi)
  0x0000000002c43e10: jmpq   0x0000000002c43e5f
  0x0000000002c43e15: cmpq   $0x0,0x2f0(%rdi)
  0x0000000002c43e20: jne    0x0000000002c43e39
  0x0000000002c43e22: mov    %rsi,0x2f0(%rdi)
  0x0000000002c43e29: movq   $0x1,0x2f8(%rdi)
  0x0000000002c43e34: jmpq   0x0000000002c43e5f
  0x0000000002c43e39: jmpq   0x0000000002c43e5f
  0x0000000002c43e3e: movabs $0x1948fff0,%rdi   ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c43e48: subq   $0x1,0x2d8(%rdi)
  0x0000000002c43e50: jmpq   0x0000000002c43e5a
  0x0000000002c43e55: jmpq   0x0000000002c43e5f
  0x0000000002c43e5a: xor    %r8,%r8
  0x0000000002c43e5d: jmp    0x0000000002c43e69
  0x0000000002c43e5f: movabs $0x1,%r8           ;*instanceof
                                                ; - java.util.HashMap::putVal@106 (line 636)

  0x0000000002c43e69: cmp    $0x0,%r8d
  0x0000000002c43e6d: movabs $0x1948fff0,%r8    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c43e77: movabs $0x308,%r9
  0x0000000002c43e81: je     0x0000000002c43e91
  0x0000000002c43e87: movabs $0x318,%r9
  0x0000000002c43e91: mov    (%r8,%r9,1),%rdi
  0x0000000002c43e95: lea    0x1(%rdi),%rdi
  0x0000000002c43e99: mov    %rdi,(%r8,%r9,1)
  0x0000000002c43e9d: je     0x0000000002c44057  ;*ifeq
                                                ; - java.util.HashMap::putVal@109 (line 636)

  0x0000000002c43ea3: cmp    $0x0,%rcx
  0x0000000002c43ea7: jne    0x0000000002c43ec3
  0x0000000002c43ea9: movabs $0x1948fff0,%r9    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c43eb3: orl    $0x100,0x320(%r9)
  0x0000000002c43ebe: jmpq   0x0000000002c43f84
  0x0000000002c43ec3: movabs $0x7c0039770,%rdi  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x0000000002c43ecd: mov    0x8(%rcx),%r8d
  0x0000000002c43ed1: shl    $0x3,%r8
  0x0000000002c43ed5: cmp    %r8,%rdi
  0x0000000002c43ed8: jne    0x0000000002c43f68
  0x0000000002c43ede: movabs $0x1948fff0,%r9    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c43ee8: mov    0x8(%rcx),%edi
  0x0000000002c43eeb: shl    $0x3,%rdi
  0x0000000002c43eef: cmp    0x330(%r9),%rdi
  0x0000000002c43ef6: jne    0x0000000002c43f05
  0x0000000002c43ef8: addq   $0x1,0x338(%r9)
  0x0000000002c43f00: jmpq   0x0000000002c43f84
  0x0000000002c43f05: cmp    0x340(%r9),%rdi
  0x0000000002c43f0c: jne    0x0000000002c43f1b
  0x0000000002c43f0e: addq   $0x1,0x348(%r9)
  0x0000000002c43f16: jmpq   0x0000000002c43f84
  0x0000000002c43f1b: cmpq   $0x0,0x330(%r9)
  0x0000000002c43f26: jne    0x0000000002c43f3f
  0x0000000002c43f28: mov    %rdi,0x330(%r9)
  0x0000000002c43f2f: movq   $0x1,0x338(%r9)
  0x0000000002c43f3a: jmpq   0x0000000002c43f84
  0x0000000002c43f3f: cmpq   $0x0,0x340(%r9)
  0x0000000002c43f4a: jne    0x0000000002c43f63
  0x0000000002c43f4c: mov    %rdi,0x340(%r9)
  0x0000000002c43f53: movq   $0x1,0x348(%r9)
  0x0000000002c43f5e: jmpq   0x0000000002c43f84
  0x0000000002c43f63: jmpq   0x0000000002c43f84
  0x0000000002c43f68: movabs $0x1948fff0,%r9    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c43f72: subq   $0x1,0x328(%r9)
  0x0000000002c43f7a: jmpq   0x0000000002c44922
  0x0000000002c43f7f: jmpq   0x0000000002c43f84
  0x0000000002c43f84: mov    %rcx,%rdx          ;*checkcast
                                                ; - java.util.HashMap::putVal@114 (line 637)

  0x0000000002c43f87: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x0000000002c4492b
  0x0000000002c43f8a: mov    %rdx,%r8
  0x0000000002c43f8d: movabs $0x1948fff0,%r9    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c43f97: mov    0x8(%r8),%r8d
  0x0000000002c43f9b: shl    $0x3,%r8
  0x0000000002c43f9f: cmp    0x360(%r9),%r8
  0x0000000002c43fa6: jne    0x0000000002c43fb5
  0x0000000002c43fa8: addq   $0x1,0x368(%r9)
  0x0000000002c43fb0: jmpq   0x0000000002c4401b
  0x0000000002c43fb5: cmp    0x370(%r9),%r8
  0x0000000002c43fbc: jne    0x0000000002c43fcb
  0x0000000002c43fbe: addq   $0x1,0x378(%r9)
  0x0000000002c43fc6: jmpq   0x0000000002c4401b
  0x0000000002c43fcb: cmpq   $0x0,0x360(%r9)
  0x0000000002c43fd6: jne    0x0000000002c43fef
  0x0000000002c43fd8: mov    %r8,0x360(%r9)
  0x0000000002c43fdf: movq   $0x1,0x368(%r9)
  0x0000000002c43fea: jmpq   0x0000000002c4401b
  0x0000000002c43fef: cmpq   $0x0,0x370(%r9)
  0x0000000002c43ffa: jne    0x0000000002c44013
  0x0000000002c43ffc: mov    %r8,0x370(%r9)
  0x0000000002c44003: movq   $0x1,0x378(%r9)
  0x0000000002c4400e: jmpq   0x0000000002c4401b
  0x0000000002c44013: addq   $0x1,0x358(%r9)
  0x0000000002c4401b: mov    0x48(%rsp),%r8
  0x0000000002c44020: mov    0x70(%rsp),%r9
  0x0000000002c44025: mov    0x40(%rsp),%edi
  0x0000000002c44029: mov    0x50(%rsp),%rsi
  0x0000000002c4402e: mov    0x58(%rsp),%rcx    ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 637)

  0x0000000002c44033: nop
  0x0000000002c44034: nop
  0x0000000002c44035: nop
  0x0000000002c44036: nop
  0x0000000002c44037: callq  0x0000000002b761a0  ; OopMap{[88]=Oop [72]=Oop [112]=Oop [80]=Oop [120]=Oop off=2236}
                                                ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 637)
                                                ;   {optimized virtual_call}
  0x0000000002c4403c: movabs $0x1948fff0,%r8    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c44046: incl   0x388(%r8)
  0x0000000002c4404d: mov    0x78(%rsp),%rcx
  0x0000000002c44052: jmpq   0x0000000002c44536  ;*goto
                                                ; - java.util.HashMap::putVal@128 (line 637)

  0x0000000002c44057: mov    0x78(%rsp),%rcx
  0x0000000002c4405c: mov    $0x0,%esi          ;*aload
                                                ; - java.util.HashMap::putVal@134 (line 640)

  0x0000000002c44061: nopl   0x0(%rax)
  0x0000000002c44068: mov    %esi,0x84(%rsp)
  0x0000000002c4406f: mov    0x50(%rsp),%r9
  0x0000000002c44074: mov    0x40(%rsp),%r8d
  0x0000000002c44079: mov    0x18(%rcx),%edi    ; implicit exception: dispatches to 0x0000000002c44930
  0x0000000002c4407c: shl    $0x3,%rdi          ;*getfield next
                                                ; - java.util.HashMap::putVal@136 (line 640)

  0x0000000002c44080: mov    %rdi,0x98(%rsp)
  0x0000000002c44088: cmp    $0x0,%rdi
  0x0000000002c4408c: movabs $0x1948fff0,%rdx   ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c44096: movabs $0x3a0,%rbx
  0x0000000002c440a0: jne    0x0000000002c440b0
  0x0000000002c440a6: movabs $0x3b0,%rbx
  0x0000000002c440b0: mov    (%rdx,%rbx,1),%rax
  0x0000000002c440b4: lea    0x1(%rax),%rax
  0x0000000002c440b8: mov    %rax,(%rdx,%rbx,1)
  0x0000000002c440bc: je     0x0000000002c44304  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@142 (line 640)

  0x0000000002c440c2: mov    0xc(%rdi),%edx     ;*getfield hash
                                                ; - java.util.HashMap::putVal@177 (line 646)
                                                ; implicit exception: dispatches to 0x0000000002c44935
  0x0000000002c440c5: cmp    %r8d,%edx
  0x0000000002c440c8: movabs $0x1948fff0,%rdx   ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c440d2: movabs $0x458,%rbx
  0x0000000002c440dc: jne    0x0000000002c440ec
  0x0000000002c440e2: movabs $0x468,%rbx
  0x0000000002c440ec: mov    (%rdx,%rbx,1),%rax
  0x0000000002c440f0: lea    0x1(%rax),%rax
  0x0000000002c440f4: mov    %rax,(%rdx,%rbx,1)
  0x0000000002c440f8: jne    0x0000000002c4426d  ;*if_icmpne
                                                ; - java.util.HashMap::putVal@181 (line 646)

  0x0000000002c440fe: mov    0x10(%rdi),%ebx
  0x0000000002c44101: shl    $0x3,%rbx          ;*getfield key
                                                ; - java.util.HashMap::putVal@186 (line 646)

  0x0000000002c44105: cmp    %r9,%rbx
  0x0000000002c44108: movabs $0x1948fff0,%rdx   ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c44112: movabs $0x478,%rax
  0x0000000002c4411c: je     0x0000000002c4412c
  0x0000000002c44122: movabs $0x488,%rax
  0x0000000002c4412c: mov    (%rdx,%rax,1),%r11
  0x0000000002c44130: lea    0x1(%r11),%r11
  0x0000000002c44134: mov    %r11,(%rdx,%rax,1)
  0x0000000002c44138: je     0x0000000002c442d1  ;*if_acmpeq
                                                ; - java.util.HashMap::putVal@193 (line 646)

  0x0000000002c4413e: cmp    $0x0,%r9
  0x0000000002c44142: movabs $0x1948fff0,%rdx   ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c4414c: movabs $0x498,%rax
  0x0000000002c44156: je     0x0000000002c44166
  0x0000000002c4415c: movabs $0x4a8,%rax
  0x0000000002c44166: mov    (%rdx,%rax,1),%r11
  0x0000000002c4416a: lea    0x1(%r11),%r11
  0x0000000002c4416e: mov    %r11,(%rdx,%rax,1)
  0x0000000002c44172: je     0x0000000002c4426d  ;*ifnull
                                                ; - java.util.HashMap::putVal@197 (line 646)

  0x0000000002c44178: mov    %rcx,0x90(%rsp)
  0x0000000002c44180: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x0000000002c4493a
  0x0000000002c44183: mov    %r9,%rdx
  0x0000000002c44186: movabs $0x1948fff0,%rax   ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c44190: mov    0x8(%rdx),%edx
  0x0000000002c44193: shl    $0x3,%rdx
  0x0000000002c44197: cmp    0x4c0(%rax),%rdx
  0x0000000002c4419e: jne    0x0000000002c441ad
  0x0000000002c441a0: addq   $0x1,0x4c8(%rax)
  0x0000000002c441a8: jmpq   0x0000000002c44213
  0x0000000002c441ad: cmp    0x4d0(%rax),%rdx
  0x0000000002c441b4: jne    0x0000000002c441c3
  0x0000000002c441b6: addq   $0x1,0x4d8(%rax)
  0x0000000002c441be: jmpq   0x0000000002c44213
  0x0000000002c441c3: cmpq   $0x0,0x4c0(%rax)
  0x0000000002c441ce: jne    0x0000000002c441e7
  0x0000000002c441d0: mov    %rdx,0x4c0(%rax)
  0x0000000002c441d7: movq   $0x1,0x4c8(%rax)
  0x0000000002c441e2: jmpq   0x0000000002c44213
  0x0000000002c441e7: cmpq   $0x0,0x4d0(%rax)
  0x0000000002c441f2: jne    0x0000000002c4420b
  0x0000000002c441f4: mov    %rdx,0x4d0(%rax)
  0x0000000002c441fb: movq   $0x1,0x4d8(%rax)
  0x0000000002c44206: jmpq   0x0000000002c44213
  0x0000000002c4420b: addq   $0x1,0x4b8(%rax)
  0x0000000002c44213: mov    %rbx,%r8
  0x0000000002c44216: mov    %r9,%rdx           ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 647)

  0x0000000002c44219: mov    %rbx,0xa0(%rsp)
  0x0000000002c44221: nop
  0x0000000002c44222: nop
  0x0000000002c44223: nop
  0x0000000002c44224: nop
  0x0000000002c44225: movabs $0xffffffffffffffff,%rax
  0x0000000002c4422f: callq  0x0000000002b763e0  ; OopMap{[88]=Oop [72]=Oop [112]=Oop [152]=Oop [160]=Oop [80]=Oop [144]=Oop off=2740}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 647)
                                                ;   {virtual_call}
  0x0000000002c44234: cmp    $0x0,%eax
  0x0000000002c44237: movabs $0x1948fff0,%r8    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c44241: movabs $0x4e8,%r9
  0x0000000002c4424b: je     0x0000000002c4425b
  0x0000000002c44251: movabs $0x4f8,%r9
  0x0000000002c4425b: mov    (%r8,%r9,1),%rdi
  0x0000000002c4425f: lea    0x1(%rdi),%rdi
  0x0000000002c44263: mov    %rdi,(%r8,%r9,1)
  0x0000000002c44267: jne    0x0000000002c442de  ;*ifeq
                                                ; - java.util.HashMap::putVal@206 (line 647)

  0x0000000002c4426d: mov    0x84(%rsp),%esi
  0x0000000002c44274: inc    %esi
  0x0000000002c44276: movabs $0x1948fff0,%r8    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c44280: mov    0xe0(%r8),%r9d
  0x0000000002c44287: add    $0x8,%r9d
  0x0000000002c4428b: mov    %r9d,0xe0(%r8)
  0x0000000002c44292: movabs $0x1933bd40,%r8    ;   {metadata({method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c4429c: and    $0xfff8,%r9d
  0x0000000002c442a3: cmp    $0x0,%r9d
  0x0000000002c442a7: je     0x0000000002c4493f  ; OopMap{[88]=Oop [72]=Oop [112]=Oop [152]=Oop [80]=Oop off=2861}
                                                ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 639)

  0x0000000002c442ad: test   %eax,-0x25741b3(%rip)        # 0x00000000006d0100
                                                ;   {poll}
  0x0000000002c442b3: movabs $0x1948fff0,%r8    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c442bd: incl   0x520(%r8)
  0x0000000002c442c4: mov    0x98(%rsp),%rcx
  0x0000000002c442cc: jmpq   0x0000000002c44068  ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 639)

  0x0000000002c442d1: mov    0x98(%rsp),%rax
  0x0000000002c442d9: jmpq   0x0000000002c44536  ;*aload
                                                ; - java.util.HashMap::putVal@222 (line 652)

  0x0000000002c442de: mov    0x90(%rsp),%rcx
  0x0000000002c442e6: movabs $0x1948fff0,%r8    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c442f0: incl   0x508(%r8)
  0x0000000002c442f7: mov    0x98(%rsp),%rax
  0x0000000002c442ff: jmpq   0x0000000002c44536  ;*goto
                                                ; - java.util.HashMap::putVal@209 (line 648)

  0x0000000002c44304: mov    %rcx,0x90(%rsp)
  0x0000000002c4430c: mov    0x48(%rsp),%rdx
  0x0000000002c44311: movabs $0x1948fff0,%r8    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c4431b: mov    0x8(%rdx),%edx
  0x0000000002c4431e: shl    $0x3,%rdx
  0x0000000002c44322: cmp    0x3c8(%r8),%rdx
  0x0000000002c44329: jne    0x0000000002c44338
  0x0000000002c4432b: addq   $0x1,0x3d0(%r8)
  0x0000000002c44333: jmpq   0x0000000002c4439e
  0x0000000002c44338: cmp    0x3d8(%r8),%rdx
  0x0000000002c4433f: jne    0x0000000002c4434e
  0x0000000002c44341: addq   $0x1,0x3e0(%r8)
  0x0000000002c44349: jmpq   0x0000000002c4439e
  0x0000000002c4434e: cmpq   $0x0,0x3c8(%r8)
  0x0000000002c44359: jne    0x0000000002c44372
  0x0000000002c4435b: mov    %rdx,0x3c8(%r8)
  0x0000000002c44362: movq   $0x1,0x3d0(%r8)
  0x0000000002c4436d: jmpq   0x0000000002c4439e
  0x0000000002c44372: cmpq   $0x0,0x3d8(%r8)
  0x0000000002c4437d: jne    0x0000000002c44396
  0x0000000002c4437f: mov    %rdx,0x3d8(%r8)
  0x0000000002c44386: movq   $0x1,0x3e0(%r8)
  0x0000000002c44391: jmpq   0x0000000002c4439e
  0x0000000002c44396: addq   $0x1,0x3c0(%r8)
  0x0000000002c4439e: mov    0x40(%rsp),%r8d
  0x0000000002c443a3: mov    0x50(%rsp),%r9
  0x0000000002c443a8: mov    0x58(%rsp),%rdi
  0x0000000002c443ad: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x0000000002c443b7: mov    0x48(%rsp),%rdx    ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@152 (line 641)

  0x0000000002c443bc: nop
  0x0000000002c443bd: movabs $0xffffffffffffffff,%rax
  0x0000000002c443c7: callq  0x0000000002b763e0  ; OopMap{[88]=Oop [72]=Oop [112]=Oop [80]=Oop [152]=Oop [144]=Oop off=3148}
                                                ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@152 (line 641)
                                                ;   {virtual_call}
  0x0000000002c443cc: mov    0x90(%rsp),%rcx
  0x0000000002c443d4: mov    %rax,%r10
  0x0000000002c443d7: shr    $0x3,%r10
  0x0000000002c443db: mov    %r10d,0x18(%rcx)
  0x0000000002c443df: mov    %rcx,%r8
  0x0000000002c443e2: shr    $0x9,%r8
  0x0000000002c443e6: movabs $0xe6e6000,%r9
  0x0000000002c443f0: movb   $0x0,(%r8,%r9,1)   ;*putfield next
                                                ; - java.util.HashMap::putVal@155 (line 641)

  0x0000000002c443f5: mov    0x84(%rsp),%esi
  0x0000000002c443fc: cmp    $0x7,%esi
  0x0000000002c443ff: movabs $0x1948fff0,%r8    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c44409: movabs $0x3f0,%r9
  0x0000000002c44413: jl     0x0000000002c44423
  0x0000000002c44419: movabs $0x400,%r9
  0x0000000002c44423: mov    (%r8,%r9,1),%rdx
  0x0000000002c44427: lea    0x1(%rdx),%rdx
  0x0000000002c4442b: mov    %rdx,(%r8,%r9,1)
  0x0000000002c4442f: jge    0x0000000002c44442  ;*if_icmplt
                                                ; - java.util.HashMap::putVal@162 (line 642)

  0x0000000002c44435: mov    0x98(%rsp),%rax
  0x0000000002c4443d: jmpq   0x0000000002c44536  ;*aload
                                                ; - java.util.HashMap::putVal@222 (line 652)

  0x0000000002c44442: mov    %esi,0x84(%rsp)
  0x0000000002c44449: mov    %rcx,0x90(%rsp)
  0x0000000002c44451: mov    0x48(%rsp),%rdx
  0x0000000002c44456: movabs $0x1948fff0,%r8    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c44460: mov    0x8(%rdx),%edx
  0x0000000002c44463: shl    $0x3,%rdx
  0x0000000002c44467: cmp    0x418(%r8),%rdx
  0x0000000002c4446e: jne    0x0000000002c4447d
  0x0000000002c44470: addq   $0x1,0x420(%r8)
  0x0000000002c44478: jmpq   0x0000000002c444e3
  0x0000000002c4447d: cmp    0x428(%r8),%rdx
  0x0000000002c44484: jne    0x0000000002c44493
  0x0000000002c44486: addq   $0x1,0x430(%r8)
  0x0000000002c4448e: jmpq   0x0000000002c444e3
  0x0000000002c44493: cmpq   $0x0,0x418(%r8)
  0x0000000002c4449e: jne    0x0000000002c444b7
  0x0000000002c444a0: mov    %rdx,0x418(%r8)
  0x0000000002c444a7: movq   $0x1,0x420(%r8)
  0x0000000002c444b2: jmpq   0x0000000002c444e3
  0x0000000002c444b7: cmpq   $0x0,0x428(%r8)
  0x0000000002c444c2: jne    0x0000000002c444db
  0x0000000002c444c4: mov    %rdx,0x428(%r8)
  0x0000000002c444cb: movq   $0x1,0x430(%r8)
  0x0000000002c444d6: jmpq   0x0000000002c444e3
  0x0000000002c444db: addq   $0x1,0x410(%r8)
  0x0000000002c444e3: mov    0x70(%rsp),%r8
  0x0000000002c444e8: mov    0x40(%rsp),%r9d
  0x0000000002c444ed: mov    0x48(%rsp),%rdx    ;*invokevirtual treeifyBin
                                                ; - java.util.HashMap::putVal@169 (line 643)

  0x0000000002c444f2: nop
  0x0000000002c444f3: nop
  0x0000000002c444f4: nop
  0x0000000002c444f5: nop
  0x0000000002c444f6: nop
  0x0000000002c444f7: callq  0x0000000002b761a0  ; OopMap{[88]=Oop [72]=Oop [112]=Oop [80]=Oop [144]=Oop [152]=Oop off=3452}
                                                ;*invokevirtual treeifyBin
                                                ; - java.util.HashMap::putVal@169 (line 643)
                                                ;   {optimized virtual_call}
  0x0000000002c444fc: movabs $0x1948fff0,%r8    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c44506: incl   0x440(%r8)
  0x0000000002c4450d: mov    0x98(%rsp),%rax
  0x0000000002c44515: mov    0x90(%rsp),%rcx
  0x0000000002c4451d: jmpq   0x0000000002c44536  ;*goto
                                                ; - java.util.HashMap::putVal@172 (line 643)

  0x0000000002c44522: movabs $0x1948fff0,%r8    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c4452c: incl   0x2c0(%r8)
  0x0000000002c44533: mov    %rcx,%rax          ;*goto
                                                ; - java.util.HashMap::putVal@101 (line 635)

  0x0000000002c44536: cmp    $0x0,%rax
  0x0000000002c4453a: movabs $0x1948fff0,%r8    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c44544: movabs $0x538,%rdx
  0x0000000002c4454e: je     0x0000000002c4455e
  0x0000000002c44554: movabs $0x548,%rdx
  0x0000000002c4455e: mov    (%r8,%rdx,1),%rsi
  0x0000000002c44562: lea    0x1(%rsi),%rsi
  0x0000000002c44566: mov    %rsi,(%r8,%rdx,1)
  0x0000000002c4456a: jne    0x0000000002c445d8  ;*ifnull
                                                ; - java.util.HashMap::putVal@224 (line 652)

  0x0000000002c44570: mov    0x48(%rsp),%rdx
  0x0000000002c44575: mov    0x18(%rdx),%r8d    ;*getfield modCount
                                                ; - java.util.HashMap::putVal@261 (line 660)

  0x0000000002c44579: inc    %r8d
  0x0000000002c4457c: mov    %r8d,0x18(%rdx)    ;*putfield modCount
                                                ; - java.util.HashMap::putVal@266 (line 660)

  0x0000000002c44580: mov    0x14(%rdx),%r8d    ;*getfield size
                                                ; - java.util.HashMap::putVal@271 (line 661)

  0x0000000002c44584: inc    %r8d
  0x0000000002c44587: mov    %r8d,0x14(%rdx)    ;*putfield size
                                                ; - java.util.HashMap::putVal@277 (line 661)

  0x0000000002c4458b: mov    0x1c(%rdx),%esi    ;*getfield threshold
                                                ; - java.util.HashMap::putVal@281 (line 661)

  0x0000000002c4458e: cmp    %esi,%r8d
  0x0000000002c44591: movabs $0x1948fff0,%r8    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c4459b: movabs $0x5c8,%rsi
  0x0000000002c445a5: jle    0x0000000002c445b5
  0x0000000002c445ab: movabs $0x5d8,%rsi
  0x0000000002c445b5: mov    (%r8,%rsi,1),%rdi
  0x0000000002c445b9: lea    0x1(%rdi),%rdi
  0x0000000002c445bd: mov    %rdi,(%r8,%rsi,1)
  0x0000000002c445c1: mov    %rcx,0xc0(%rsp)
  0x0000000002c445c9: jg     0x0000000002c4475b  ;*if_icmple
                                                ; - java.util.HashMap::putVal@284 (line 661)

  0x0000000002c445cf: mov    0x60(%rsp),%ecx
  0x0000000002c445d3: jmpq   0x0000000002c44805  ;*aload_0
                                                ; - java.util.HashMap::putVal@292 (line 663)

  0x0000000002c445d8: mov    0x44(%rsp),%esi
  0x0000000002c445dc: mov    0x48(%rsp),%rdx
  0x0000000002c445e1: mov    0x14(%rax),%edi    ; implicit exception: dispatches to 0x0000000002c44956
  0x0000000002c445e4: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.util.HashMap::putVal@229 (line 653)

  0x0000000002c445e8: cmp    $0x0,%esi
  0x0000000002c445eb: movabs $0x1948fff0,%r8    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c445f5: movabs $0x558,%rbx
  0x0000000002c445ff: je     0x0000000002c4460f
  0x0000000002c44605: movabs $0x568,%rbx
  0x0000000002c4460f: mov    (%r8,%rbx,1),%r9
  0x0000000002c44613: lea    0x1(%r9),%r9
  0x0000000002c44617: mov    %r9,(%r8,%rbx,1)
  0x0000000002c4461b: je     0x0000000002c4465b  ;*ifeq
                                                ; - java.util.HashMap::putVal@236 (line 654)

  0x0000000002c44621: cmp    $0x0,%rdi
  0x0000000002c44625: movabs $0x1948fff0,%r8    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c4462f: movabs $0x578,%rbx
  0x0000000002c44639: jne    0x0000000002c44649
  0x0000000002c4463f: movabs $0x588,%rbx
  0x0000000002c44649: mov    (%r8,%rbx,1),%r9
  0x0000000002c4464d: lea    0x1(%r9),%r9
  0x0000000002c44651: mov    %r9,(%r8,%rbx,1)
  0x0000000002c44655: jne    0x0000000002c44681  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@241 (line 654)

  0x0000000002c4465b: mov    0x58(%rsp),%rbx
  0x0000000002c44660: mov    %rbx,%r10
  0x0000000002c44663: shr    $0x3,%r10
  0x0000000002c44667: mov    %r10d,0x14(%rax)
  0x0000000002c4466b: mov    %rax,%r8
  0x0000000002c4466e: shr    $0x9,%r8
  0x0000000002c44672: movabs $0xe6e6000,%r9
  0x0000000002c4467c: movb   $0x0,(%r8,%r9,1)   ;*putfield value
                                                ; - java.util.HashMap::putVal@247 (line 655)

  0x0000000002c44681: mov    %rdi,0xa8(%rsp)
  0x0000000002c44689: mov    %rcx,0xb0(%rsp)
  0x0000000002c44691: mov    %rdx,%r8
  0x0000000002c44694: movabs $0x1948fff0,%r9    ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c4469e: mov    0x8(%r8),%r8d
  0x0000000002c446a2: shl    $0x3,%r8
  0x0000000002c446a6: cmp    0x5a0(%r9),%r8
  0x0000000002c446ad: jne    0x0000000002c446bc
  0x0000000002c446af: addq   $0x1,0x5a8(%r9)
  0x0000000002c446b7: jmpq   0x0000000002c44722
  0x0000000002c446bc: cmp    0x5b0(%r9),%r8
  0x0000000002c446c3: jne    0x0000000002c446d2
  0x0000000002c446c5: addq   $0x1,0x5b8(%r9)
  0x0000000002c446cd: jmpq   0x0000000002c44722
  0x0000000002c446d2: cmpq   $0x0,0x5a0(%r9)
  0x0000000002c446dd: jne    0x0000000002c446f6
  0x0000000002c446df: mov    %r8,0x5a0(%r9)
  0x0000000002c446e6: movq   $0x1,0x5a8(%r9)
  0x0000000002c446f1: jmpq   0x0000000002c44722
  0x0000000002c446f6: cmpq   $0x0,0x5b0(%r9)
  0x0000000002c44701: jne    0x0000000002c4471a
  0x0000000002c44703: mov    %r8,0x5b0(%r9)
  0x0000000002c4470a: movq   $0x1,0x5b8(%r9)
  0x0000000002c44715: jmpq   0x0000000002c44722
  0x0000000002c4471a: addq   $0x1,0x598(%r9)
  0x0000000002c44722: mov    %rax,%r8
  0x0000000002c44725: mov    %rdx,%r9
  0x0000000002c44728: mov    %r9,%rdx           ;*invokevirtual afterNodeAccess
                                                ; - java.util.HashMap::putVal@253 (line 656)

  0x0000000002c4472b: mov    %rax,0xb8(%rsp)
  0x0000000002c44733: nop
  0x0000000002c44734: nop
  0x0000000002c44735: movabs $0xffffffffffffffff,%rax
  0x0000000002c4473f: callq  0x0000000002b763e0  ; OopMap{[112]=Oop [80]=Oop [176]=Oop [184]=Oop [72]=Oop [168]=Oop [88]=Oop off=4036}
                                                ;*invokevirtual afterNodeAccess
                                                ; - java.util.HashMap::putVal@253 (line 656)
                                                ;   {virtual_call}
  0x0000000002c44744: mov    0xa8(%rsp),%rax
  0x0000000002c4474c: add    $0xd0,%rsp
  0x0000000002c44753: pop    %rbp
  0x0000000002c44754: test   %eax,-0x257465a(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c4475a: retq                      ;*areturn
                                                ; - java.util.HashMap::putVal@258 (line 657)

  0x0000000002c4475b: mov    0x48(%rsp),%rdx
  0x0000000002c44760: movabs $0x1948fff0,%rsi   ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c4476a: mov    0x8(%rdx),%edx
  0x0000000002c4476d: shl    $0x3,%rdx
  0x0000000002c44771: cmp    0x5f0(%rsi),%rdx
  0x0000000002c44778: jne    0x0000000002c44787
  0x0000000002c4477a: addq   $0x1,0x5f8(%rsi)
  0x0000000002c44782: jmpq   0x0000000002c447ed
  0x0000000002c44787: cmp    0x600(%rsi),%rdx
  0x0000000002c4478e: jne    0x0000000002c4479d
  0x0000000002c44790: addq   $0x1,0x608(%rsi)
  0x0000000002c44798: jmpq   0x0000000002c447ed
  0x0000000002c4479d: cmpq   $0x0,0x5f0(%rsi)
  0x0000000002c447a8: jne    0x0000000002c447c1
  0x0000000002c447aa: mov    %rdx,0x5f0(%rsi)
  0x0000000002c447b1: movq   $0x1,0x5f8(%rsi)
  0x0000000002c447bc: jmpq   0x0000000002c447ed
  0x0000000002c447c1: cmpq   $0x0,0x600(%rsi)
  0x0000000002c447cc: jne    0x0000000002c447e5
  0x0000000002c447ce: mov    %rdx,0x600(%rsi)
  0x0000000002c447d5: movq   $0x1,0x608(%rsi)
  0x0000000002c447e0: jmpq   0x0000000002c447ed
  0x0000000002c447e5: addq   $0x1,0x5e8(%rsi)
  0x0000000002c447ed: mov    0x48(%rsp),%rdx    ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@288 (line 662)

  0x0000000002c447f2: nop
  0x0000000002c447f3: nop
  0x0000000002c447f4: nop
  0x0000000002c447f5: nop
  0x0000000002c447f6: nop
  0x0000000002c447f7: callq  0x0000000002b761a0  ; OopMap{[88]=Oop [72]=Oop [80]=Oop [112]=Oop [192]=Oop off=4220}
                                                ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@288 (line 662)
                                                ;   {optimized virtual_call}
  0x0000000002c447fc: mov    0x60(%rsp),%ecx
  0x0000000002c44800: mov    0x48(%rsp),%rdx
  0x0000000002c44805: mov    %rdx,%r14
  0x0000000002c44808: movabs $0x1948fff0,%rsi   ;   {metadata(method data for {method} {0x000000001933bd48} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c44812: mov    0x8(%r14),%r14d
  0x0000000002c44816: shl    $0x3,%r14
  0x0000000002c4481a: cmp    0x620(%rsi),%r14
  0x0000000002c44821: jne    0x0000000002c44830
  0x0000000002c44823: addq   $0x1,0x628(%rsi)
  0x0000000002c4482b: jmpq   0x0000000002c44896
  0x0000000002c44830: cmp    0x630(%rsi),%r14
  0x0000000002c44837: jne    0x0000000002c44846
  0x0000000002c44839: addq   $0x1,0x638(%rsi)
  0x0000000002c44841: jmpq   0x0000000002c44896
  0x0000000002c44846: cmpq   $0x0,0x620(%rsi)
  0x0000000002c44851: jne    0x0000000002c4486a
  0x0000000002c44853: mov    %r14,0x620(%rsi)
  0x0000000002c4485a: movq   $0x1,0x628(%rsi)
  0x0000000002c44865: jmpq   0x0000000002c44896
  0x0000000002c4486a: cmpq   $0x0,0x630(%rsi)
  0x0000000002c44875: jne    0x0000000002c4488e
  0x0000000002c44877: mov    %r14,0x630(%rsi)
  0x0000000002c4487e: movq   $0x1,0x638(%rsi)
  0x0000000002c44889: jmpq   0x0000000002c44896
  0x0000000002c4488e: addq   $0x1,0x618(%rsi)
  0x0000000002c44896: mov    %rcx,%r8
  0x0000000002c44899: mov    %rdx,%rdi
  0x0000000002c4489c: mov    %rdi,%rdx          ;*invokevirtual afterNodeInsertion
                                                ; - java.util.HashMap::putVal@295 (line 663)

  0x0000000002c4489f: nop
  0x0000000002c448a0: nop
  0x0000000002c448a1: nop
  0x0000000002c448a2: nop
  0x0000000002c448a3: nop
  0x0000000002c448a4: nop
  0x0000000002c448a5: movabs $0xffffffffffffffff,%rax
  0x0000000002c448af: callq  0x0000000002b763e0  ; OopMap{[72]=Oop [112]=Oop [80]=Oop [88]=Oop [192]=Oop off=4404}
                                                ;*invokevirtual afterNodeInsertion
                                                ; - java.util.HashMap::putVal@295 (line 663)
                                                ;   {virtual_call}
  0x0000000002c448b4: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002c448be: add    $0xd0,%rsp
  0x0000000002c448c5: pop    %rbp
  0x0000000002c448c6: test   %eax,-0x25747cc(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c448cc: retq   
  0x0000000002c448cd: mov    %rbx,0x8(%rsp)
  0x0000000002c448d2: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c448da: callq  0x0000000002c31360  ; OopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop [88]=Oop off=4447}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1 (line 627)
                                                ;   {runtime_call}
  0x0000000002c448df: jmpq   0x0000000002c437fd
  0x0000000002c448e4: callq  0x0000000002c2cc80  ; OopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop [88]=Oop rbx=Oop off=4457}
                                                ;*arraylength
                                                ; - java.util.HashMap::putVal@12 (line 627)
                                                ;   {runtime_call}
  0x0000000002c448e9: callq  0x0000000002c2cc80  ; OopMap{[88]=Oop [80]=Oop [72]=Oop r8=Oop off=4462}
                                                ;*arraylength
                                                ; - java.util.HashMap::putVal@26 (line 628)
                                                ;   {runtime_call}
  0x0000000002c448ee: callq  0x0000000002c2cc80  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4467}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 629)
                                                ;   {runtime_call}
  0x0000000002c448f3: callq  0x0000000002c2cc80  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4472}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 629)
                                                ;   {runtime_call}
  0x0000000002c448f8: mov    %r8,(%rsp)
  0x0000000002c448fc: callq  0x0000000002b9f300  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4481}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 629)
                                                ;   {runtime_call}
  0x0000000002c44901: mov    %r8,(%rsp)
  0x0000000002c44905: callq  0x0000000002b9f300  ; OopMap{[88]=Oop [80]=Oop [72]=Oop [120]=Oop rax=Oop rbx=Oop off=4490}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 630)
                                                ;   {runtime_call}
  0x0000000002c4490a: callq  0x0000000002c2cc80  ; OopMap{[88]=Oop [80]=Oop [72]=Oop [120]=Oop rax=Oop rbx=Oop off=4495}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 630)
                                                ;   {runtime_call}
  0x0000000002c4490f: mov    %rax,(%rsp)
  0x0000000002c44913: callq  0x0000000002c2ec40  ; OopMap{[88]=Oop [80]=Oop [72]=Oop [120]=Oop rax=Oop rbx=Oop off=4504}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 630)
                                                ;   {runtime_call}
  0x0000000002c44918: callq  0x0000000002c2cc80  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop rcx=Oop [120]=Oop off=4509}
                                                ;*getfield hash
                                                ; - java.util.HashMap::putVal@65 (line 633)
                                                ;   {runtime_call}
  0x0000000002c4491d: callq  0x0000000002c2cc80  ; OopMap{[88]=Oop [72]=Oop r9=Oop [80]=Oop [120]=Oop [112]=Oop rsi=Oop off=4514}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 634)
                                                ;   {runtime_call}
  0x0000000002c44922: mov    %rcx,(%rsp)
  0x0000000002c44926: callq  0x0000000002c2ee80  ; OopMap{[88]=Oop [72]=Oop [112]=Oop [80]=Oop rcx=Oop [120]=Oop off=4523}
                                                ;*checkcast
                                                ; - java.util.HashMap::putVal@114 (line 637)
                                                ;   {runtime_call}
  0x0000000002c4492b: callq  0x0000000002c2cc80  ; OopMap{[88]=Oop [72]=Oop [112]=Oop [80]=Oop rcx=Oop [120]=Oop rdx=Oop off=4528}
                                                ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 637)
                                                ;   {runtime_call}
  0x0000000002c44930: callq  0x0000000002c2cc80  ; OopMap{[88]=Oop [72]=Oop [112]=Oop rcx=Oop r9=Oop [80]=Oop off=4533}
                                                ;*getfield next
                                                ; - java.util.HashMap::putVal@136 (line 640)
                                                ;   {runtime_call}
  0x0000000002c44935: callq  0x0000000002c2cc80  ; OopMap{[88]=Oop [72]=Oop [112]=Oop rcx=Oop r9=Oop [80]=Oop rdi=Oop [152]=Oop off=4538}
                                                ;*getfield hash
                                                ; - java.util.HashMap::putVal@177 (line 646)
                                                ;   {runtime_call}
  0x0000000002c4493a: callq  0x0000000002c2cc80  ; OopMap{[88]=Oop [72]=Oop [112]=Oop r9=Oop [80]=Oop [152]=Oop [144]=Oop rbx=Oop off=4543}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 647)
                                                ;   {runtime_call}
  0x0000000002c4493f: mov    %r8,0x8(%rsp)
  0x0000000002c44944: movq   $0xdb,(%rsp)
  0x0000000002c4494c: callq  0x0000000002c31360  ; OopMap{[88]=Oop [72]=Oop [112]=Oop [152]=Oop [80]=Oop off=4561}
                                                ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 639)
                                                ;   {runtime_call}
  0x0000000002c44951: jmpq   0x0000000002c442ad
  0x0000000002c44956: callq  0x0000000002c2cc80  ; OopMap{[88]=Oop [112]=Oop [80]=Oop rdx=Oop [72]=Oop rax=Oop rcx=Oop off=4571}
                                                ;*getfield value
                                                ; - java.util.HashMap::putVal@229 (line 653)
                                                ;   {runtime_call}
  0x0000000002c4495b: nop
  0x0000000002c4495c: nop
  0x0000000002c4495d: mov    0x2a8(%r15),%rax
  0x0000000002c44964: movabs $0x0,%r10
  0x0000000002c4496e: mov    %r10,0x2a8(%r15)
  0x0000000002c44975: movabs $0x0,%r10
  0x0000000002c4497f: mov    %r10,0x2b0(%r15)
  0x0000000002c44986: add    $0xd0,%rsp
  0x0000000002c4498d: pop    %rbp
  0x0000000002c4498e: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c44993: hlt    
  0x0000000002c44994: hlt    
  0x0000000002c44995: hlt    
  0x0000000002c44996: hlt    
  0x0000000002c44997: hlt    
  0x0000000002c44998: hlt    
  0x0000000002c44999: hlt    
  0x0000000002c4499a: hlt    
  0x0000000002c4499b: hlt    
  0x0000000002c4499c: hlt    
  0x0000000002c4499d: hlt    
  0x0000000002c4499e: hlt    
  0x0000000002c4499f: hlt    
[Stub Code]
  0x0000000002c449a0: nop                       ;   {no_reloc}
  0x0000000002c449a1: nop
  0x0000000002c449a2: nop
  0x0000000002c449a3: nop
  0x0000000002c449a4: nop
  0x0000000002c449a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c449af: jmpq   0x0000000002c449af  ;   {runtime_call}
  0x0000000002c449b4: nop
  0x0000000002c449b5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c449bf: jmpq   0x0000000002c449bf  ;   {runtime_call}
  0x0000000002c449c4: nop
  0x0000000002c449c5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c449cf: jmpq   0x0000000002c449cf  ;   {runtime_call}
  0x0000000002c449d4: nop
  0x0000000002c449d5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c449df: jmpq   0x0000000002c449df  ;   {runtime_call}
  0x0000000002c449e4: nop
  0x0000000002c449e5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c449ef: jmpq   0x0000000002c449ef  ;   {runtime_call}
  0x0000000002c449f4: nop
  0x0000000002c449f5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c449ff: jmpq   0x0000000002c449ff  ;   {runtime_call}
  0x0000000002c44a04: nop
  0x0000000002c44a05: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c44a0f: jmpq   0x0000000002c44a0f  ;   {runtime_call}
  0x0000000002c44a14: nop
  0x0000000002c44a15: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c44a1f: jmpq   0x0000000002c44a1f  ;   {runtime_call}
  0x0000000002c44a24: nop
  0x0000000002c44a25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c44a2f: jmpq   0x0000000002c44a2f  ;   {runtime_call}
  0x0000000002c44a34: nop
  0x0000000002c44a35: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c44a3f: jmpq   0x0000000002c44a3f  ;   {runtime_call}
[Exception Handler]
  0x0000000002c44a44: callq  0x0000000002c2eb20  ;   {runtime_call}
  0x0000000002c44a49: mov    %rsp,-0x28(%rsp)
  0x0000000002c44a4e: sub    $0x80,%rsp
  0x0000000002c44a55: mov    %rax,0x78(%rsp)
  0x0000000002c44a5a: mov    %rcx,0x70(%rsp)
  0x0000000002c44a5f: mov    %rdx,0x68(%rsp)
  0x0000000002c44a64: mov    %rbx,0x60(%rsp)
  0x0000000002c44a69: mov    %rbp,0x50(%rsp)
  0x0000000002c44a6e: mov    %rsi,0x48(%rsp)
  0x0000000002c44a73: mov    %rdi,0x40(%rsp)
  0x0000000002c44a78: mov    %r8,0x38(%rsp)
  0x0000000002c44a7d: mov    %r9,0x30(%rsp)
  0x0000000002c44a82: mov    %r10,0x28(%rsp)
  0x0000000002c44a87: mov    %r11,0x20(%rsp)
  0x0000000002c44a8c: mov    %r12,0x18(%rsp)
  0x0000000002c44a91: mov    %r13,0x10(%rsp)
  0x0000000002c44a96: mov    %r14,0x8(%rsp)
  0x0000000002c44a9b: mov    %r15,(%rsp)
  0x0000000002c44a9f: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c44aa9: movabs $0x2c44a49,%rdx    ;   {internal_word}
  0x0000000002c44ab3: mov    %rsp,%r8
  0x0000000002c44ab6: and    $0xfffffffffffffff0,%rsp
  0x0000000002c44aba: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c44abf: hlt    
[Deopt Handler Code]
  0x0000000002c44ac0: movabs $0x2c44ac0,%r10    ;   {section_word}
  0x0000000002c44aca: push   %r10
  0x0000000002c44acc: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c44ad1: hlt    
  0x0000000002c44ad2: hlt    
  0x0000000002c44ad3: hlt    
  0x0000000002c44ad4: hlt    
  0x0000000002c44ad5: hlt    
  0x0000000002c44ad6: hlt    
  0x0000000002c44ad7: hlt    
<nmethod compile_id='14' compiler='C1' level='3' entry='0x0000000002c43780' size='8576' address='0x0000000002c43510' relocation_offset='288' insts_offset='624' stub_offset='5264' scopes_data_offset='5584' scopes_pcs_offset='6944' dependencies_offset='8464' nul_chk_table_offset='8472' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='791' backedge_count='82' iicount='791' stamp='0.410'/>
<writer thread='20984'/>
<task_queued compile_id='17' method='java/lang/String substring (II)Ljava/lang/String;' bytes='79' count='768' iicount='768' level='3' stamp='0.410' comment='tiered' hot_count='768'/>
<writer thread='18064'/>
Decoding compiled method 0x0000000002c3f350:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019255058} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x30]  (sp of caller)
  0x0000000002c3f480: mov    0x8(%rdx),%r10d
  0x0000000002c3f484: shl    $0x3,%r10
  0x0000000002c3f488: cmp    %r10,%rax
  0x0000000002c3f48b: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c3f491: data16 xchg %ax,%ax
  0x0000000002c3f494: nopl   0x0(%rax,%rax,1)
  0x0000000002c3f49c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c3f4a0: mov    %eax,-0x6000(%rsp)
  0x0000000002c3f4a7: 
<writer thread='20984'/>
[Loaded java.lang.ProcessEnvironment$CheckedEntrySet from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
<writer thread='18064'/>
push   %rbp
  0x0000000002c3f4a8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x0000000002c3f4ac: mov    %rdx,%r9
  0x0000000002c3f4af: mov    0x10(%rdx),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x0000000002c3f4b2: test   %eax,%eax
  0x0000000002c3f4b4: jne    0x0000000002c3f59a  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x0000000002c3f4ba: mov    0xc(%rdx),%ebp     ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x0000000002c3f4bd: test   %ebp,%ebp
  0x0000000002c3f4bf: je     0x0000000002c3f5aa
  0x0000000002c3f4c5: mov    0xc(%r12,%rbp,8),%r8d  ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)

  0x0000000002c3f4ca: test   %r8d,%r8d
  0x0000000002c3f4cd: jle    0x0000000002c3f5a6  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x0000000002c3f4d3: test   %r8d,%r8d
  0x0000000002c3f4d6: jbe    0x0000000002c3f5c5
  0x0000000002c3f4dc: mov    %r8d,%r10d
  0x0000000002c3f4df: dec    %r10d
  0x0000000002c3f4e2: cmp    %r8d,%r10d
  0x0000000002c3f4e5: jae    0x0000000002c3f5c5  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x0000000002c3f4eb: movzwl 0x10(%r12,%rbp,8),%ebx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000002c3f4f1: mov    %r8d,%ecx
  0x0000000002c3f4f4: add    $0xfffffffd,%ecx
  0x0000000002c3f4f7: mov    %ebx,%eax
  0x0000000002c3f4f9: shl    $0x5,%eax
  0x0000000002c3f4fc: sub    %ebx,%eax
  0x0000000002c3f4fe: lea    (%r12,%rbp,8),%rdx
  0x0000000002c3f502: mov    $0x1,%edi
  0x0000000002c3f507: mov    $0x80000000,%r11d
  0x0000000002c3f50d: cmp    %ecx,%r10d
  0x0000000002c3f510: cmovl  %r11d,%ecx
  0x0000000002c3f514: cmp    $0x1,%ecx
  0x0000000002c3f517: jle    0x0000000002c3f56e
  0x0000000002c3f519: nopl   0x0(%rax)          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000000002c3f520: movzwl 0x10(%rdx,%rdi,2),%r11d
  0x0000000002c3f526: add    %r11d,%eax
  0x0000000002c3f529: movslq %edi,%r10
  0x0000000002c3f52c: movzwl 0x12(%rdx,%r10,2),%ebx
  0x0000000002c3f532: movzwl 0x16(%rdx,%r10,2),%ebp
  0x0000000002c3f538: movzwl 0x14(%rdx,%r10,2),%r11d
  0x0000000002c3f53e: mov    %eax,%r10d
  0x0000000002c3f541: shl    $0x5,%r10d
  0x0000000002c3f545: sub    %eax,%r10d
  0x0000000002c3f548: add    %ebx,%r10d
  0x0000000002c3f54b: mov    %r10d,%eax
  0x0000000002c3f54e: shl    $0x5,%eax
  0x0000000002c3f551: sub    %r10d,%eax
  0x0000000002c3f554: add    %r11d,%eax
  0x0000000002c3f557: mov    %eax,%ebx
  0x0000000002c3f559: shl    $0x5,%ebx
  0x0000000002c3f55c: sub    %eax,%ebx
  0x0000000002c3f55e: add    %ebp,%ebx          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000000002c3f560: mov    %ebx,%eax
  0x0000000002c3f562: shl    $0x5,%eax
  0x0000000002c3f565: sub    %ebx,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000000002c3f567: add    $0x4,%edi          ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000000002c3f56a: cmp    %ecx,%edi
  0x0000000002c3f56c: jl     0x0000000002c3f520  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000002c3f56e: cmp    %r8d,%edi
  0x0000000002c3f571: jl     0x0000000002c3f577
  0x0000000002c3f573: mov    %ebx,%eax
  0x0000000002c3f575: jmp    0x0000000002c3f596  ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000000002c3f577: movzwl 0x10(%rdx,%rdi,2),%r11d
  0x0000000002c3f57d: add    %r11d,%eax         ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000000002c3f580: inc    %edi               ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000000002c3f582: cmp    %r8d,%edi
  0x0000000002c3f585: jge    0x0000000002c3f596  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000002c3f587: mov    %eax,%r11d
  0x0000000002c3f58a: shl    $0x5,%r11d
  0x0000000002c3f58e: sub    %eax,%r11d         ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000000002c3f591: mov    %r11d,%eax
  0x0000000002c3f594: jmp    0x0000000002c3f577
  0x0000000002c3f596: mov    %eax,0x10(%r9)     ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x0000000002c3f59a: add    $0x20,%rsp
  0x0000000002c3f59e: pop    %rbp
  0x0000000002c3f59f: test   %eax,-0x256f5a5(%rip)        # 0x00000000006d0000
                                                ;   {poll_return}
  0x0000000002c3f5a5: retq   
  0x0000000002c3f5a6: xor    %eax,%eax
  0x0000000002c3f5a8: jmp    0x0000000002c3f59a
  0x0000000002c3f5aa: mov    0x39c(%r15),%r11d
  0x0000000002c3f5b1: test   %r11d,%r11d
  0x0000000002c3f5b4: jne    0x0000000002c3f5d5
  0x0000000002c3f5b6: mov    $0xfffffff6,%edx
  0x0000000002c3f5bb: mov    %r9,%rbp
  0x0000000002c3f5be: nop
  0x0000000002c3f5bf: callq  0x0000000002b757a0  ; OopMap{rbp=Oop off=324}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x0000000002c3f5c4: int3                      ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)

  0x0000000002c3f5c5: mov    $0xffffff86,%edx
  0x0000000002c3f5ca: mov    %r9,(%rsp)
  0x0000000002c3f5ce: nop
  0x0000000002c3f5cf: callq  0x0000000002b757a0  ; OopMap{rbp=NarrowOop [0]=Oop off=340}
                                                ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)
                                                ;   {runtime_call}
  0x0000000002c3f5d4: int3                      ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x0000000002c3f5d5: mov    $0xfffffff7,%edx
  0x0000000002c3f5da: mov    %r9,%rbp
  0x0000000002c3f5dd: xchg   %ax,%ax
  0x0000000002c3f5df: callq  0x0000000002b757a0  ; OopMap{rbp=Oop off=356}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x0000000002c3f5e4: int3                      ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)

  0x0000000002c3f5e5: hlt    
  0x0000000002c3f5e6: hlt    
  0x0000000002c3f5e7: hlt    
  0x0000000002c3f5e8: hlt    
  0x0000000002c3f5e9: hlt    
  0x0000000002c3f5ea: hlt    
  0x0000000002c3f5eb: hlt    
  0x0000000002c3f5ec: hlt    
  0x0000000002c3f5ed: hlt    
  0x0000000002c3f5ee: hlt    
  0x0000000002c3f5ef: hlt    
  0x0000000002c3f5f0: hlt    
  0x0000000002c3f5f1: hlt    
  0x0000000002c3f5f2: hlt    
  0x0000000002c3f5f3: hlt    
  0x0000000002c3f5f4: hlt    
  0x0000000002c3f5f5: hlt    
  0x0000000002c3f5f6: hlt    
  0x0000000002c3f5f7: hlt    
  0x0000000002c3f5f8: hlt    
  0x0000000002c3f5f9: hlt    
  0x0000000002c3f5fa: hlt    
  0x0000000002c3f5fb: hlt    
  0x0000000002c3f5fc: hlt    
  0x0000000002c3f5fd: hlt    
  0x0000000002c3f5fe: hlt    
  0x0000000002c3f5ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c3f600: jmpq   0x0000000002b87ee0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002c3f605: callq  0x0000000002c3f60a
  0x0000000002c3f60a: subq   $0x5,(%rsp)
  0x0000000002c3f60f: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c3f614: hlt    
  0x0000000002c3f615: hlt    
  0x0000000002c3f616: hlt    
  0x0000000002c3f617: hlt    
<nmethod compile_id='10' compiler='C2' level='4' entry='0x0000000002c3f480' size='1272' address='0x0000000002c3f350' relocation_offset='288' insts_offset='304' stub_offset='688' scopes_data_offset='720' scopes_pcs_offset='832' dependencies_offset='1264' method='java/lang/String hashCode ()I' bytes='55' count='3051' backedge_count='63978' iicount='3051' stamp='0.413'/>
<writer thread='8488'/>
Decoding compiled method 0x0000000002c3ed10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000000192551d8} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  0x0000000002c3ee60: int3   
  0x0000000002c3ee61: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c3ee6c: data16 data16 xchg %ax,%ax
  0x0000000002c3ee70: mov    %eax,-0x6000(%rsp)
  0x0000000002c3ee77: push   %rbp
  0x0000000002c3ee78: sub    $0x60,%rsp
  0x0000000002c3ee7c: 
<writer thread='20984'/>
[Loaded java.util.HashMap$EntrySet from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
<writer thread='8488'/>
mov    (%rdx),%r13d
  0x0000000002c3ee7f: mov    0x10(%rdx),%r11d
  0x0000000002c3ee83: mov    %r11d,0x2c(%rsp)
  0x0000000002c3ee88: mov    0x28(%rdx),%r10
  0x0000000002c3ee8c: mov    %r10,0x20(%rsp)
  0x0000000002c3ee91: mov    0x8(%rdx),%r14
  0x0000000002c3ee95: mov    0x18(%rdx),%r10d
  0x0000000002c3ee99: mov    %r10d,0x3c(%rsp)
  0x0000000002c3ee9e: mov    0x20(%rdx),%ebx
  0x0000000002c3eea1: mov    %rdx,%rcx
  0x0000000002c3eea4: movabs $0x5b6bc170,%r10
  0x0000000002c3eeae: callq  *%r10
  0x0000000002c3eeb1: mov    0x20(%rsp),%r10
  0x0000000002c3eeb6: test   %r10,%r10
  0x0000000002c3eeb9: je     0x0000000002c3eff3
  0x0000000002c3eebf: mov    %r10,%r8
  0x0000000002c3eec2: mov    0x8(%r10),%r10d
  0x0000000002c3eec6: cmp    $0xf80002da,%r10d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002c3eecd: jne    0x0000000002c3f051
  0x0000000002c3eed3: mov    %r8,%rbp
  0x0000000002c3eed6: test   %r14,%r14
  0x0000000002c3eed9: je     0x0000000002c3effd
  0x0000000002c3eedf: mov    0x8(%r14),%r11d
  0x0000000002c3eee3: cmp    $0xf8000041,%r11d  ;   {metadata({type array char})}
  0x0000000002c3eeea: jne    0x0000000002c3f051  ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x0000000002c3eef0: mov    %r14,%r11
  0x0000000002c3eef3: add    $0xc,%r11          ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002c3eef7: cmp    0x2c(%rsp),%r13d
  0x0000000002c3eefc: jge    0x0000000002c3efcc  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000002c3ef02: mov    %r13d,%r8d
  0x0000000002c3ef05: inc    %r8d
  0x0000000002c3ef08: xor    %r9d,%r9d
  0x0000000002c3ef0b: cmp    %r9d,%r8d
  0x0000000002c3ef0e: cmovl  %r9d,%r8d
  0x0000000002c3ef12: cmp    0x2c(%rsp),%r8d
  0x0000000002c3ef17: mov    0x2c(%rsp),%r10d
  0x0000000002c3ef1c: cmovg  %r10d,%r8d
  0x0000000002c3ef20: test   %r14,%r14
  0x0000000002c3ef23: je     0x0000000002c3f00b
  0x0000000002c3ef29: mov    (%r11),%r9d
  0x0000000002c3ef2c: cmp    %r9d,%r13d
  0x0000000002c3ef2f: jae    0x0000000002c3f031  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002c3ef35: movzwl 0x10(%r14,%r13,2),%edi
  0x0000000002c3ef3b: cmp    %ebx,%edi
  0x0000000002c3ef3d: je     0x0000000002c3efe9  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002c3ef43: inc    %r13d              ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000002c3ef46: cmp    %r8d,%r13d
  0x0000000002c3ef49: jl     0x0000000002c3ef20  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000002c3ef4b: cmp    %r9d,%r10d
  0x0000000002c3ef4e: mov    %r10d,%r11d
  0x0000000002c3ef51: cmovg  %r9d,%r11d
  0x0000000002c3ef55: mov    %r11d,%r8d
  0x0000000002c3ef58: add    $0xfffffffd,%r8d
  0x0000000002c3ef5c: mov    $0x80000000,%edi
  0x0000000002c3ef61: cmp    %r8d,%r11d
  0x0000000002c3ef64: cmovl  %edi,%r8d
  0x0000000002c3ef68: cmp    %r8d,%r13d
  0x0000000002c3ef6b: jge    0x0000000002c3efad
  0x0000000002c3ef6d: data16 xchg %ax,%ax
  0x0000000002c3ef70: movzwl 0x10(%r14,%r13,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002c3ef76: cmp    %ebx,%r11d
  0x0000000002c3ef79: je     0x0000000002c3efdd  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002c3ef7b: movslq %r13d,%rcx
  0x0000000002c3ef7e: movzwl 0x12(%r14,%rcx,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002c3ef84: cmp    %ebx,%r11d
  0x0000000002c3ef87: je     0x0000000002c3efe2  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002c3ef89: movzwl 0x14(%r14,%rcx,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002c3ef8f: mov    %r13d,%eax
  0x0000000002c3ef92: add    $0x2,%eax          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000002c3ef95: cmp    %ebx,%r11d
  0x0000000002c3ef98: je     0x0000000002c3efd1  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002c3ef9a: movzwl 0x16(%r14,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002c3efa0: cmp    %ebx,%ecx
  0x0000000002c3efa2: je     0x0000000002c3efe5  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002c3efa4: add    $0x4,%r13d         ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000002c3efa8: cmp    %r8d,%r13d
  0x0000000002c3efab: jl     0x0000000002c3ef70  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000002c3efad: cmp    %r10d,%r13d
  0x0000000002c3efb0: jge    0x0000000002c3efcc
  0x0000000002c3efb2: xchg   %ax,%ax
  0x0000000002c3efb4: cmp    %r9d,%r13d
  0x0000000002c3efb7: jae    0x0000000002c3f031  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002c3efb9: movzwl 0x10(%r14,%r13,2),%r11d
  0x0000000002c3efbf: cmp    %ebx,%r11d
  0x0000000002c3efc2: je     0x0000000002c3efee  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002c3efc4: inc    %r13d              ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000002c3efc7: cmp    %r10d,%r13d
  0x0000000002c3efca: jl     0x0000000002c3efb4  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000002c3efcc: mov    $0xffffffff,%eax   ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x0000000002c3efd1: add    $0x60,%rsp
  0x0000000002c3efd5: pop    %rbp
  0x0000000002c3efd6: test   %eax,-0x256efdc(%rip)        # 0x00000000006d0000
                                                ;   {poll_return}
  0x0000000002c3efdc: retq   
  0x0000000002c3efdd: mov    %r13d,%eax
  0x0000000002c3efe0: jmp    0x0000000002c3efd1
  0x0000000002c3efe2: mov    %r13d,%eax
  0x0000000002c3efe5: inc    %eax               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000002c3efe7: jmp    0x0000000002c3efd1
  0x0000000002c3efe9: mov    %r13d,%eax
  0x0000000002c3efec: jmp    0x0000000002c3efd1
  0x0000000002c3efee: mov    %r13d,%eax
  0x0000000002c3eff1: jmp    0x0000000002c3efd1
  0x0000000002c3eff3: xor    %ebp,%ebp
  0x0000000002c3eff5: mov    %r10,%r8
  0x0000000002c3eff8: jmpq   0x0000000002c3eed6
  0x0000000002c3effd: mov    $0xc,%r11d
  0x0000000002c3f003: xor    %r14d,%r14d
  0x0000000002c3f006: jmpq   0x0000000002c3eef7
  0x0000000002c3f00b: mov    0x39c(%r15),%r11d
  0x0000000002c3f012: test   %r11d,%r11d
  0x0000000002c3f015: jne    0x0000000002c3f06d
  0x0000000002c3f017: mov    $0xfffffff6,%edx
  0x0000000002c3f01c: mov    %ebx,0x20(%rsp)
  0x0000000002c3f020: mov    %r13d,0x28(%rsp)
  0x0000000002c3f025: mov    %r10d,0x30(%rsp)
  0x0000000002c3f02a: nop
  0x0000000002c3f02b: callq  0x0000000002b757a0  ; OopMap{rbp=Oop off=464}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x0000000002c3f030: int3   
  0x0000000002c3f031: mov    $0xffffffe4,%edx
  0x0000000002c3f036: mov    %ebx,0x20(%rsp)
  0x0000000002c3f03a: mov    %r14,0x30(%rsp)
  0x0000000002c3f03f: mov    %r13d,0x38(%rsp)
  0x0000000002c3f044: mov    %r10d,0x40(%rsp)
  0x0000000002c3f049: xchg   %ax,%ax
  0x0000000002c3f04b: callq  0x0000000002b757a0  ; OopMap{rbp=Oop [48]=Oop off=496}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x0000000002c3f050: int3   
  0x0000000002c3f051: mov    $0xffffff9d,%edx
  0x0000000002c3f056: mov    %ebx,%ebp
  0x0000000002c3f058: mov    %r14,0x20(%rsp)
  0x0000000002c3f05d: mov    %r13d,0x28(%rsp)
  0x0000000002c3f062: mov    %r8,0x30(%rsp)
  0x0000000002c3f067: callq  0x0000000002b757a0  ; OopMap{[32]=Oop [48]=Oop off=524}
                                                ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)
                                                ;   {runtime_call}
  0x0000000002c3f06c: int3   
  0x0000000002c3f06d: mov    $0xfffffff7,%edx
  0x0000000002c3f072: mov    %ebx,0x20(%rsp)
  0x0000000002c3f076: mov    %r13d,0x28(%rsp)
  0x0000000002c3f07b: mov    %r10d,0x30(%rsp)
  0x0000000002c3f080: data16 xchg %ax,%ax
  0x0000000002c3f083: callq  0x0000000002b757a0  ; OopMap{rbp=Oop off=552}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x0000000002c3f088: int3                      ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002c3f089: hlt    
  0x0000000002c3f08a: hlt    
  0x0000000002c3f08b: hlt    
  0x0000000002c3f08c: hlt    
  0x0000000002c3f08d: hlt    
  0x0000000002c3f08e: hlt    
  0x0000000002c3f08f: hlt    
  0x0000000002c3f090: hlt    
  0x0000000002c3f091: hlt    
  0x0000000002c3f092: hlt    
  0x0000000002c3f093: hlt    
  0x0000000002c3f094: hlt    
  0x0000000002c3f095: hlt    
  0x0000000002c3f096: hlt    
  0x0000000002c3f097: hlt    
  0x0000000002c3f098: hlt    
  0x0000000002c3f099: hlt    
  0x0000000002c3f09a: hlt    
  0x0000000002c3f09b: hlt    
  0x0000000002c3f09c: hlt    
  0x0000000002c3f09d: hlt    
  0x0000000002c3f09e: hlt    
  0x0000000002c3f09f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c3f0a0: jmpq   0x0000000002b87ee0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002c3f0a5: callq  0x0000000002c3f0aa
  0x0000000002c3f0aa: subq   $0x5,(%rsp)
  0x0000000002c3f0af: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c3f0b4: hlt    
  0x0000000002c3f0b5: hlt    
  0x0000000002c3f0b6: hlt    
  0x0000000002c3f0b7: hlt    
<nmethod compile_id='9' compile_kind='osr' compiler='C2' level='4' entry='0x0000000002c3ee60' size='1584' address='0x0000000002c3ed10' relocation_offset='288' insts_offset='336' stub_offset='912' scopes_data_offset='960' scopes_pcs_offset='1080' dependencies_offset='1576' method='java/lang/String indexOf (II)I' bytes='70' count='2045' backedge_count='102819' iicount='2045' stamp='0.416'/>
<writer thread='20984'/>
[Loaded java.lang.ProcessEnvironment$CheckedEntrySet$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
<writer thread='9088'/>
Decoding compiled method 0x0000000002c429d0:
Code:
<writer thread='20984'/>
[Loaded java.util.HashMap$HashIterator from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
<writer thread='9088'/>
[Entry Point]
[Constants]
  # {method} {0x00000000192531f8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;[C&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0x80]  (sp of caller)
  0x0000000002c42ba0: mov    0x8(%rdx),%r10d
  0x0000000002c42ba4: shl    $0x3,%r10
  0x0000000002c42ba8: cmp    %rax,%r10
  0x0000000002c42bab: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c42bb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c42bbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c42bc0: mov    %eax,-0x6000(%rsp)
  0x0000000002c42bc7: push   %rbp
  0x0000000002c42bc8: sub    $0x70,%rsp
  0x0000000002c42bcc: mov    %rdx,0x38(%rsp)
  0x0000000002c42bd1: mov    %r8,0x48(%rsp)
  0x0000000002c42bd6: mov    %r9d,0x44(%rsp)
  0x0000000002c42bdb: mov    %edi,0x40(%rsp)
  0x0000000002c42bdf: movabs $0x19445490,%rsi   ;   {metadata(method data for {method} {0x00000000192531f8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c42be9: mov    0xdc(%rsi),%ebx
  0x0000000002c42bef: add    $0x8,%ebx
  0x0000000002c42bf2: mov    %ebx,0xdc(%rsi)
  0x0000000002c42bf8: movabs $0x192531f0,%rsi   ;   {metadata({method} {0x00000000192531f8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c42c02: and    $0x1ff8,%ebx
  0x0000000002c42c08: cmp    $0x0,%ebx
  0x0000000002c42c0b: je     0x0000000002c42f11  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x0000000002c42c11: mov    %rdx,%rsi
  0x0000000002c42c14: movabs $0x19445490,%rbx   ;   {metadata(method data for {method} {0x00000000192531f8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c42c1e: addq   $0x1,0x108(%rbx)
  0x0000000002c42c26: movabs $0x19387898,%rsi   ;   {metadata(method data for {method} {0x0000000019250488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002c42c30: mov    0xdc(%rsi),%ebx
  0x0000000002c42c36: add    $0x8,%ebx
  0x0000000002c42c39: mov    %ebx,0xdc(%rsi)
  0x0000000002c42c3f: movabs $0x19250480,%rsi   ;   {metadata({method} {0x0000000019250488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002c42c49: and    $0x7ffff8,%ebx
  0x0000000002c42c4f: cmp    $0x0,%ebx
  0x0000000002c42c52: je     0x0000000002c42f28
  0x0000000002c42c58: cmp    $0x0,%r9d
  0x0000000002c42c5c: movabs $0x19445490,%rsi   ;   {metadata(method data for {method} {0x00000000192531f8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c42c66: movabs $0x118,%rbx
  0x0000000002c42c70: jge    0x0000000002c42c80
  0x0000000002c42c76: movabs $0x128,%rbx
  0x0000000002c42c80: mov    (%rsi,%rbx,1),%rax
  0x0000000002c42c84: lea    0x1(%rax),%rax
  0x0000000002c42c88: mov    %rax,(%rsi,%rbx,1)
  0x0000000002c42c8c: jl     0x0000000002c42ec1  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x0000000002c42c92: cmp    $0x0,%edi
  0x0000000002c42c95: movabs $0x19445490,%rsi   ;   {metadata(method data for {method} {0x00000000192531f8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c42c9f: movabs $0x148,%rbx
  0x0000000002c42ca9: jg     0x0000000002c42cb9
  0x0000000002c42caf: movabs $0x158,%rbx
  0x0000000002c42cb9: mov    (%rsi,%rbx,1),%rax
  0x0000000002c42cbd: lea    0x1(%rax),%rax
  0x0000000002c42cc1: mov    %rax,(%rsi,%rbx,1)
  0x0000000002c42cc5: jg     0x0000000002c42d41  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x0000000002c42ccb: cmp    $0x0,%edi
  0x0000000002c42cce: movabs $0x19445490,%rsi   ;   {metadata(method data for {method} {0x00000000192531f8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c42cd8: movabs $0x168,%rbx
  0x0000000002c42ce2: jge    0x0000000002c42cf2
  0x0000000002c42ce8: movabs $0x178,%rbx
  0x0000000002c42cf2: mov    (%rsi,%rbx,1),%rax
  0x0000000002c42cf6: lea    0x1(%rax),%rax
  0x0000000002c42cfa: mov    %rax,(%rsi,%rbx,1)
  0x0000000002c42cfe: jl     0x0000000002c42e69  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)

  0x0000000002c42d04: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; implicit exception: dispatches to 0x0000000002c42f3f
  0x0000000002c42d08: cmp    %esi,%r9d
  0x0000000002c42d0b: movabs $0x19445490,%rsi   ;   {metadata(method data for {method} {0x00000000192531f8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c42d15: movabs $0x198,%rbx
  0x0000000002c42d1f: jg     0x0000000002c42d2f
  0x0000000002c42d25: movabs $0x1a8,%rbx
  0x0000000002c42d2f: mov    (%rsi,%rbx,1),%rax
  0x0000000002c42d33: lea    0x1(%rax),%rax
  0x0000000002c42d37: mov    %rax,(%rsi,%rbx,1)
  0x0000000002c42d3b: jle    0x0000000002c42dda  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)

  0x0000000002c42d41: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; implicit exception: dispatches to 0x0000000002c42f44
  0x0000000002c42d45: sub    %edi,%esi
  0x0000000002c42d47: cmp    %esi,%r9d
  0x0000000002c42d4a: movabs $0x19445490,%rsi   ;   {metadata(method data for {method} {0x00000000192531f8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c42d54: movabs $0x1b8,%rbx
  0x0000000002c42d5e: jle    0x0000000002c42d6e
  0x0000000002c42d64: movabs $0x1c8,%rbx
  0x0000000002c42d6e: mov    (%rsi,%rbx,1),%rax
  0x0000000002c42d72: lea    0x1(%rax),%rax
  0x0000000002c42d76: mov    %rax,(%rsi,%rbx,1)
  0x0000000002c42d7a: jg     0x0000000002c42e14  ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)

  0x0000000002c42d80: movabs $0x19445490,%rsi   ;   {metadata(method data for {method} {0x00000000192531f8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c42d8a: addq   $0x1,0x1e8(%rsi)
  0x0000000002c42d92: mov    %rdi,%rsi
  0x0000000002c42d95: add    %r9d,%esi
  0x0000000002c42d98: mov    %r8,%rdx
  0x0000000002c42d9b: mov    %r9,%r8
  0x0000000002c42d9e: mov    %rsi,%r9           ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)

  0x0000000002c42da1: nop
  0x0000000002c42da2: nop
  0x0000000002c42da3: nop
  0x0000000002c42da4: nop
  0x0000000002c42da5: nop
  0x0000000002c42da6: nop
  0x0000000002c42da7: callq  0x0000000002b76620  ; OopMap{[72]=Oop [56]=Oop off=524}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ;   {static_call}
  0x0000000002c42dac: mov    0x38(%rsp),%rdx
  0x0000000002c42db1: mov    %rax,%r10
  0x0000000002c42db4: shr    $0x3,%r10
  0x0000000002c42db8: mov    %r10d,0xc(%rdx)
  0x0000000002c42dbc: shr    $0x9,%rdx
  0x0000000002c42dc0: movabs $0xe6e6000,%rax
  0x0000000002c42dca: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)

  0x0000000002c42dce: add    $0x70,%rsp
  0x0000000002c42dd2: pop    %rbp
  0x0000000002c42dd3: test   %eax,-0x2572cd9(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c42dd9: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@81 (line 208)

  0x0000000002c42dda: movabs $0x78070aa70,%rax  ;   {oop(&quot;&quot;)}
  0x0000000002c42de4: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x0000000002c42f49
  0x0000000002c42de7: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)

  0x0000000002c42deb: mov    %rax,%r10
  0x0000000002c42dee: shr    $0x3,%r10
  0x0000000002c42df2: mov    %r10d,0xc(%rdx)
  0x0000000002c42df6: shr    $0x9,%rdx
  0x0000000002c42dfa: movabs $0xe6e6000,%rax
  0x0000000002c42e04: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)

  0x0000000002c42e08: add    $0x70,%rsp
  0x0000000002c42e0c: pop    %rbp
  0x0000000002c42e0d: test   %eax,-0x2572d13(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c42e13: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@49 (line 200)

  0x0000000002c42e14: nopl   0x0(%rax)
  0x0000000002c42e18: jmpq   0x0000000002c42f5d  ;   {no_reloc}
  0x0000000002c42e1d: add    %al,(%rax)
  0x0000000002c42e1f: add    %al,(%rax)
  0x0000000002c42e21: add    %ch,%cl
  0x0000000002c42e23: rex add %eax,(%rax)
  0x0000000002c42e26: add    %cl,-0x40(%rbx,%rcx,4)  ;*new
                                                ; - java.lang.String::&lt;init&gt;@58 (line 205)

  0x0000000002c42e2a: movabs $0x19445490,%rdx   ;   {metadata(method data for {method} {0x00000000192531f8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c42e34: addq   $0x1,0x1d8(%rdx)
  0x0000000002c42e3c: mov    0x40(%rsp),%edi
  0x0000000002c42e40: add    0x44(%rsp),%edi
  0x0000000002c42e44: mov    %rdi,%r8
  0x0000000002c42e47: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)

  0x0000000002c42e4a: mov    %rax,0x50(%rsp)
  0x0000000002c42e4f: callq  0x0000000002b761a0  ; OopMap{[72]=Oop [80]=Oop [56]=Oop off=692}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)
                                                ;   {optimized virtual_call}
  0x0000000002c42e54: mov    0x50(%rsp),%rax    ; OopMap{[72]=Oop [56]=Oop rax=Oop off=697}
                                                ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x0000000002c42e59: movabs $0x2c42e59,%rdx    ;   {section_word}
  0x0000000002c42e63: callq  0x0000000002b9f120  ;   {runtime_call}
  0x0000000002c42e68: nop                       ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x0000000002c42e69: nopl   0x0(%rax)
  0x0000000002c42e70: jmpq   0x0000000002c42f83  ;   {no_reloc}
  0x0000000002c42e75: add    %al,(%rax)
  0x0000000002c42e77: add    %al,(%rax)
  0x0000000002c42e79: add    %ch,%cl
  0x0000000002c42e7b: (bad)  
  0x0000000002c42e7c: add    %eax,(%rax)
  0x0000000002c42e7e: add    %cl,-0x40(%rbx,%rcx,4)  ;*new
                                                ; - java.lang.String::&lt;init&gt;@25 (line 196)

  0x0000000002c42e82: movabs $0x19445490,%rdx   ;   {metadata(method data for {method} {0x00000000192531f8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c42e8c: addq   $0x1,0x188(%rdx)
  0x0000000002c42e94: mov    0x40(%rsp),%r8d
  0x0000000002c42e99: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)

  0x0000000002c42e9c: mov    %rax,0x58(%rsp)
  0x0000000002c42ea1: nop
  0x0000000002c42ea2: nop
  0x0000000002c42ea3: nop
  0x0000000002c42ea4: nop
  0x0000000002c42ea5: nop
  0x0000000002c42ea6: nop
  0x0000000002c42ea7: callq  0x0000000002b761a0  ; OopMap{[56]=Oop [72]=Oop [88]=Oop off=780}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)
                                                ;   {optimized virtual_call}
  0x0000000002c42eac: mov    0x58(%rsp),%rax    ; OopMap{[56]=Oop [72]=Oop rax=Oop off=785}
                                                ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x0000000002c42eb1: movabs $0x2c42eb1,%rdx    ;   {section_word}
  0x0000000002c42ebb: callq  0x0000000002b9f120  ;   {runtime_call}
  0x0000000002c42ec0: nop                       ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x0000000002c42ec1: nopl   0x0(%rax)
  0x0000000002c42ec8: jmpq   0x0000000002c42fa9  ;   {no_reloc}
  0x0000000002c42ecd: add    %al,(%rax)
  0x0000000002c42ecf: add    %al,(%rax)
  0x0000000002c42ed1: add    %ch,%cl
  0x0000000002c42ed3: faddl  (%rax)
  0x0000000002c42ed5: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x0000000002c42ed7: mov    %rax,%rdx
  0x0000000002c42eda: movabs $0x19445490,%rbx   ;   {metadata(method data for {method} {0x00000000192531f8} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c42ee4: addq   $0x1,0x138(%rbx)
  0x0000000002c42eec: mov    %r9,%r8
  0x0000000002c42eef: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x0000000002c42ef2: mov    %rax,0x60(%rsp)
  0x0000000002c42ef7: callq  0x0000000002b761a0  ; OopMap{[72]=Oop [96]=Oop [56]=Oop off=860}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x0000000002c42efc: mov    0x60(%rsp),%rax    ; OopMap{[72]=Oop [56]=Oop rax=Oop off=865}
                                                ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@16 (line 192)

  0x0000000002c42f01: movabs $0x2c42f01,%rdx    ;   {section_word}
  0x0000000002c42f0b: callq  0x0000000002b9f120  ;   {runtime_call}
  0x0000000002c42f10: nop
  0x0000000002c42f11: mov    %rsi,0x8(%rsp)
  0x0000000002c42f16: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c42f1e: callq  0x0000000002c31360  ; OopMap{rdx=Oop [56]=Oop r8=Oop [72]=Oop off=899}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x0000000002c42f23: jmpq   0x0000000002c42c11
  0x0000000002c42f28: mov    %rsi,0x8(%rsp)
  0x0000000002c42f2d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c42f35: callq  0x0000000002c31360  ; OopMap{rdx=Oop [56]=Oop r8=Oop [72]=Oop off=922}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x0000000002c42f3a: jmpq   0x0000000002c42c58
  0x0000000002c42f3f: callq  0x0000000002c2cc80  ; OopMap{rdx=Oop [56]=Oop r8=Oop [72]=Oop off=932}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ;   {runtime_call}
  0x0000000002c42f44: callq  0x0000000002c2cc80  ; OopMap{rdx=Oop [56]=Oop r8=Oop [72]=Oop off=937}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ;   {runtime_call}
  0x0000000002c42f49: callq  0x0000000002c2cc80  ; OopMap{[72]=Oop rdx=Oop [56]=Oop off=942}
                                                ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ;   {runtime_call}
  0x0000000002c42f4e: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002c42f58: mov    $0xa050f00,%eax
  0x0000000002c42f5d: callq  0x0000000002c302a0  ; OopMap{[72]=Oop [56]=Oop off=962}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x0000000002c42f62: jmpq   0x0000000002c42e18
  0x0000000002c42f67: mov    %rdx,%rdx
  0x0000000002c42f6a: callq  0x0000000002c2d120  ; OopMap{[72]=Oop [56]=Oop off=975}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x0000000002c42f6f: jmpq   0x0000000002c42e27
  0x0000000002c42f74: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002c42f7e: mov    $0xa050f00,%eax
  0x0000000002c42f83: callq  0x0000000002c302a0  ; OopMap{[56]=Oop [72]=Oop off=1000}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x0000000002c42f88: jmpq   0x0000000002c42e70
  0x0000000002c42f8d: mov    %rdx,%rdx
  0x0000000002c42f90: callq  0x0000000002c2d120  ; OopMap{[56]=Oop [72]=Oop off=1013}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x0000000002c42f95: jmpq   0x0000000002c42e7f
  0x0000000002c42f9a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002c42fa4: mov    $0xa050f00,%eax
  0x0000000002c42fa9: callq  0x0000000002c302a0  ; OopMap{[72]=Oop [56]=Oop off=1038}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x0000000002c42fae: jmpq   0x0000000002c42ec8
  0x0000000002c42fb3: mov    %rdx,%rdx
  0x0000000002c42fb6: callq  0x0000000002c2d120  ; OopMap{[72]=Oop [56]=Oop off=1051}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x0000000002c42fbb: jmpq   0x0000000002c42ed7
  0x0000000002c42fc0: nop
  0x0000000002c42fc1: nop
  0x0000000002c42fc2: mov    0x2a8(%r15),%rax
  0x0000000002c42fc9: movabs $0x0,%r10
  0x0000000002c42fd3: mov    %r10,0x2a8(%r15)
  0x0000000002c42fda: movabs $0x0,%r10
  0x0000000002c42fe4: mov    %r10,0x2b0(%r15)
  0x0000000002c42feb: add    $0x70,%rsp
  0x0000000002c42fef: pop    %rbp
  0x0000000002c42ff0: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c42ff5: hlt    
  0x0000000002c42ff6: hlt    
  0x0000000002c42ff7: hlt    
  0x0000000002c42ff8: hlt    
  0x0000000002c42ff9: hlt    
  0x0000000002c42ffa: hlt    
  0x0000000002c42ffb: hlt    
  0x0000000002c42ffc: hlt    
  0x0000000002c42ffd: hlt    
  0x0000000002c42ffe: hlt    
  0x0000000002c42fff: hlt    
[Stub Code]
  0x0000000002c43000: nop                       ;   {no_reloc}
  0x0000000002c43001: nop
  0x0000000002c43002: nop
  0x0000000002c43003: nop
  0x0000000002c43004: nop
  0x0000000002c43005: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c4300f: jmpq   0x0000000002c4300f  ;   {runtime_call}
  0x0000000002c43014: nop
  0x0000000002c43015: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c4301f: jmpq   0x0000000002c4301f  ;   {runtime_call}
  0x0000000002c43024: nop
  0x0000000002c43025: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c4302f: jmpq   0x0000000002c4302f  ;   {runtime_call}
  0x0000000002c43034: nop
  0x0000000002c43035: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c4303f: jmpq   0x0000000002c4303f  ;   {runtime_call}
[Exception Handler]
  0x0000000002c43044: callq  0x0000000002c2eb20  ;   {runtime_call}
  0x0000000002c43049: mov    %rsp,-0x28(%rsp)
  0x0000000002c4304e: sub    $0x80,%rsp
  0x0000000002c43055: mov    %rax,0x78(%rsp)
  0x0000000002c4305a: mov    %rcx,0x70(%rsp)
  0x0000000002c4305f: mov    %rdx,0x68(%rsp)
  0x0000000002c43064: mov    %rbx,0x60(%rsp)
  0x0000000002c43069: mov    %rbp,0x50(%rsp)
  0x0000000002c4306e: mov    %rsi,0x48(%rsp)
  0x0000000002c43073: mov    %rdi,0x40(%rsp)
  0x0000000002c43078: mov    %r8,0x38(%rsp)
  0x0000000002c4307d: mov    %r9,0x30(%rsp)
  0x0000000002c43082: mov    %r10,0x28(%rsp)
  0x0000000002c43087: mov    %r11,0x20(%rsp)
  0x0000000002c4308c: mov    %r12,0x18(%rsp)
  0x0000000002c43091: mov    %r13,0x10(%rsp)
  0x0000000002c43096: mov    %r14,0x8(%rsp)
  0x0000000002c4309b: mov    %r15,(%rsp)
  0x0000000002c4309f: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c430a9: movabs $0x2c43049,%rdx    ;   {internal_word}
  0x0000000002c430b3: mov    %rsp,%r8
  0x0000000002c430b6: and    $0xfffffffffffffff0,%rsp
  0x0000000002c430ba: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c430bf: hlt    
[Deopt Handler Code]
  0x0000000002c430c0: movabs $0x2c430c0,%r10    ;   {section_word}
  0x0000000002c430ca: push   %r10
  0x0000000002c430cc: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c430d1: hlt    
  0x0000000002c430d2: hlt    
  0x0000000002c430d3: hlt    
  0x0000000002c430d4: hlt    
  0x0000000002c430d5: hlt    
  0x0000000002c430d6: hlt    
  0x0000000002c430d7: hlt    
<nmethod compile_id='11' compiler='C1' level='3' entry='0x0000000002c42ba0' size='2840' address='0x0000000002c429d0' relocation_offset='288' insts_offset='464' stub_offset='1584' scopes_data_offset='1816' scopes_pcs_offset='2128' dependencies_offset='2800' nul_chk_table_offset='2808' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='2378' iicount='2378' stamp='0.423'/>
<writer thread='18064'/>
Decoding compiled method 0x0000000002c32b10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019250488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000002c32c40: mov    0x8(%rdx),%r10d
  0x0000000002c32c44: shl    $0x3,%r10
  0x0000000002c32c48: cmp    %r10,%rax
  0x0000000002c32c4b: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c32c51: data16 xchg %ax,%ax
  0x0000000002c32c54: nopl   0x0(%rax,%rax,1)
  0x0000000002c32c5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c32c60: mov    %eax,-0x6000(%rsp)
  0x0000000002c32c67: push   %rbp
  0x0000000002c32c68: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)

  0x0000000002c32c6c: mov    0x8(%rdx),%r11d
  0x0000000002c32c70: movabs $0x0,%r10
  0x0000000002c32c7a: lea    (%r10,%r11,8),%r10
  0x0000000002c32c7e: mov    $0x40000000,%r8d
  0x0000000002c32c84: test   %r8d,0x9c(%r10)
  0x0000000002c32c8b: je     0x0000000002c32c98  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x0000000002c32c8d: mov    %rdx,%rbp
  0x0000000002c32c90: data16 xchg %ax,%ax
  0x0000000002c32c93: callq  0x0000000002c31aa0  ; OopMap{rbp=Oop off=88}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x0000000002c32c98: add    $0x10,%rsp
  0x0000000002c32c9c: pop    %rbp
  0x0000000002c32c9d: test   %eax,-0x2562ca3(%rip)        # 0x00000000006d0000
                                                ;   {poll_return}
  0x0000000002c32ca3: retq                      ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x0000000002c32ca4: mov    %rax,%rdx
  0x0000000002c32ca7: add    $0x10,%rsp
  0x0000000002c32cab: pop    %rbp
  0x0000000002c32cac: jmpq   0x0000000002c31c20  ;   {runtime_call}
  0x0000000002c32cb1: hlt    
  0x0000000002c32cb2: hlt    
  0x0000000002c32cb3: hlt    
  0x0000000002c32cb4: hlt    
  0x0000000002c32cb5: hlt    
  0x0000000002c32cb6: hlt    
  0x0000000002c32cb7: hlt    
  0x0000000002c32cb8: hlt    
  0x0000000002c32cb9: hlt    
  0x0000000002c32cba: hlt    
  0x0000000002c32cbb: hlt    
  0x0000000002c32cbc: hlt    
  0x0000000002c32cbd: hlt    
  0x0000000002c32cbe: hlt    
  0x0000000002c32cbf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c32cc0: jmpq   0x0000000002b87ee0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002c32cc5: callq  0x0000000002c32cca
  0x0000000002c32cca: subq   $0x5,(%rsp)
  0x0000000002c32ccf: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c32cd4: hlt    
  0x0000000002c32cd5: hlt    
  0x0000000002c32cd6: hlt    
  0x0000000002c32cd7: hlt    
<nmethod compile_id='13' compiler='C2' level='4' entry='0x0000000002c32c40' size='616' address='0x0000000002c32b10' relocation_offset='288' insts_offset='304' stub_offset='432' scopes_data_offset='464' scopes_pcs_offset='488' dependencies_offset='584' handler_table_offset='592' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='12251' iicount='12251' stamp='0.423'/>
<writer thread='9088'/>
Decoding compiled method 0x0000000002c3e8d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000192550f0} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000002c3ea40: mov    0x8(%rdx),%r10d
  0x0000000002c3ea44: shl    $0x3,%r10
  0x0000000002c3ea48: cmp    %rax,%r10
  0x0000000002c3ea4b: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c3ea51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c3ea5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c3ea60: mov    %eax,-0x6000(%rsp)
  0x0000000002c3ea67: push   %rbp
  0x0000000002c3ea68: sub    $0x40,%rsp
  0x0000000002c3ea6c: movabs $0x194460e0,%r9    ;   {metadata(method data for {method} {0x00000000192550f0} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c3ea76: mov    0xdc(%r9),%esi
  0x0000000002c3ea7d: add    $0x8,%esi
  0x0000000002c3ea80: mov    %esi,0xdc(%r9)
  0x0000000002c3ea87: movabs $0x192550e8,%r9    ;   {metadata({method} {0x00000000192550f0} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c3ea91: and    $0x1ff8,%esi
  0x0000000002c3ea97: cmp    $0x0,%esi
  0x0000000002c3ea9a: je     0x0000000002c3eb60  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x0000000002c3eaa0: mov    %rdx,%r9
  0x0000000002c3eaa3: movabs $0x194460e0,%rsi   ;   {metadata(method data for {method} {0x00000000192550f0} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c3eaad: mov    0x8(%r9),%r9d
  0x0000000002c3eab1: shl    $0x3,%r9
  0x0000000002c3eab5: cmp    0x110(%rsi),%r9
  0x0000000002c3eabc: jne    0x0000000002c3eacb
  0x0000000002c3eabe: addq   $0x1,0x118(%rsi)
  0x0000000002c3eac6: jmpq   0x0000000002c3eb31
  0x0000000002c3eacb: cmp    0x120(%rsi),%r9
  0x0000000002c3ead2: jne    0x0000000002c3eae1
  0x0000000002c3ead4: addq   $0x1,0x128(%rsi)
  0x0000000002c3eadc: jmpq   0x0000000002c3eb31
  0x0000000002c3eae1: cmpq   $0x0,0x110(%rsi)
  0x0000000002c3eaec: jne    0x0000000002c3eb05
  0x0000000002c3eaee: mov    %r9,0x110(%rsi)
  0x0000000002c3eaf5: movq   $0x1,0x118(%rsi)
  0x0000000002c3eb00: jmpq   0x0000000002c3eb31
  0x0000000002c3eb05: cmpq   $0x0,0x120(%rsi)
  0x0000000002c3eb10: jne    0x0000000002c3eb29
  0x0000000002c3eb12: mov    %r9,0x120(%rsi)
  0x0000000002c3eb19: movq   $0x1,0x128(%rsi)
  0x0000000002c3eb24: jmpq   0x0000000002c3eb31
  0x0000000002c3eb29: addq   $0x1,0x108(%rsi)
  0x0000000002c3eb31: mov    %r8,%rsi
  0x0000000002c3eb34: mov    %rsi,%r8
  0x0000000002c3eb37: mov    $0x0,%r9d
  0x0000000002c3eb3d: mov    %rdx,%rdi
  0x0000000002c3eb40: mov    %rdi,%rdx          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x0000000002c3eb43: mov    %esi,0x28(%rsp)
  0x0000000002c3eb47: mov    %rdi,0x20(%rsp)
  0x0000000002c3eb4c: nop
  0x0000000002c3eb4d: nop
  0x0000000002c3eb4e: nop
  0x0000000002c3eb4f: callq  0x0000000002b761a0  ; OopMap{[32]=Oop off=276}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x0000000002c3eb54: add    $0x40,%rsp
  0x0000000002c3eb58: pop    %rbp
  0x0000000002c3eb59: test   %eax,-0x256ea5f(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c3eb5f: retq   
  0x0000000002c3eb60: mov    %r9,0x8(%rsp)
  0x0000000002c3eb65: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c3eb6d: callq  0x0000000002c31360  ; OopMap{rdx=Oop off=306}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x0000000002c3eb72: jmpq   0x0000000002c3eaa0
  0x0000000002c3eb77: nop
  0x0000000002c3eb78: nop
  0x0000000002c3eb79: mov    0x2a8(%r15),%rax
  0x0000000002c3eb80: movabs $0x0,%r10
  0x0000000002c3eb8a: mov    %r10,0x2a8(%r15)
  0x0000000002c3eb91: movabs $0x0,%r10
  0x0000000002c3eb9b: mov    %r10,0x2b0(%r15)
  0x0000000002c3eba2: add    $0x40,%rsp
  0x0000000002c3eba6: pop    %rbp
  0x0000000002c3eba7: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c3ebac: hlt    
  0x0000000002c3ebad: hlt    
  0x0000000002c3ebae: hlt    
  0x0000000002c3ebaf: hlt    
  0x0000000002c3ebb0: hlt    
  0x0000000002c3ebb1: hlt    
  0x0000000002c3ebb2: hlt    
  0x0000000002c3ebb3: hlt    
  0x0000000002c3ebb4: hlt    
  0x0000000002c3ebb5: hlt    
  0x0000000002c3ebb6: hlt    
  0x0000000002c3ebb7: hlt    
  0x0000000002c3ebb8: hlt    
  0x0000000002c3ebb9: hlt    
  0x0000000002c3ebba: hlt    
  0x0000000002c3ebbb: hlt    
  0x0000000002c3ebbc: hlt    
  0x0000000002c3ebbd: hlt    
  0x0000000002c3ebbe: hlt    
  0x0000000002c3ebbf: hlt    
[Stub Code]
  0x0000000002c3ebc0: nop                       ;   {no_reloc}
  0x0000000002c3ebc1: nop
  0x0000000002c3ebc2: nop
  0x0000000002c3ebc3: nop
  0x0000000002c3ebc4: nop
  0x0000000002c3ebc5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c3ebcf: jmpq   0x0000000002c3ebcf  ;   {runtime_call}
[Exception Handler]
  0x0000000002c3ebd4: callq  0x0000000002c2eb20  ;   {runtime_call}
  0x0000000002c3ebd9: mov    %rsp,-0x28(%rsp)
  0x0000000002c3ebde: sub    $0x80,%rsp
  0x0000000002c3ebe5: mov    %rax,0x78(%rsp)
  0x0000000002c3ebea: mov    %rcx,0x70(%rsp)
  0x0000000002c3ebef: mov    %rdx,0x68(%rsp)
  0x0000000002c3ebf4: mov    %rbx,0x60(%rsp)
  0x0000000002c3ebf9: mov    %rbp,0x50(%rsp)
  0x0000000002c3ebfe: mov    %rsi,0x48(%rsp)
  0x0000000002c3ec03: mov    %rdi,0x40(%rsp)
  0x0000000002c3ec08: mov    %r8,0x38(%rsp)
  0x0000000002c3ec0d: mov    %r9,0x30(%rsp)
  0x0000000002c3ec12: mov    %r10,0x28(%rsp)
  0x0000000002c3ec17: mov    %r11,0x20(%rsp)
  0x0000000002c3ec1c: mov    %r12,0x18(%rsp)
  0x0000000002c3ec21: mov    %r13,0x10(%rsp)
  0x0000000002c3ec26: mov    %r14,0x8(%rsp)
  0x0000000002c3ec2b: mov    %r15,(%rsp)
  0x0000000002c3ec2f: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c3ec39: movabs $0x2c3ebd9,%rdx    ;   {internal_word}
  0x0000000002c3ec43: mov    %rsp,%r8
  0x0000000002c3ec46: and    $0xfffffffffffffff0,%rsp
  0x0000000002c3ec4a: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c3ec4f: hlt    
[Deopt Handler Code]
  0x0000000002c3ec50: movabs $0x2c3ec50,%r10    ;   {section_word}
  0x0000000002c3ec5a: push   %r10
  0x0000000002c3ec5c: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c3ec61: hlt    
  0x0000000002c3ec62: hlt    
  0x0000000002c3ec63: hlt    
  0x0000000002c3ec64: hlt    
  0x0000000002c3ec65: hlt    
  0x0000000002c3ec66: hlt    
  0x0000000002c3ec67: hlt    
<nmethod compile_id='12' compiler='C1' level='3' entry='0x0000000002c3ea40' size='1072' address='0x0000000002c3e8d0' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='928' scopes_pcs_offset='968' dependencies_offset='1064' method='java/lang/String indexOf (I)I' bytes='7' count='1737' iicount='1737' stamp='0.426'/>
<writer thread='20984'/>
[Loaded java.util.HashMap$EntryIterator from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
<writer thread='9088'/>
Decoding compiled method 0x0000000002c422d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001933bb68} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap&apos;
  # parm0:    
<writer thread='20984'/>
[Loaded java.lang.ProcessEnvironment$CheckedEntry from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
<writer thread='9088'/>
r8:r8                   = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  #           [sp+0x90]  (sp of caller)
  0x0000000002c42460: mov    0x8(%rdx),%r10d
  0x0000000002c42464: shl    $0x3,%r10
  0x0000000002c42468: cmp    %rax,%r10
  0x0000000002c4246b: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c42471: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c4247c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c42480: mov    %eax,-0x6000(%rsp)
  0x0000000002c42487: push   %rbp
  0x0000000002c42488: sub    $0x80,%rsp
  0x0000000002c4248f: mov    %rdx,0x58(%rsp)
  0x0000000002c42494: mov    %r8,0x60(%rsp)
  0x0000000002c42499: mov    %r9,0x68(%rsp)
  0x0000000002c4249e: movabs $0x1948fe58,%rsi   ;   {metadata(method data for {method} {0x000000001933bb68} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c424a8: mov    0xdc(%rsi),%edi
  0x0000000002c424ae: add    $0x8,%edi
  0x0000000002c424b1: mov    %edi,0xdc(%rsi)
  0x0000000002c424b7: movabs $0x1933bb60,%rsi   ;   {metadata({method} {0x000000001933bb68} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c424c1: and    $0x1ff8,%edi
  0x0000000002c424c7: cmp    $0x0,%edi
  0x0000000002c424ca: je     0x0000000002c426f3  ;*aload_0
                                                ; - java.util.HashMap::put@0 (line 611)

  0x0000000002c424d0: movabs $0x1948fe58,%rsi   ;   {metadata(method data for {method} {0x000000001933bb68} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c424da: addq   $0x1,0x108(%rsi)
  0x0000000002c424e2: movabs $0x19445bf0,%rsi   ;   {metadata(method data for {method} {0x000000001933b078} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c424ec: mov    0xdc(%rsi),%edi
  0x0000000002c424f2: add    $0x8,%edi
  0x0000000002c424f5: mov    %edi,0xdc(%rsi)
  0x0000000002c424fb: movabs $0x1933b070,%rsi   ;   {metadata({method} {0x000000001933b078} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c42505: and    $0x7ffff8,%edi
  0x0000000002c4250b: cmp    $0x0,%edi
  0x0000000002c4250e: je     0x0000000002c4270a
  0x0000000002c42514: cmp    $0x0,%r8
  0x0000000002c42518: movabs $0x19445bf0,%rsi   ;   {metadata(method data for {method} {0x000000001933b078} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c42522: movabs $0x108,%rdi
  0x0000000002c4252c: jne    0x0000000002c4253c
  0x0000000002c42532: movabs $0x118,%rdi
  0x0000000002c4253c: mov    (%rsi,%rdi,1),%rbx
  0x0000000002c42540: lea    0x1(%rbx),%rbx
  0x0000000002c42544: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002c42548: jne    0x0000000002c42568  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)

  0x0000000002c4254e: movabs $0x19445bf0,%rsi   ;   {metadata(method data for {method} {0x000000001933b078} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c42558: incl   0x128(%rsi)
  0x0000000002c4255e: mov    $0x0,%esi
  0x0000000002c42563: jmpq   0x0000000002c42621  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)

  0x0000000002c42568: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x0000000002c42721
  0x0000000002c4256b: mov    %r8,%rsi
  0x0000000002c4256e: movabs $0x19445bf0,%rdi   ;   {metadata(method data for {method} {0x000000001933b078} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c42578: mov    0x8(%rsi),%esi
  0x0000000002c4257b: shl    $0x3,%rsi
  0x0000000002c4257f: cmp    0x148(%rdi),%rsi
  0x0000000002c42586: jne    0x0000000002c42595
  0x0000000002c42588: addq   $0x1,0x150(%rdi)
  0x0000000002c42590: jmpq   0x0000000002c425fb
  0x0000000002c42595: cmp    0x158(%rdi),%rsi
  0x0000000002c4259c: jne    0x0000000002c425ab
  0x0000000002c4259e: addq   $0x1,0x160(%rdi)
  0x0000000002c425a6: jmpq   0x0000000002c425fb
  0x0000000002c425ab: cmpq   $0x0,0x148(%rdi)
  0x0000000002c425b6: jne    0x0000000002c425cf
  0x0000000002c425b8: mov    %rsi,0x148(%rdi)
  0x0000000002c425bf: movq   $0x1,0x150(%rdi)
  0x0000000002c425ca: jmpq   0x0000000002c425fb
  0x0000000002c425cf: cmpq   $0x0,0x158(%rdi)
  0x0000000002c425da: jne    0x0000000002c425f3
  0x0000000002c425dc: mov    %rsi,0x158(%rdi)
  0x0000000002c425e3: movq   $0x1,0x160(%rdi)
  0x0000000002c425ee: jmpq   0x0000000002c425fb
  0x0000000002c425f3: addq   $0x1,0x140(%rdi)
  0x0000000002c425fb: mov    %r8,%rdx           ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)

  0x0000000002c425fe: nop
  0x0000000002c425ff: nop
  0x0000000002c42600: nop
  0x0000000002c42601: nop
  0x0000000002c42602: nop
  0x0000000002c42603: nop
  0x0000000002c42604: nop
  0x0000000002c42605: movabs $0xffffffffffffffff,%rax
  0x0000000002c4260f: callq  0x0000000002b763e0  ; OopMap{[96]=Oop [88]=Oop [104]=Oop off=436}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ;   {virtual_call}
  0x0000000002c42614: mov    %rax,%r8
  0x0000000002c42617: shr    $0x10,%r8d
  0x0000000002c4261b: xor    %rax,%r8
  0x0000000002c4261e: mov    %r8,%rsi           ;*ireturn
                                                ; - java.util.HashMap::hash@19 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)

  0x0000000002c42621: mov    0x68(%rsp),%r9
  0x0000000002c42626: mov    0x60(%rsp),%r8
  0x0000000002c4262b: mov    0x58(%rsp),%rdx
  0x0000000002c42630: mov    %rdx,%rdi
  0x0000000002c42633: movabs $0x1948fe58,%rcx   ;   {metadata(method data for {method} {0x000000001933bb68} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c4263d: mov    0x8(%rdi),%edi
  0x0000000002c42640: shl    $0x3,%rdi
  0x0000000002c42644: cmp    0x120(%rcx),%rdi
  0x0000000002c4264b: jne    0x0000000002c4265a
  0x0000000002c4264d: addq   $0x1,0x128(%rcx)
  0x0000000002c42655: jmpq   0x0000000002c426c0
  0x0000000002c4265a: cmp    0x130(%rcx),%rdi
  0x0000000002c42661: jne    0x0000000002c42670
  0x0000000002c42663: addq   $0x1,0x138(%rcx)
  0x0000000002c4266b: jmpq   0x0000000002c426c0
  0x0000000002c42670: cmpq   $0x0,0x120(%rcx)
  0x0000000002c4267b: jne    0x0000000002c42694
  0x0000000002c4267d: mov    %rdi,0x120(%rcx)
  0x0000000002c42684: movq   $0x1,0x128(%rcx)
  0x0000000002c4268f: jmpq   0x0000000002c426c0
  0x0000000002c42694: cmpq   $0x0,0x130(%rcx)
  0x0000000002c4269f: jne    0x0000000002c426b8
  0x0000000002c426a1: mov    %rdi,0x130(%rcx)
  0x0000000002c426a8: movq   $0x1,0x138(%rcx)
  0x0000000002c426b3: jmpq   0x0000000002c426c0
  0x0000000002c426b8: addq   $0x1,0x118(%rcx)
  0x0000000002c426c0: mov    %r8,%rbx
  0x0000000002c426c3: mov    %rsi,%r8
  0x0000000002c426c6: mov    %r9,%rax
  0x0000000002c426c9: mov    %rbx,%r9
  0x0000000002c426cc: mov    %rax,%rdi
  0x0000000002c426cf: mov    $0x0,%esi
  0x0000000002c426d4: mov    $0x1,%ecx
  0x0000000002c426d9: mov    %rdx,%r11
  0x0000000002c426dc: mov    %r11,%rdx          ;*invokevirtual putVal
                                                ; - java.util.HashMap::put@9 (line 611)

  0x0000000002c426df: callq  0x0000000002b761a0  ; OopMap{[96]=Oop [88]=Oop [104]=Oop off=644}
                                                ;*invokevirtual putVal
                                                ; - java.util.HashMap::put@9 (line 611)
                                                ;   {optimized virtual_call}
  0x0000000002c426e4: add    $0x80,%rsp
  0x0000000002c426eb: pop    %rbp
  0x0000000002c426ec: test   %eax,-0x25725f2(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c426f2: retq   
  0x0000000002c426f3: mov    %rsi,0x8(%rsp)
  0x0000000002c426f8: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c42700: callq  0x0000000002c31360  ; OopMap{rdx=Oop [88]=Oop r8=Oop [96]=Oop r9=Oop [104]=Oop off=677}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::put@-1 (line 611)
                                                ;   {runtime_call}
  0x0000000002c42705: jmpq   0x0000000002c424d0
  0x0000000002c4270a: mov    %rsi,0x8(%rsp)
  0x0000000002c4270f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c42717: callq  0x0000000002c31360  ; OopMap{rdx=Oop [88]=Oop r8=Oop [96]=Oop r9=Oop [104]=Oop off=700}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ;   {runtime_call}
  0x0000000002c4271c: jmpq   0x0000000002c42514
  0x0000000002c42721: callq  0x0000000002c2cc80  ; OopMap{r8=Oop [96]=Oop [88]=Oop [104]=Oop off=710}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ;   {runtime_call}
  0x0000000002c42726: nop
  0x0000000002c42727: nop
  0x0000000002c42728: mov    0x2a8(%r15),%rax
  0x0000000002c4272f: movabs $0x0,%r10
  0x0000000002c42739: mov    %r10,0x2a8(%r15)
  0x0000000002c42740: movabs $0x0,%r10
  0x0000000002c4274a: mov    %r10,0x2b0(%r15)
  0x0000000002c42751: add    $0x80,%rsp
  0x0000000002c42758: pop    %rbp
  0x0000000002c42759: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c4275e: hlt    
  0x0000000002c4275f: hlt    
[Stub Code]
  0x0000000002c42760: nop                       ;   {no_reloc}
  0x0000000002c42761: nop
  0x0000000002c42762: nop
  0x0000000002c42763: nop
  0x0000000002c42764: nop
  0x0000000002c42765: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c4276f: jmpq   0x0000000002c4276f  ;   {runtime_call}
  0x0000000002c42774: nop
  0x0000000002c42775: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c4277f: jmpq   0x0000000002c4277f  ;   {runtime_call}
[Exception Handler]
  0x0000000002c42784: callq  0x0000000002c2eb20  ;   {runtime_call}
  0x0000000002c42789: mov    %rsp,-0x28(%rsp)
  0x0000000002c4278e: sub    $0x80,%rsp
  0x0000000002c42795: mov    %rax,0x78(%rsp)
  0x0000000002c4279a: mov    %rcx,0x70(%rsp)
  0x0000000002c4279f: mov    %rdx,0x68(%rsp)
  0x0000000002c427a4: mov    %rbx,0x60(%rsp)
  0x0000000002c427a9: mov    %rbp,0x50(%rsp)
  0x0000000002c427ae: mov    %rsi,0x48(%rsp)
  0x0000000002c427b3: mov    %rdi,0x40(%rsp)
  0x0000000002c427b8: mov    %r8,0x38(%rsp)
  0x0000000002c427bd: mov    %r9,0x30(%rsp)
  0x0000000002c427c2: mov    %r10,0x28(%rsp)
  0x0000000002c427c7: mov    %r11,0x20(%rsp)
  0x0000000002c427cc: mov    %r12,0x18(%rsp)
  0x0000000002c427d1: mov    %r13,0x10(%rsp)
  0x0000000002c427d6: mov    %r14,0x8(%rsp)
  0x0000000002c427db: mov    %r15,(%rsp)
  0x0000000002c427df: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c427e9: movabs $0x2c42789,%rdx    ;   {internal_word}
  0x0000000002c427f3: mov    %rsp,%r8
  0x0000000002c427f6: and    $0xfffffffffffffff0,%rsp
  0x0000000002c427fa: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c427ff: hlt    
[Deopt Handler Code]
  0x0000000002c42800: movabs $0x2c42800,%r10    ;   {section_word}
  0x0000000002c4280a: push   %r10
  0x0000000002c4280c: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c42811: hlt    
  0x0000000002c42812: hlt    
  0x0000000002c42813: hlt    
  0x0000000002c42814: hlt    
  0x0000000002c42815: hlt    
  0x0000000002c42816: hlt    
  0x0000000002c42817: hlt    
<nmethod compile_id='15' compiler='C1' level='3' entry='0x0000000002c42460' size='1744' address='0x0000000002c422d0' relocation_offset='288' insts_offset='400' stub_offset='1168' scopes_data_offset='1368' scopes_pcs_offset='1512' dependencies_offset='1720' nul_chk_table_offset='1728' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='790' iicount='790' stamp='0.430'/>
<writer thread='20984'/>
<task_queued compile_id='18' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='9984' iicount='9984' stamp='0.430' comment='tiered' hot_count='9984'/>
<writer thread='9088'/>
Decoding compiled method 0x0000000002c41810:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019255d10} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x80]  (sp of caller)
  0x0000000002c419e0: mov    0x8(%rdx),%r10d
  0x0000000002c419e4: shl    $0x3,%r10
  0x0000000002c419e8: cmp    %rax,%r10
  0x0000000002c419eb: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c419f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c419fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c41a00: mov    %eax,-0x6000(%rsp)
  0x0000000002c41a07: push   %rbp
  0x0000000002c41a08: sub    $0x70,%rsp
  0x0000000002c41a0c: mov    %rdx,0x38(%rsp)
  0x0000000002c41a11: mov    %r8d,0x48(%rsp)
  0x0000000002c41a16: mov    %r9d,0x44(%rsp)
  0x0000000002c41a1b: movabs $0x194fd2a0,%rsi   ;   {metadata(method data for {method} {0x0000000019255d10} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c41a25: mov    0xdc(%rsi),%edi
  0x0000000002c41a2b: add    $0x8,%edi
  0x0000000002c41a2e: mov    %edi,0xdc(%rsi)
  0x0000000002c41a34: movabs $0x19255d08,%rsi   ;   {metadata({method} {0x0000000019255d10} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c41a3e: and    $0x1ff8,%edi
  0x0000000002c41a44: cmp    $0x0,%edi
  0x0000000002c41a47: je     0x0000000002c41d21  ;*iload_1
                                                ; - java.lang.String::substring@0 (line 1959)

  0x0000000002c41a4d: cmp    $0x0,%r8d
  0x0000000002c41a51: movabs $0x194fd2a0,%rsi   ;   {metadata(method data for {method} {0x0000000019255d10} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c41a5b: movabs $0x108,%rdi
  0x0000000002c41a65: jge    0x0000000002c41a75
  0x0000000002c41a6b: movabs $0x118,%rdi
  0x0000000002c41a75: mov    (%rsi,%rdi,1),%rax
  0x0000000002c41a79: lea    0x1(%rax),%rax
  0x0000000002c41a7d: mov    %rax,(%rsi,%rdi,1)
  0x0000000002c41a81: jl     0x0000000002c41cc9  ;*ifge
                                                ; - java.lang.String::substring@1 (line 1959)

  0x0000000002c41a87: mov    0xc(%rdx),%ebx
  0x0000000002c41a8a: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.String::substring@15 (line 1962)

  0x0000000002c41a8e: mov    0xc(%rbx),%esi     ;*arraylength
                                                ; - java.lang.String::substring@18 (line 1962)
                                                ; implicit exception: dispatches to 0x0000000002c41d38
  0x0000000002c41a91: cmp    %esi,%r9d
  0x0000000002c41a94: movabs $0x194fd2a0,%rdi   ;   {metadata(method data for {method} {0x0000000019255d10} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c41a9e: movabs $0x138,%rax
  0x0000000002c41aa8: jle    0x0000000002c41ab8
  0x0000000002c41aae: movabs $0x148,%rax
  0x0000000002c41ab8: mov    (%rdi,%rax,1),%rcx
  0x0000000002c41abc: lea    0x1(%rcx),%rcx
  0x0000000002c41ac0: mov    %rcx,(%rdi,%rax,1)
  0x0000000002c41ac4: jg     0x0000000002c41c71  ;*if_icmple
                                                ; - java.lang.String::substring@19 (line 1962)

  0x0000000002c41aca: mov    %r9,%r11
  0x0000000002c41acd: sub    %r8d,%r11d
  0x0000000002c41ad0: mov    %r11d,0x40(%rsp)
  0x0000000002c41ad5: cmp    $0x0,%r11d
  0x0000000002c41ad9: movabs $0x194fd2a0,%rdi   ;   {metadata(method data for {method} {0x0000000019255d10} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c41ae3: movabs $0x168,%rax
  0x0000000002c41aed: jge    0x0000000002c41afd
  0x0000000002c41af3: movabs $0x178,%rax
  0x0000000002c41afd: mov    (%rdi,%rax,1),%rcx
  0x0000000002c41b01: lea    0x1(%rcx),%rcx
  0x0000000002c41b05: mov    %rcx,(%rdi,%rax,1)
  0x0000000002c41b09: jl     0x0000000002c41c26  ;*ifge
                                                ; - java.lang.String::substring@36 (line 1966)

  0x0000000002c41b0f: cmp    $0x0,%r8d
  0x0000000002c41b13: movabs $0x194fd2a0,%rdi   ;   {metadata(method data for {method} {0x0000000019255d10} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c41b1d: movabs $0x198,%rax
  0x0000000002c41b27: jne    0x0000000002c41b37
  0x0000000002c41b2d: movabs $0x1a8,%rax
  0x0000000002c41b37: mov    (%rdi,%rax,1),%rcx
  0x0000000002c41b3b: lea    0x1(%rcx),%rcx
  0x0000000002c41b3f: mov    %rcx,(%rdi,%rax,1)
  0x0000000002c41b43: jne    0x0000000002c41b82  ;*ifne
                                                ; - java.lang.String::substring@49 (line 1969)

  0x0000000002c41b49: cmp    %esi,%r9d
  0x0000000002c41b4c: movabs $0x194fd2a0,%rsi   ;   {metadata(method data for {method} {0x0000000019255d10} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c41b56: movabs $0x1b8,%rdi
  0x0000000002c41b60: jne    0x0000000002c41b70
  0x0000000002c41b66: movabs $0x1c8,%rdi
  0x0000000002c41b70: mov    (%rsi,%rdi,1),%rax
  0x0000000002c41b74: lea    0x1(%rax),%rax
  0x0000000002c41b78: mov    %rax,(%rsi,%rdi,1)
  0x0000000002c41b7c: je     0x0000000002c41c05  ;*if_icmpne
                                                ; - java.lang.String::substring@58 (line 1969)

  0x0000000002c41b82: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002c41b8c: mov    0x60(%r15),%rax
  0x0000000002c41b90: lea    0x18(%rax),%rdi
  0x0000000002c41b94: cmp    0x70(%r15),%rdi
  0x0000000002c41b98: ja     0x0000000002c41d3d
  0x0000000002c41b9e: mov    %rdi,0x60(%r15)
  0x0000000002c41ba2: mov    0xa8(%rdx),%rcx
  0x0000000002c41ba9: mov    %rcx,(%rax)
  0x0000000002c41bac: mov    %rdx,%rcx
  0x0000000002c41baf: shr    $0x3,%rcx
  0x0000000002c41bb3: mov    %ecx,0x8(%rax)
  0x0000000002c41bb6: xor    %rcx,%rcx
  0x0000000002c41bb9: mov    %ecx,0xc(%rax)
  0x0000000002c41bbc: xor    %rcx,%rcx
  0x0000000002c41bbf: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.String::substring@65 (line 1969)

  0x0000000002c41bc3: mov    %rax,%rdi
  0x0000000002c41bc6: movabs $0x194fd2a0,%rdx   ;   {metadata(method data for {method} {0x0000000019255d10} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c41bd0: addq   $0x1,0x1f0(%rdx)
  0x0000000002c41bd8: mov    %r8,%rsi
  0x0000000002c41bdb: mov    %rbx,%r8
  0x0000000002c41bde: mov    %rsi,%r9
  0x0000000002c41be1: mov    %r11,%rdi
  0x0000000002c41be4: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@75 (line 1969)

  0x0000000002c41be7: mov    %rax,0x30(%rsp)
  0x0000000002c41bec: nop
  0x0000000002c41bed: nop
  0x0000000002c41bee: nop
  0x0000000002c41bef: callq  0x0000000002b761a0  ; OopMap{[48]=Oop [56]=Oop off=532}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@75 (line 1969)
                                                ;   {optimized virtual_call}
  0x0000000002c41bf4: mov    0x30(%rsp),%rax    ;*areturn
                                                ; - java.lang.String::substring@78 (line 1969)

  0x0000000002c41bf9: add    $0x70,%rsp
  0x0000000002c41bfd: pop    %rbp
  0x0000000002c41bfe: test   %eax,-0x2571b04(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c41c04: retq   
  0x0000000002c41c05: movabs $0x194fd2a0,%rax   ;   {metadata(method data for {method} {0x0000000019255d10} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c41c0f: incl   0x1d8(%rax)
  0x0000000002c41c15: mov    0x38(%rsp),%rax    ;*goto
                                                ; - java.lang.String::substring@62 (line 1969)

  0x0000000002c41c1a: add    $0x70,%rsp
  0x0000000002c41c1e: pop    %rbp
  0x0000000002c41c1f: test   %eax,-0x2571b25(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c41c25: retq                      ;*areturn
                                                ; - java.lang.String::substring@78 (line 1969)

  0x0000000002c41c26: xchg   %ax,%ax
  0x0000000002c41c28: jmpq   0x0000000002c41d59  ;   {no_reloc}
  0x0000000002c41c2d: add    %al,(%rax)
  0x0000000002c41c2f: add    %al,(%rax)
  0x0000000002c41c31: add    %ch,%cl
  0x0000000002c41c33: sub    $0x1,%al
  0x0000000002c41c35: add    %al,(%rax)         ;*new  ; - java.lang.String::substring@39 (line 1967)

  0x0000000002c41c37: mov    %rax,%r8
  0x0000000002c41c3a: movabs $0x194fd2a0,%rdx   ;   {metadata(method data for {method} {0x0000000019255d10} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c41c44: addq   $0x1,0x188(%rdx)
  0x0000000002c41c4c: mov    %r11,%r8
  0x0000000002c41c4f: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@44 (line 1967)

  0x0000000002c41c52: mov    %rax,0x50(%rsp)
  0x0000000002c41c57: callq  0x0000000002b761a0  ; OopMap{[56]=Oop [80]=Oop off=636}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@44 (line 1967)
                                                ;   {optimized virtual_call}
  0x0000000002c41c5c: mov    0x50(%rsp),%rax    ; OopMap{[56]=Oop rax=Oop off=641}
                                                ;*athrow
                                                ; - java.lang.String::substring@47 (line 1967)

  0x0000000002c41c61: movabs $0x2c41c61,%rdx    ;   {section_word}
  0x0000000002c41c6b: callq  0x0000000002b9f120  ;   {runtime_call}
  0x0000000002c41c70: nop                       ;*athrow
                                                ; - java.lang.String::substring@47 (line 1967)

  0x0000000002c41c71: nopl   0x0(%rax)
  0x0000000002c41c78: jmpq   0x0000000002c41d7f  ;   {no_reloc}
  0x0000000002c41c7d: add    %al,(%rax)
  0x0000000002c41c7f: add    %al,(%rax)
  0x0000000002c41c81: add    %ch,%cl
  0x0000000002c41c83: add    (%rcx),%al
  0x0000000002c41c85: add    %al,(%rax)         ;*new  ; - java.lang.String::substring@22 (line 1963)

  0x0000000002c41c87: mov    %rax,%r8
  0x0000000002c41c8a: movabs $0x194fd2a0,%rdx   ;   {metadata(method data for {method} {0x0000000019255d10} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c41c94: addq   $0x1,0x158(%rdx)
  0x0000000002c41c9c: mov    0x44(%rsp),%r8d
  0x0000000002c41ca1: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@27 (line 1963)

  0x0000000002c41ca4: mov    %rax,0x58(%rsp)
  0x0000000002c41ca9: nop
  0x0000000002c41caa: nop
  0x0000000002c41cab: nop
  0x0000000002c41cac: nop
  0x0000000002c41cad: nop
  0x0000000002c41cae: nop
  0x0000000002c41caf: callq  0x0000000002b761a0  ; OopMap{[56]=Oop [88]=Oop off=724}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@27 (line 1963)
                                                ;   {optimized virtual_call}
  0x0000000002c41cb4: mov    0x58(%rsp),%rax    ; OopMap{[56]=Oop rax=Oop off=729}
                                                ;*athrow
                                                ; - java.lang.String::substring@30 (line 1963)

  0x0000000002c41cb9: movabs $0x2c41cb9,%rdx    ;   {section_word}
  0x0000000002c41cc3: callq  0x0000000002b9f120  ;   {runtime_call}
  0x0000000002c41cc8: nop                       ;*athrow
                                                ; - java.lang.String::substring@30 (line 1963)

  0x0000000002c41cc9: nopl   0x0(%rax)
  0x0000000002c41cd0: jmpq   0x0000000002c41da5  ;   {no_reloc}
  0x0000000002c41cd5: add    %al,(%rax)
  0x0000000002c41cd7: add    %al,(%rax)
  0x0000000002c41cd9: add    %ch,%cl
  0x0000000002c41cdb: rolb   (%rax)
  0x0000000002c41cdd: add    %al,(%rax)         ;*new  ; - java.lang.String::substring@4 (line 1960)

  0x0000000002c41cdf: mov    %rax,%rdx
  0x0000000002c41ce2: movabs $0x194fd2a0,%rdi   ;   {metadata(method data for {method} {0x0000000019255d10} &apos;substring&apos; &apos;(II)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c41cec: addq   $0x1,0x128(%rdi)
  0x0000000002c41cf4: mov    %r8,%rdi
  0x0000000002c41cf7: mov    %rdi,%r8
  0x0000000002c41cfa: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@9 (line 1960)

  0x0000000002c41cfd: mov    %rax,0x60(%rsp)
  0x0000000002c41d02: nop
  0x0000000002c41d03: nop
  0x0000000002c41d04: nop
  0x0000000002c41d05: nop
  0x0000000002c41d06: nop
  0x0000000002c41d07: callq  0x0000000002b761a0  ; OopMap{[96]=Oop [56]=Oop off=812}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::substring@9 (line 1960)
                                                ;   {optimized virtual_call}
  0x0000000002c41d0c: mov    0x60(%rsp),%rax    ; OopMap{[56]=Oop rax=Oop off=817}
                                                ;*athrow
                                                ; - java.lang.String::substring@12 (line 1960)

  0x0000000002c41d11: movabs $0x2c41d11,%rdx    ;   {section_word}
  0x0000000002c41d1b: callq  0x0000000002b9f120  ;   {runtime_call}
  0x0000000002c41d20: nop
  0x0000000002c41d21: mov    %rsi,0x8(%rsp)
  0x0000000002c41d26: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c41d2e: callq  0x0000000002c31360  ; OopMap{rdx=Oop [56]=Oop off=851}
                                                ;*synchronization entry
                                                ; - java.lang.String::substring@-1 (line 1959)
                                                ;   {runtime_call}
  0x0000000002c41d33: jmpq   0x0000000002c41a4d
  0x0000000002c41d38: callq  0x0000000002c2cc80  ; OopMap{rdx=Oop [56]=Oop rbx=Oop off=861}
                                                ;*arraylength
                                                ; - java.lang.String::substring@18 (line 1962)
                                                ;   {runtime_call}
  0x0000000002c41d3d: mov    %rdx,%rdx
  0x0000000002c41d40: callq  0x0000000002c2d400  ; OopMap{rbx=Oop [56]=Oop off=869}
                                                ;*new  ; - java.lang.String::substring@65 (line 1969)
                                                ;   {runtime_call}
  0x0000000002c41d45: jmpq   0x0000000002c41bc3
  0x0000000002c41d4a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002c41d54: mov    $0xa050f00,%eax
  0x0000000002c41d59: callq  0x0000000002c302a0  ; OopMap{[56]=Oop off=894}
                                                ;*new  ; - java.lang.String::substring@39 (line 1967)
                                                ;   {runtime_call}
  0x0000000002c41d5e: jmpq   0x0000000002c41c28
  0x0000000002c41d63: mov    %rdx,%rdx
  0x0000000002c41d66: callq  0x0000000002c2d120  ; OopMap{[56]=Oop off=907}
                                                ;*new  ; - java.lang.String::substring@39 (line 1967)
                                                ;   {runtime_call}
  0x0000000002c41d6b: jmpq   0x0000000002c41c37
  0x0000000002c41d70: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002c41d7a: mov    $0xa050f00,%eax
  0x0000000002c41d7f: callq  0x0000000002c302a0  ; OopMap{[56]=Oop off=932}
                                                ;*new  ; - java.lang.String::substring@22 (line 1963)
                                                ;   {runtime_call}
  0x0000000002c41d84: jmpq   0x0000000002c41c78
  0x0000000002c41d89: mov    %rdx,%rdx
  0x0000000002c41d8c: callq  0x0000000002c2d120  ; OopMap{[56]=Oop off=945}
                                                ;*new  ; - java.lang.String::substring@22 (line 1963)
                                                ;   {runtime_call}
  0x0000000002c41d91: jmpq   0x0000000002c41c87
  0x0000000002c41d96: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002c41da0: mov    $0xa050f00,%eax
  0x0000000002c41da5: callq  0x0000000002c302a0  ; OopMap{[56]=Oop off=970}
                                                ;*new  ; - java.lang.String::substring@4 (line 1960)
                                                ;   {runtime_call}
  0x0000000002c41daa: jmpq   0x0000000002c41cd0
  0x0000000002c41daf: mov    %rdx,%rdx
  0x0000000002c41db2: callq  0x0000000002c2d120  ; OopMap{[56]=Oop off=983}
                                                ;*new  ; - java.lang.String::substring@4 (line 1960)
                                                ;   {runtime_call}
  0x0000000002c41db7: jmpq   0x0000000002c41cdf
  0x0000000002c41dbc: nop
  0x0000000002c41dbd: nop
  0x0000000002c41dbe: mov    0x2a8(%r15),%rax
  0x0000000002c41dc5: movabs $0x0,%r10
  0x0000000002c41dcf: mov    %r10,0x2a8(%r15)
  0x0000000002c41dd6: movabs $0x0,%r10
  0x0000000002c41de0: mov    %r10,0x2b0(%r15)
  0x0000000002c41de7: add    $0x70,%rsp
  0x0000000002c41deb: pop    %rbp
  0x0000000002c41dec: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c41df1: hlt    
  0x0000000002c41df2: hlt    
  0x0000000002c41df3: hlt    
  0x0000000002c41df4: hlt    
  0x0000000002c41df5: hlt    
  0x0000000002c41df6: hlt    
  0x0000000002c41df7: hlt    
  0x0000000002c41df8: hlt    
  0x0000000002c41df9: hlt    
  0x0000000002c41dfa: hlt    
  0x0000000002c41dfb: hlt    
  0x0000000002c41dfc: hlt    
  0x0000000002c41dfd: hlt    
  0x0000000002c41dfe: hlt    
  0x0000000002c41dff: hlt    
[Stub Code]
  0x0000000002c41e00: nop                       ;   {no_reloc}
  0x0000000002c41e01: nop
  0x0000000002c41e02: nop
  0x0000000002c41e03: nop
  0x0000000002c41e04: nop
  0x0000000002c41e05: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c41e0f: jmpq   0x0000000002c41e0f  ;   {runtime_call}
  0x0000000002c41e14: nop
  0x0000000002c41e15: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c41e1f: jmpq   0x0000000002c41e1f  ;   {runtime_call}
  0x0000000002c41e24: nop
  0x0000000002c41e25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c41e2f: jmpq   0x0000000002c41e2f  ;   {runtime_call}
  0x0000000002c41e34: nop
  0x0000000002c41e35: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c41e3f: jmpq   0x0000000002c41e3f  ;   {runtime_call}
[Exception Handler]
  0x0000000002c41e44: callq  0x0000000002c2eb20  ;   {runtime_call}
  0x0000000002c41e49: mov    %rsp,-0x28(%rsp)
  0x0000000002c41e4e: sub    $0x80,%rsp
  0x0000000002c41e55: mov    %rax,0x78(%rsp)
  0x0000000002c41e5a: mov    %rcx,0x70(%rsp)
  0x0000000002c41e5f: mov    %rdx,0x68(%rsp)
  0x0000000002c41e64: mov    %rbx,0x60(%rsp)
  0x0000000002c41e69: mov    %rbp,0x50(%rsp)
  0x0000000002c41e6e: mov    %rsi,0x48(%rsp)
  0x0000000002c41e73: mov    %rdi,0x40(%rsp)
  0x0000000002c41e78: mov    %r8,0x38(%rsp)
  0x0000000002c41e7d: mov    %r9,0x30(%rsp)
  0x0000000002c41e82: mov    %r10,0x28(%rsp)
  0x0000000002c41e87: mov    %r11,0x20(%rsp)
  0x0000000002c41e8c: mov    %r12,0x18(%rsp)
  0x0000000002c41e91: mov    %r13,0x10(%rsp)
  0x0000000002c41e96: mov    %r14,0x8(%rsp)
  0x0000000002c41e9b: mov    %r15,(%rsp)
  0x0000000002c41e9f: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c41ea9: movabs $0x2c41e49,%rdx    ;   {internal_word}
  0x0000000002c41eb3: mov    %rsp,%r8
  0x0000000002c41eb6: and    $0xfffffffffffffff0,%rsp
  0x0000000002c41eba: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c41ebf: hlt    
[Deopt Handler Code]
  0x0000000002c41ec0: movabs $0x2c41ec0,%r10    ;   {section_word}
  0x0000000002c41eca: push   %r10
  0x0000000002c41ecc: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c41ed1: hlt    
  0x0000000002c41ed2: hlt    
  0x0000000002c41ed3: hlt    
  0x0000000002c41ed4: hlt    
  0x0000000002c41ed5: hlt    
  0x0000000002c41ed6: hlt    
  0x0000000002c41ed7: hlt    
<nmethod compile_id='17' compiler='C1' level='3' entry='0x0000000002c419e0' size='2688' address='0x0000000002c41810' relocation_offset='288' insts_offset='464' stub_offset='1520' scopes_data_offset='1744' scopes_pcs_offset='2040' dependencies_offset='2664' nul_chk_table_offset='2672' method='java/lang/String substring (II)Ljava/lang/String;' bytes='79' count='768' iicount='768' stamp='0.436'/>
<writer thread='8488'/>
Decoding compiled method 0x0000000002c3e690:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000019382a68} &apos;parentOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;
  # parm0:    rdx:rdx   = &apos;java/util/TreeMap$Entry&apos;
  #           [sp+0x30]  (sp of caller)
  0x0000000002c3e7c0: mov    %eax,-0x6000(%rsp)
  0x0000000002c3e7c7: push   %rbp
  0x0000000002c3e7c8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.TreeMap::parentOf@-1 (line 2204)

  0x0000000002c3e7cc: mov    0x20(%rdx),%r10d   ; implicit exception: dispatches to 0x0000000002c3e7e3
  0x0000000002c3e7d0: mov    %r10,%rax
  0x0000000002c3e7d3: shl    $0x3,%rax          ;*getfield parent
                                                ; - java.util.TreeMap::parentOf@9 (line 2204)

  0x0000000002c3e7d7: add    $0x20,%rsp
  0x0000000002c3e7db: pop    %rbp
  0x0000000002c3e7dc: test   %eax,-0x256e7e2(%rip)        # 0x00000000006d0000
                                                ;   {poll_return}
  0x0000000002c3e7e2: retq   
  0x0000000002c3e7e3: mov    %rdx,(%rsp)
  0x0000000002c3e7e7: mov    $0xffffff65,%edx
  0x0000000002c3e7ec: data16 xchg %ax,%ax
  0x0000000002c3e7ef: callq  0x0000000002b757a0  ; OopMap{[0]=Oop off=52}
                                                ;*ifnonnull
                                                ; - java.util.TreeMap::parentOf@1 (line 2204)
                                                ;   {runtime_call}
  0x0000000002c3e7f4: int3                      ;*ifnonnull
                                                ; - java.util.TreeMap::parentOf@1 (line 2204)

  0x0000000002c3e7f5: hlt    
  0x0000000002c3e7f6: hlt    
  0x0000000002c3e7f7: hlt    
  0x0000000002c3e7f8: hlt    
  0x0000000002c3e7f9: hlt    
  0x0000000002c3e7fa: hlt    
  0x0000000002c3e7fb: hlt    
  0x0000000002c3e7fc: hlt    
  0x0000000002c3e7fd: hlt    
  0x0000000002c3e7fe: hlt    
  0x0000000002c3e7ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c3e800: jmpq   0x0000000002b87ee0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002c3e805: callq  0x0000000002c3e80a
  0x0000000002c3e80a: subq   $0x5,(%rsp)
  0x0000000002c3e80f: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c3e814: hlt    
  0x0000000002c3e815: hlt    
  0x0000000002c3e816: hlt    
  0x0000000002c3e817: hlt    
<nmethod compile_id='18' compiler='C2' level='4' entry='0x0000000002c3e7c0' size='552' address='0x0000000002c3e690' relocation_offset='288' insts_offset='304' stub_offset='368' scopes_data_offset='400' scopes_pcs_offset='432' dependencies_offset='528' nul_chk_table_offset='536' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='10000' iicount='10000' stamp='0.437'/>
<writer thread='9088'/>
Decoding compiled method 0x0000000002c414d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001933dca0} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap&apos;
  # parm0:    r8        = boolean
  #           [sp+0x40]  (sp of caller)
  0x0000000002c41620: mov    0x8(%rdx),%r10d
  0x0000000002c41624: shl    $0x3,%r10
  0x0000000002c41628: cmp    %rax,%r10
  0x0000000002c4162b: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c41631: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c4163c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c41640: mov    %eax,-0x6000(%rsp)
  0x0000000002c41647: push   %rbp
  0x0000000002c41648: sub    $0x30,%rsp
  0x0000000002c4164c: movabs $0x1951cce0,%rsi   ;   {metadata(method data for {method} {0x000000001933dca0} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c41656: mov    0xdc(%rsi),%edi
  0x0000000002c4165c: add    $0x8,%edi
  0x0000000002c4165f: mov    %edi,0xdc(%rsi)
  0x0000000002c41665: movabs $0x1933dc98,%rsi   ;   {metadata({method} {0x000000001933dca0} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002c4166f: and    $0x1ff8,%edi
  0x0000000002c41675: cmp    $0x0,%edi
  0x0000000002c41678: je     0x0000000002c4168a  ;*return
                                                ; - java.util.HashMap::afterNodeInsertion@0 (line 1775)

  0x0000000002c4167e: add    $0x30,%rsp
  0x0000000002c41682: pop    %rbp
  0x0000000002c41683: test   %eax,-0x2571589(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c41689: retq   
  0x0000000002c4168a: mov    %rsi,0x8(%rsp)
  0x0000000002c4168f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c41697: callq  0x0000000002c31360  ; OopMap{rdx=Oop off=124}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::afterNodeInsertion@-1 (line 1775)
                                                ;   {runtime_call}
  0x0000000002c4169c: jmp    0x0000000002c4167e
  0x0000000002c4169e: nop
  0x0000000002c4169f: nop
  0x0000000002c416a0: mov    0x2a8(%r15),%rax
  0x0000000002c416a7: movabs $0x0,%r10
  0x0000000002c416b1: mov    %r10,0x2a8(%r15)
  0x0000000002c416b8: movabs $0x0,%r10
  0x0000000002c416c2: mov    %r10,0x2b0(%r15)
  0x0000000002c416c9: add    $0x30,%rsp
  0x0000000002c416cd: pop    %rbp
  0x0000000002c416ce: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c416d3: hlt    
  0x0000000002c416d4: hlt    
  0x0000000002c416d5: hlt    
  0x0000000002c416d6: hlt    
  0x0000000002c416d7: hlt    
  0x0000000002c416d8: hlt    
  0x0000000002c416d9: hlt    
  0x0000000002c416da: hlt    
  0x0000000002c416db: hlt    
  0x0000000002c416dc: hlt    
  0x0000000002c416dd: hlt    
  0x0000000002c416de: hlt    
  0x0000000002c416df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c416e0: callq  0x0000000002c2eb20  ;   {no_reloc}
  0x0000000002c416e5: mov    %rsp,-0x28(%rsp)
  0x0000000002c416ea: sub    $0x80,%rsp
  0x0000000002c416f1: mov    %rax,0x78(%rsp)
  0x0000000002c416f6: mov    %rcx,0x70(%rsp)
  0x0000000002c416fb: mov    %rdx,0x68(%rsp)
  0x0000000002c41700: mov    %rbx,0x60(%rsp)
  0x0000000002c41705: mov    %rbp,0x50(%rsp)
  0x0000000002c4170a: mov    %rsi,0x48(%rsp)
  0x0000000002c4170f: mov    %rdi,0x40(%rsp)
  0x0000000002c41714: mov    %r8,0x38(%rsp)
  0x0000000002c41719: mov    %r9,0x30(%rsp)
  0x0000000002c4171e: mov    %r10,0x28(%rsp)
  0x0000000002c41723: mov    %r11,0x20(%rsp)
  0x0000000002c41728: mov    %r12,0x18(%rsp)
  0x0000000002c4172d: mov    %r13,0x10(%rsp)
  0x0000000002c41732: mov    %r14,0x8(%rsp)
  0x0000000002c41737: mov    %r15,(%rsp)
  0x0000000002c4173b: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c41745: movabs $0x2c416e5,%rdx    ;   {internal_word}
  0x0000000002c4174f: mov    %rsp,%r8
  0x0000000002c41752: and    $0xfffffffffffffff0,%rsp
  0x0000000002c41756: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c4175b: hlt    
[Deopt Handler Code]
  0x0000000002c4175c: movabs $0x2c4175c,%r10    ;   {section_word}
  0x0000000002c41766: push   %r10
  0x0000000002c41768: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c4176d: hlt    
  0x0000000002c4176e: hlt    
  0x0000000002c4176f: hlt    
<nmethod compile_id='8' compiler='C1' level='3' entry='0x0000000002c41620' size='776' address='0x0000000002c414d0' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='704' dependencies_offset='768' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='561' iicount='561' stamp='0.438'/>
<writer thread='20984'/>
<task_queued compile_id='19' method='java/lang/Math min (II)I' bytes='11' count='7168' iicount='7168' stamp='0.439' comment='tiered' hot_count='7168'/>
<task_queued compile_id='20' method='java/lang/String charAt (I)C' bytes='29' count='153728' iicount='153728' stamp='0.439' comment='tiered' hot_count='153728'/>
<writer thread='18064'/>
Decoding compiled method 0x0000000002c3e410:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000019347a88} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rdx       = int
  # parm1:    r8        = int
  #           [sp+0x20]  (sp of caller)
  0x0000000002c3e540: sub    $0x18,%rsp
  0x0000000002c3e547: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)

  0x0000000002c3e54c: cmp    %r8d,%edx
  0x0000000002c3e54f: mov    %r8d,%eax
  0x0000000002c3e552: cmovle %edx,%eax          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x0000000002c3e555: add    $0x10,%rsp
  0x0000000002c3e559: pop    %rbp
  0x0000000002c3e55a: test   %eax,-0x256e560(%rip)        # 0x00000000006d0000
                                                ;   {poll_return}
  0x0000000002c3e560: retq   
  0x0000000002c3e561: hlt    
  0x0000000002c3e562: hlt    
  0x0000000002c3e563: hlt    
  0x0000000002c3e564: hlt    
  0x0000000002c3e565: hlt    
  0x0000000002c3e566: hlt    
  0x0000000002c3e567: hlt    
  0x0000000002c3e568: hlt    
  0x0000000002c3e569: hlt    
  0x0000000002c3e56a: hlt    
  0x0000000002c3e56b: hlt    
  0x0000000002c3e56c: hlt    
  0x0000000002c3e56d: hlt    
  0x0000000002c3e56e: hlt    
  0x0000000002c3e56f: hlt    
  0x0000000002c3e570: hlt    
  0x0000000002c3e571: hlt    
  0x0000000002c3e572: hlt    
  0x0000000002c3e573: hlt    
  0x0000000002c3e574: hlt    
  0x0000000002c3e575: hlt    
  0x0000000002c3e576: hlt    
  0x0000000002c3e577: hlt    
  0x0000000002c3e578: hlt    
  0x0000000002c3e579: hlt    
  0x0000000002c3e57a: hlt    
  0x0000000002c3e57b: hlt    
  0x0000000002c3e57c: hlt    
  0x0000000002c3e57d: hlt    
  0x0000000002c3e57e: hlt    
  0x0000000002c3e57f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c3e580: jmpq   0x0000000002b87ee0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002c3e585: callq  0x0000000002c3e58a
  0x0000000002c3e58a: subq   $0x5,(%rsp)
  0x0000000002c3e58f: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c3e594: hlt    
  0x0000000002c3e595: hlt    
  0x0000000002c3e596: hlt    
  0x0000000002c3e597: hlt    
<nmethod compile_id='19' compiler='C2' level='4' entry='0x0000000002c3e540' size='488' address='0x0000000002c3e410' relocation_offset='288' insts_offset='304' stub_offset='368' scopes_data_offset='400' scopes_pcs_offset='416' dependencies_offset='480' method='java/lang/Math min (II)I' bytes='11' count='7176' iicount='7176' stamp='0.439'/>
<writer thread='8488'/>
Decoding compiled method 0x0000000002c410d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019253e08} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x30]  (sp of caller)
  0x0000000002c41220: mov    0x8(%rdx),%r10d
  0x0000000002c41224: shl    $0x3,%r10
  0x0000000002c41228: cmp    %r10,%rax
  0x0000000002c4122b: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c41231: data16 xchg %ax,%ax
  0x0000000002c41234: nopl   0x0(%rax,%rax,1)
  0x0000000002c4123c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c41240: mov    %eax,-0x6000(%rsp)
  0x0000000002c41247: push   %rbp
  0x0000000002c41248: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x0000000002c4124c: test   %r8d,%r8d
  0x0000000002c4124f: jl     0x0000000002c412b9  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000002c41251: mov    0xc(%rdx),%r11d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x0000000002c41255: test   %r11d,%r11d
  0x0000000002c41258: je     0x0000000002c4127f
  0x0000000002c4125a: mov    0xc(%r12,%r11,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)

  0x0000000002c4125f: cmp    %ebp,%r8d
  0x0000000002c41262: jge    0x0000000002c412cd  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000000002c41264: cmp    %ebp,%r8d
  0x0000000002c41267: jae    0x0000000002c412a1
  0x0000000002c41269: lea    (%r12,%r11,8),%r10
  0x0000000002c4126d: movzwl 0x10(%r10,%r8,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x0000000002c41273: add    $0x20,%rsp
  0x0000000002c41277: pop    %rbp
  0x0000000002c41278: test   %eax,-0x257127e(%rip)        # 0x00000000006d0000
                                                ;   {poll_return}
  0x0000000002c4127e: retq   
  0x0000000002c4127f: mov    0x39c(%r15),%r11d
  0x0000000002c41286: test   %r11d,%r11d
  0x0000000002c41289: jne    0x0000000002c412e1
  0x0000000002c4128b: mov    %rdx,%rbp
  0x0000000002c4128e: mov    %r8d,0x4(%rsp)
  0x0000000002c41293: mov    $0xfffffff6,%edx
  0x0000000002c41298: data16 xchg %ax,%ax
  0x0000000002c4129b: callq  0x0000000002b757a0  ; OopMap{rbp=Oop off=128}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x0000000002c412a0: int3                      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)

  0x0000000002c412a1: mov    %rdx,%rbp
  0x0000000002c412a4: mov    %r8d,0x4(%rsp)
  0x0000000002c412a9: mov    %r11d,0x8(%rsp)
  0x0000000002c412ae: mov    $0xffffffe4,%edx
  0x0000000002c412b3: callq  0x0000000002b757a0  ; OopMap{rbp=Oop [8]=NarrowOop off=152}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x0000000002c412b8: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x0000000002c412b9: mov    %rdx,%rbp
  0x0000000002c412bc: mov    %r8d,0x4(%rsp)
  0x0000000002c412c1: mov    $0xffffff65,%edx
  0x0000000002c412c6: nop
  0x0000000002c412c7: callq  0x0000000002b757a0  ; OopMap{rbp=Oop off=172}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x0000000002c412cc: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000002c412cd: mov    %rdx,(%rsp)
  0x0000000002c412d1: mov    %r8d,0xc(%rsp)
  0x0000000002c412d6: mov    $0xffffff65,%edx
  0x0000000002c412db: callq  0x0000000002b757a0  ; OopMap{[0]=Oop off=192}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x0000000002c412e0: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000000002c412e1: mov    %rdx,%rbp
  0x0000000002c412e4: mov    %r8d,0x4(%rsp)
  0x0000000002c412e9: mov    $0xfffffff7,%edx
  0x0000000002c412ee: nop
  0x0000000002c412ef: callq  0x0000000002b757a0  ; OopMap{rbp=Oop off=212}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x0000000002c412f4: int3                      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)

  0x0000000002c412f5: hlt    
  0x0000000002c412f6: hlt    
  0x0000000002c412f7: hlt    
  0x0000000002c412f8: hlt    
  0x0000000002c412f9: hlt    
  0x0000000002c412fa: hlt    
  0x0000000002c412fb: hlt    
  0x0000000002c412fc: hlt    
  0x0000000002c412fd: hlt    
  0x0000000002c412fe: hlt    
  0x0000000002c412ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c41300: jmpq   0x0000000002b87ee0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002c41305: callq  0x0000000002c4130a
  0x0000000002c4130a: subq   $0x5,(%rsp)
  0x0000000002c4130f: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c41314: hlt    
  0x0000000002c41315: hlt    
  0x0000000002c41316: hlt    
  0x0000000002c41317: hlt    
<nmethod compile_id='20' compiler='C2' level='4' entry='0x0000000002c41220' size='984' address='0x0000000002c410d0' relocation_offset='288' insts_offset='336' stub_offset='560' scopes_data_offset='592' scopes_pcs_offset='688' dependencies_offset='976' method='java/lang/String charAt (I)C' bytes='29' count='153732' iicount='153732' stamp='0.442'/>
<writer thread='20984'/>
<task_queued compile_id='21' method='java/lang/String length ()I' bytes='6' count='31232' iicount='31232' stamp='0.442' comment='tiered' hot_count='31232'/>
<task_queued compile_id='22' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='22656' iicount='22656' stamp='0.442' comment='tiered' hot_count='22656'/>
<task_queued compile_id='23' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='22656' iicount='22656' stamp='0.442' comment='tiered' hot_count='22656'/>
<task_queued compile_id='24' method='java/lang/Character toUpperCase (C)C' bytes='6' count='256' iicount='256' level='3' stamp='0.442' comment='tiered' hot_count='256'/>
<writer thread='9088'/>
Decoding compiled method 0x0000000002c40b10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000000192ec978} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = char
  #           [sp+0x50]  (sp of caller)
  0x0000000002c40c80: mov    %eax,-0x6000(%rsp)
  0x0000000002c40c87: push   %rbp
  0x0000000002c40c88: sub    $0x40,%rsp
  0x0000000002c40c8c: movabs $0x19521590,%rsi   ;   {metadata(method data for {method} {0x00000000192ec978} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c40c96: mov    0xdc(%rsi),%edi
  0x0000000002c40c9c: add    $0x8,%edi
  0x0000000002c40c9f: mov    %edi,0xdc(%rsi)
  0x0000000002c40ca5: movabs $0x192ec970,%rsi   ;   {metadata({method} {0x00000000192ec978} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c40caf: and    $0x1ff8,%edi
  0x0000000002c40cb5: cmp    $0x0,%edi
  0x0000000002c40cb8: je     0x0000000002c40dec  ;*iload_0
                                                ; - java.lang.Character::toUpperCase@0 (line 6369)

  0x0000000002c40cbe: movabs $0x19521590,%rsi   ;   {metadata(method data for {method} {0x00000000192ec978} &apos;toUpperCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c40cc8: addq   $0x1,0x108(%rsi)
  0x0000000002c40cd0: movabs $0x195216e8,%rsi   ;   {metadata(method data for {method} {0x00000000192eca10} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c40cda: mov    0xdc(%rsi),%edi
  0x0000000002c40ce0: add    $0x8,%edi
  0x0000000002c40ce3: mov    %edi,0xdc(%rsi)
  0x0000000002c40ce9: movabs $0x192eca08,%rsi   ;   {metadata({method} {0x00000000192eca10} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c40cf3: and    $0x7ffff8,%edi
  0x0000000002c40cf9: cmp    $0x0,%edi
  0x0000000002c40cfc: je     0x0000000002c40e03
  0x0000000002c40d02: movabs $0x195216e8,%rsi   ;   {metadata(method data for {method} {0x00000000192eca10} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c40d0c: addq   $0x1,0x108(%rsi)
  0x0000000002c40d14: mov    %rdx,%rsi
  0x0000000002c40d17: mov    %rsi,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)

  0x0000000002c40d1a: mov    %esi,0x28(%rsp)
  0x0000000002c40d1e: nop
  0x0000000002c40d1f: callq  0x0000000002b76620  ; OopMap{off=164}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toUpperCase@1 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {static_call}
  0x0000000002c40d24: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002c40e1a
  0x0000000002c40d27: mov    %rax,%r8
  0x0000000002c40d2a: movabs $0x195216e8,%rdx   ;   {metadata(method data for {method} {0x00000000192eca10} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002c40d34: mov    0x8(%r8),%r8d
  0x0000000002c40d38: shl    $0x3,%r8
  0x0000000002c40d3c: cmp    0x120(%rdx),%r8
  0x0000000002c40d43: jne    0x0000000002c40d52
  0x0000000002c40d45: addq   $0x1,0x128(%rdx)
  0x0000000002c40d4d: jmpq   0x0000000002c40db8
  0x0000000002c40d52: cmp    0x130(%rdx),%r8
  0x0000000002c40d59: jne    0x0000000002c40d68
  0x0000000002c40d5b: addq   $0x1,0x138(%rdx)
  0x0000000002c40d63: jmpq   0x0000000002c40db8
  0x0000000002c40d68: cmpq   $0x0,0x120(%rdx)
  0x0000000002c40d73: jne    0x0000000002c40d8c
  0x0000000002c40d75: mov    %r8,0x120(%rdx)
  0x0000000002c40d7c: movq   $0x1,0x128(%rdx)
  0x0000000002c40d87: jmpq   0x0000000002c40db8
  0x0000000002c40d8c: cmpq   $0x0,0x130(%rdx)
  0x0000000002c40d97: jne    0x0000000002c40db0
  0x0000000002c40d99: mov    %r8,0x130(%rdx)
  0x0000000002c40da0: movq   $0x1,0x138(%rdx)
  0x0000000002c40dab: jmpq   0x0000000002c40db8
  0x0000000002c40db0: addq   $0x1,0x118(%rdx)
  0x0000000002c40db8: mov    0x28(%rsp),%r8d
  0x0000000002c40dbd: mov    %rax,%rdx          ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)

  0x0000000002c40dc0: nop
  0x0000000002c40dc1: nop
  0x0000000002c40dc2: nop
  0x0000000002c40dc3: nop
  0x0000000002c40dc4: nop
  0x0000000002c40dc5: movabs $0xffffffffffffffff,%rax
  0x0000000002c40dcf: callq  0x0000000002b763e0  ; OopMap{off=340}
                                                ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {virtual_call}
  0x0000000002c40dd4: and    $0xffff,%eax
  0x0000000002c40dda: and    $0xffff,%eax
  0x0000000002c40de0: add    $0x40,%rsp
  0x0000000002c40de4: pop    %rbp
  0x0000000002c40de5: test   %eax,-0x2570ceb(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c40deb: retq   
  0x0000000002c40dec: mov    %rsi,0x8(%rsp)
  0x0000000002c40df1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c40df9: callq  0x0000000002c31360  ; OopMap{off=382}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1 (line 6369)
                                                ;   {runtime_call}
  0x0000000002c40dfe: jmpq   0x0000000002c40cbe
  0x0000000002c40e03: mov    %rsi,0x8(%rsp)
  0x0000000002c40e08: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c40e10: callq  0x0000000002c31360  ; OopMap{off=405}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {runtime_call}
  0x0000000002c40e15: jmpq   0x0000000002c40d02
  0x0000000002c40e1a: callq  0x0000000002c2cc80  ; OopMap{rax=Oop off=415}
                                                ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5 (line 6398)
                                                ; - java.lang.Character::toUpperCase@1 (line 6369)
                                                ;   {runtime_call}
  0x0000000002c40e1f: nop
  0x0000000002c40e20: nop
  0x0000000002c40e21: mov    0x2a8(%r15),%rax
  0x0000000002c40e28: movabs $0x0,%r10
  0x0000000002c40e32: mov    %r10,0x2a8(%r15)
  0x0000000002c40e39: movabs $0x0,%r10
  0x0000000002c40e43: mov    %r10,0x2b0(%r15)
  0x0000000002c40e4a: add    $0x40,%rsp
  0x0000000002c40e4e: pop    %rbp
  0x0000000002c40e4f: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c40e54: hlt    
  0x0000000002c40e55: hlt    
  0x0000000002c40e56: hlt    
  0x0000000002c40e57: hlt    
  0x0000000002c40e58: hlt    
  0x0000000002c40e59: hlt    
  0x0000000002c40e5a: hlt    
  0x0000000002c40e5b: hlt    
  0x0000000002c40e5c: hlt    
  0x0000000002c40e5d: hlt    
  0x0000000002c40e5e: hlt    
  0x0000000002c40e5f: hlt    
[Stub Code]
  0x0000000002c40e60: nop                       ;   {no_reloc}
  0x0000000002c40e61: nop
  0x0000000002c40e62: nop
  0x0000000002c40e63: nop
  0x0000000002c40e64: nop
  0x0000000002c40e65: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c40e6f: jmpq   0x0000000002c40e6f  ;   {runtime_call}
  0x0000000002c40e74: nop
  0x0000000002c40e75: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c40e7f: jmpq   0x0000000002c40e7f  ;   {runtime_call}
[Exception Handler]
  0x0000000002c40e84: callq  0x0000000002c2eb20  ;   {runtime_call}
  0x0000000002c40e89: mov    %rsp,-0x28(%rsp)
  0x0000000002c40e8e: sub    $0x80,%rsp
  0x0000000002c40e95: mov    %rax,0x78(%rsp)
  0x0000000002c40e9a: mov    %rcx,0x70(%rsp)
  0x0000000002c40e9f: mov    %rdx,0x68(%rsp)
  0x0000000002c40ea4: mov    %rbx,0x60(%rsp)
  0x0000000002c40ea9: mov    %rbp,0x50(%rsp)
  0x0000000002c40eae: mov    %rsi,0x48(%rsp)
  0x0000000002c40eb3: mov    %rdi,0x40(%rsp)
  0x0000000002c40eb8: mov    %r8,0x38(%rsp)
  0x0000000002c40ebd: mov    %r9,0x30(%rsp)
  0x0000000002c40ec2: mov    %r10,0x28(%rsp)
  0x0000000002c40ec7: mov    %r11,0x20(%rsp)
  0x0000000002c40ecc: mov    %r12,0x18(%rsp)
  0x0000000002c40ed1: mov    %r13,0x10(%rsp)
  0x0000000002c40ed6: mov    %r14,0x8(%rsp)
  0x0000000002c40edb: mov    %r15,(%rsp)
  0x0000000002c40edf: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c40ee9: movabs $0x2c40e89,%rdx    ;   {internal_word}
  0x0000000002c40ef3: mov    %rsp,%r8
  0x0000000002c40ef6: and    $0xfffffffffffffff0,%rsp
  0x0000000002c40efa: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c40eff: hlt    
[Deopt Handler Code]
  0x0000000002c40f00: movabs $0x2c40f00,%r10    ;   {section_word}
  0x0000000002c40f0a: push   %r10
  0x0000000002c40f0c: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c40f11: hlt    
  0x0000000002c40f12: hlt    
  0x0000000002c40f13: hlt    
  0x0000000002c40f14: hlt    
  0x0000000002c40f15: hlt    
  0x0000000002c40f16: hlt    
  0x0000000002c40f17: hlt    
<nmethod compile_id='24' compiler='C1' level='3' entry='0x0000000002c40c80' size='1304' address='0x0000000002c40b10' relocation_offset='288' insts_offset='368' stub_offset='848' scopes_data_offset='1048' scopes_pcs_offset='1120' dependencies_offset='1280' nul_chk_table_offset='1288' method='java/lang/Character toUpperCase (C)C' bytes='6' count='256' iicount='256' stamp='0.445'/>
<writer thread='18064'/>
Decoding compiled method 0x0000000002c45990:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019253cb8} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000002c45ac0: mov    0x8(%rdx),%r10d
  0x0000000002c45ac4: shl    $0x3,%r10
  0x0000000002c45ac8: cmp    %r10,%rax
  0x0000000002c45acb: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c45ad1: data16 xchg %ax,%ax
  0x0000000002c45ad4: nopl   0x0(%rax,%rax,1)
  0x0000000002c45adc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c45ae0: mov    %eax,-0x6000(%rsp)
  0x0000000002c45ae7: push   %rbp
  0x0000000002c45ae8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)

  0x0000000002c45aec: mov    0xc(%rdx),%r10d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x0000000002c45af0: test   %r10d,%r10d
  0x0000000002c45af3: je     0x0000000002c45b06
  0x0000000002c45af5: mov    0xc(%r12,%r10,8),%eax
  0x0000000002c45afa: add    $0x10,%rsp
  0x0000000002c45afe: pop    %rbp
  0x0000000002c45aff: test   %eax,-0x2575b05(%rip)        # 0x00000000006d0000
                                                ;   {poll_return}
  0x0000000002c45b05: retq   
  0x0000000002c45b06: mov    0x39c(%r15),%r11d
  0x0000000002c45b0d: test   %r11d,%r11d
  0x0000000002c45b10: jne    0x0000000002c45b21
  0x0000000002c45b12: mov    %rdx,%rbp
  0x0000000002c45b15: mov    $0xfffffff6,%edx
  0x0000000002c45b1a: nop
  0x0000000002c45b1b: callq  0x0000000002b757a0  ; OopMap{rbp=Oop off=96}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x0000000002c45b20: int3   
  0x0000000002c45b21: mov    %rdx,%rbp
  0x0000000002c45b24: mov    $0xfffffff7,%edx
  0x0000000002c45b29: xchg   %ax,%ax
  0x0000000002c45b2b: callq  0x0000000002b757a0  ; OopMap{rbp=Oop off=112}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x0000000002c45b30: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)

  0x0000000002c45b31: hlt    
  0x0000000002c45b32: hlt    
  0x0000000002c45b33: hlt    
  0x0000000002c45b34: hlt    
  0x0000000002c45b35: hlt    
  0x0000000002c45b36: hlt    
  0x0000000002c45b37: hlt    
  0x0000000002c45b38: hlt    
  0x0000000002c45b39: hlt    
  0x0000000002c45b3a: hlt    
  0x0000000002c45b3b: hlt    
  0x0000000002c45b3c: hlt    
  0x0000000002c45b3d: hlt    
  0x0000000002c45b3e: hlt    
  0x0000000002c45b3f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c45b40: jmpq   0x0000000002b87ee0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002c45b45: callq  0x0000000002c45b4a
  0x0000000002c45b4a: subq   $0x5,(%rsp)
  0x0000000002c45b4f: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c45b54: hlt    
  0x0000000002c45b55: hlt    
  0x0000000002c45b56: hlt    
  0x0000000002c45b57: hlt    
<nmethod compile_id='21' compiler='C2' level='4' entry='0x0000000002c45ac0' size='616' address='0x0000000002c45990' relocation_offset='288' insts_offset='304' stub_offset='432' scopes_data_offset='464' scopes_pcs_offset='496' dependencies_offset='608' method='java/lang/String length ()I' bytes='6' count='31354' iicount='31354' stamp='0.446'/>
Decoding compiled method 0x0000000002c456d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019428418} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x30]  (sp of caller)
  0x0000000002c45800: mov    0x8(%rdx),%r10d
  0x0000000002c45804: shl    $0x3,%r10
  0x0000000002c45808: cmp    %r10,%rax
  0x0000000002c4580b: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c45811: data16 xchg %ax,%ax
  0x0000000002c45814: nopl   0x0(%rax,%rax,1)
  0x0000000002c4581c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c45820: mov    %eax,-0x6000(%rsp)
  0x0000000002c45827: push   %rbp
  0x0000000002c45828: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)

  0x0000000002c4582c: mov    %rdx,%r10
  0x0000000002c4582f: mov    %r8d,%r11d
  0x0000000002c45832: movzwl %r11w,%r11d        ;*i2c  ; - java.lang.CharacterDataLatin1::getProperties@1 (line 71)

  0x0000000002c45836: cmp    $0x100,%r11d
  0x0000000002c4583d: jae    0x0000000002c4585a
  0x0000000002c4583f: movabs $0x7807912d0,%r10  ;   {oop([I)}
  0x0000000002c45849: mov    0x10(%r10,%r11,4),%eax
  0x0000000002c4584e: add    $0x20,%rsp
  0x0000000002c45852: pop    %rbp
  0x0000000002c45853: test   %eax,-0x2575859(%rip)        # 0x00000000006d0000
                                                ;   {poll_return}
  0x0000000002c45859: retq   
  0x0000000002c4585a: mov    $0xffffffe4,%edx
  0x0000000002c4585f: mov    %r10,%rbp
  0x0000000002c45862: mov    %r8d,(%rsp)
  0x0000000002c45866: mov    %r11d,0x8(%rsp)
  0x0000000002c4586b: callq  0x0000000002b757a0  ; OopMap{rbp=Oop off=112}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000002c45870: int3                      ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x0000000002c45871: hlt    
  0x0000000002c45872: hlt    
  0x0000000002c45873: hlt    
  0x0000000002c45874: hlt    
  0x0000000002c45875: hlt    
  0x0000000002c45876: hlt    
  0x0000000002c45877: hlt    
  0x0000000002c45878: hlt    
  0x0000000002c45879: hlt    
  0x0000000002c4587a: hlt    
  0x0000000002c4587b: hlt    
  0x0000000002c4587c: hlt    
  0x0000000002c4587d: hlt    
  0x0000000002c4587e: hlt    
  0x0000000002c4587f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c45880: jmpq   0x0000000002b87ee0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002c45885: callq  0x0000000002c4588a
  0x0000000002c4588a: subq   $0x5,(%rsp)
  0x0000000002c4588f: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c45894: hlt    
  0x0000000002c45895: hlt    
  0x0000000002c45896: hlt    
  0x0000000002c45897: hlt    
<nmethod compile_id='23' compiler='C2' level='4' entry='0x0000000002c45800' size='616' address='0x0000000002c456d0' relocation_offset='288' insts_offset='304' stub_offset='432' scopes_data_offset='472' scopes_pcs_offset='512' dependencies_offset='608' oops_offset='456' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='22771' iicount='22771' stamp='0.447'/>
<writer thread='20984'/>
<task_queued compile_id='25' method='java/lang/CharacterDataLatin1 toUpperCase (I)I' bytes='53' count='256' iicount='256' level='3' stamp='0.447' comment='tiered' hot_count='256'/>
<writer thread='8488'/>
Decoding compiled method 0x0000000002c49b10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000019427cf8} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000002c49c40: mov    %eax,-0x6000(%rsp)
  0x0000000002c49c47: push   %rbp
  0x0000000002c49c48: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)

  0x0000000002c49c4c: mov    %edx,%r11d
  0x0000000002c49c4f: shr    $0x8,%r11d         ;*iushr
                                                ; - java.lang.CharacterData::of@3 (line 77)

  0x0000000002c49c53: test   %r11d,%r11d
  0x0000000002c49c56: jne    0x0000000002c49c6e  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x0000000002c49c58: movabs $0x7807912c0,%rax  ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c49c62: add    $0x20,%rsp
  0x0000000002c49c66: pop    %rbp
  0x0000000002c49c67: test   %eax,-0x2579c6d(%rip)        # 0x00000000006d0000
                                                ;   {poll_return}
  0x0000000002c49c6d: retq   
  0x0000000002c49c6e: mov    %edx,%ebp
  0x0000000002c49c70: mov    %r11d,(%rsp)
  0x0000000002c49c74: mov    $0xffffff65,%edx
  0x0000000002c49c79: xchg   %ax,%ax
  0x0000000002c49c7b: callq  0x0000000002b757a0  ; OopMap{off=64}
                                                ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)
                                                ;   {runtime_call}
  0x0000000002c49c80: int3                      ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x0000000002c49c81: hlt    
  0x0000000002c49c82: hlt    
  0x0000000002c49c83: hlt    
  0x0000000002c49c84: hlt    
  0x0000000002c49c85: hlt    
  0x0000000002c49c86: hlt    
  0x0000000002c49c87: hlt    
  0x0000000002c49c88: hlt    
  0x0000000002c49c89: hlt    
  0x0000000002c49c8a: hlt    
  0x0000000002c49c8b: hlt    
  0x0000000002c49c8c: hlt    
  0x0000000002c49c8d: hlt    
  0x0000000002c49c8e: hlt    
  0x0000000002c49c8f: hlt    
  0x0000000002c49c90: hlt    
  0x0000000002c49c91: hlt    
  0x0000000002c49c92: hlt    
  0x0000000002c49c93: hlt    
  0x0000000002c49c94: hlt    
  0x0000000002c49c95: hlt    
  0x0000000002c49c96: hlt    
  0x0000000002c49c97: hlt    
  0x0000000002c49c98: hlt    
  0x0000000002c49c99: hlt    
  0x0000000002c49c9a: hlt    
  0x0000000002c49c9b: hlt    
  0x0000000002c49c9c: hlt    
  0x0000000002c49c9d: hlt    
  0x0000000002c49c9e: hlt    
  0x0000000002c49c9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c49ca0: jmpq   0x0000000002b87ee0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002c49ca5: callq  0x0000000002c49caa
  0x0000000002c49caa: subq   $0x5,(%rsp)
  0x0000000002c49caf: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c49cb4: hlt    
  0x0000000002c49cb5: hlt    
  0x0000000002c49cb6: hlt    
  0x0000000002c49cb7: hlt    
<nmethod compile_id='22' compiler='C2' level='4' entry='0x0000000002c49c40' size='600' address='0x0000000002c49b10' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='448' scopes_pcs_offset='480' dependencies_offset='592' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='23020' iicount='23020' stamp='0.448'/>
<writer thread='9088'/>
Decoding compiled method 0x0000000002c4af10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019428cb8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000002c4b080: mov    0x8(%rdx),%r10d
  0x0000000002c4b084: shl    $0x3,%r10
  0x0000000002c4b088: cmp    %rax,%r10
  0x0000000002c4b08b: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c4b091: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c4b09c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c4b0a0: mov    %eax,-0x6000(%rsp)
  0x0000000002c4b0a7: push   %rbp
  0x0000000002c4b0a8: sub    $0x40,%rsp
  0x0000000002c4b0ac: movabs $0x19521870,%rax   ;   {metadata(method data for {method} {0x0000000019428cb8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c4b0b6: mov    0xdc(%rax),%esi
  0x0000000002c4b0bc: add    $0x8,%esi
  0x0000000002c4b0bf: mov    %esi,0xdc(%rax)
  0x0000000002c4b0c5: movabs $0x19428cb0,%rax   ;   {metadata({method} {0x0000000019428cb8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c4b0cf: and    $0x1ff8,%esi
  0x0000000002c4b0d5: cmp    $0x0,%esi
  0x0000000002c4b0d8: je     0x0000000002c4b250  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@0 (line 145)

  0x0000000002c4b0de: mov    %rdx,%rax
  0x0000000002c4b0e1: movabs $0x19521870,%rsi   ;   {metadata(method data for {method} {0x0000000019428cb8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c4b0eb: movabs $0x7c0039428,%r10  ;   {metadata(&apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c4b0f5: mov    %r10,0x110(%rsi)
  0x0000000002c4b0fc: addq   $0x1,0x118(%rsi)
  0x0000000002c4b104: movabs $0x1942bc58,%rax   ;   {metadata(method data for {method} {0x0000000019428418} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c4b10e: mov    0xdc(%rax),%esi
  0x0000000002c4b114: add    $0x8,%esi
  0x0000000002c4b117: mov    %esi,0xdc(%rax)
  0x0000000002c4b11d: movabs $0x19428410,%rax   ;   {metadata({method} {0x0000000019428418} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c4b127: and    $0x7ffff8,%esi
  0x0000000002c4b12d: cmp    $0x0,%esi
  0x0000000002c4b130: je     0x0000000002c4b267
  0x0000000002c4b136: mov    %r8,%rax
  0x0000000002c4b139: and    $0xffff,%eax
  0x0000000002c4b13f: movabs $0x7807912d0,%rsi  ;   {oop([I)}
  0x0000000002c4b149: movslq %eax,%rdi
  0x0000000002c4b14c: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x0000000002c4b27e
  0x0000000002c4b14f: jae    0x0000000002c4b288
  0x0000000002c4b155: mov    0x10(%rsi,%rdi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)

  0x0000000002c4b159: mov    %rax,%rsi
  0x0000000002c4b15c: and    $0x10000,%esi
  0x0000000002c4b162: cmp    $0x0,%esi
  0x0000000002c4b165: movabs $0x19521870,%rsi   ;   {metadata(method data for {method} {0x0000000019428cb8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c4b16f: movabs $0x138,%rdi
  0x0000000002c4b179: je     0x0000000002c4b189
  0x0000000002c4b17f: movabs $0x148,%rdi
  0x0000000002c4b189: mov    (%rsi,%rdi,1),%rbx
  0x0000000002c4b18d: lea    0x1(%rbx),%rbx
  0x0000000002c4b191: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002c4b195: je     0x0000000002c4b241  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@12 (line 148)

  0x0000000002c4b19b: mov    %rax,%rsi
  0x0000000002c4b19e: and    $0x7fc0000,%esi
  0x0000000002c4b1a4: cmp    $0x7fc0000,%esi
  0x0000000002c4b1aa: movabs $0x19521870,%rsi   ;   {metadata(method data for {method} {0x0000000019428cb8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c4b1b4: movabs $0x158,%rdi
  0x0000000002c4b1be: je     0x0000000002c4b1ce
  0x0000000002c4b1c4: movabs $0x168,%rdi
  0x0000000002c4b1ce: mov    (%rsi,%rdi,1),%rbx
  0x0000000002c4b1d2: lea    0x1(%rbx),%rbx
  0x0000000002c4b1d6: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002c4b1da: jne    0x0000000002c4b228  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@21 (line 149)

  0x0000000002c4b1e0: cmp    $0xb5,%r8d
  0x0000000002c4b1e7: movabs $0x19521870,%rax   ;   {metadata(method data for {method} {0x0000000019428cb8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c4b1f1: movabs $0x190,%rsi
  0x0000000002c4b1fb: jne    0x0000000002c4b20b
  0x0000000002c4b201: movabs $0x1a0,%rsi
  0x0000000002c4b20b: mov    (%rax,%rsi,1),%rdi
  0x0000000002c4b20f: lea    0x1(%rdi),%rdi
  0x0000000002c4b213: mov    %rdi,(%rax,%rsi,1)
  0x0000000002c4b217: jne    0x0000000002c4b241  ;*if_icmpne
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@44 (line 152)

  0x0000000002c4b21d: mov    $0x39c,%r8d
  0x0000000002c4b223: jmpq   0x0000000002c4b241  ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@51 (line 156)

  0x0000000002c4b228: shl    $0x5,%eax
  0x0000000002c4b22b: sar    $0x17,%eax
  0x0000000002c4b22e: sub    %eax,%r8d
  0x0000000002c4b231: movabs $0x19521870,%rax   ;   {metadata(method data for {method} {0x0000000019428cb8} &apos;toUpperCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002c4b23b: incl   0x178(%rax)        ;*goto
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@37 (line 152)

  0x0000000002c4b241: mov    %r8,%rax
  0x0000000002c4b244: add    $0x40,%rsp
  0x0000000002c4b248: pop    %rbp
  0x0000000002c4b249: test   %eax,-0x257b14f(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c4b24f: retq   
  0x0000000002c4b250: mov    %rax,0x8(%rsp)
  0x0000000002c4b255: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c4b25d: callq  0x0000000002c31360  ; OopMap{rdx=Oop off=482}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@-1 (line 145)
                                                ;   {runtime_call}
  0x0000000002c4b262: jmpq   0x0000000002c4b0de
  0x0000000002c4b267: mov    %rax,0x8(%rsp)
  0x0000000002c4b26c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c4b274: callq  0x0000000002c31360  ; OopMap{rdx=Oop off=505}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x0000000002c4b279: jmpq   0x0000000002c4b136
  0x0000000002c4b27e: callq  0x0000000002c2cc80  ; OopMap{rdx=Oop rsi=Oop off=515}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x0000000002c4b283: callq  0x0000000002c2cc80  ; OopMap{rdx=Oop rsi=Oop off=520}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x0000000002c4b288: mov    %rax,(%rsp)
  0x0000000002c4b28c: callq  0x0000000002b9f300  ; OopMap{rdx=Oop rsi=Oop off=529}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4 (line 146)
                                                ;   {runtime_call}
  0x0000000002c4b291: nop
  0x0000000002c4b292: nop
  0x0000000002c4b293: mov    0x2a8(%r15),%rax
  0x0000000002c4b29a: movabs $0x0,%r10
  0x0000000002c4b2a4: mov    %r10,0x2a8(%r15)
  0x0000000002c4b2ab: movabs $0x0,%r10
  0x0000000002c4b2b5: mov    %r10,0x2b0(%r15)
  0x0000000002c4b2bc: add    $0x40,%rsp
  0x0000000002c4b2c0: pop    %rbp
  0x0000000002c4b2c1: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c4b2c6: hlt    
  0x0000000002c4b2c7: hlt    
  0x0000000002c4b2c8: hlt    
  0x0000000002c4b2c9: hlt    
  0x0000000002c4b2ca: hlt    
  0x0000000002c4b2cb: hlt    
  0x0000000002c4b2cc: hlt    
  0x0000000002c4b2cd: hlt    
  0x0000000002c4b2ce: hlt    
  0x0000000002c4b2cf: hlt    
  0x0000000002c4b2d0: hlt    
  0x0000000002c4b2d1: hlt    
  0x0000000002c4b2d2: hlt    
  0x0000000002c4b2d3: hlt    
  0x0000000002c4b2d4: hlt    
  0x0000000002c4b2d5: hlt    
  0x0000000002c4b2d6: hlt    
  0x0000000002c4b2d7: hlt    
  0x0000000002c4b2d8: hlt    
  0x0000000002c4b2d9: hlt    
  0x0000000002c4b2da: hlt    
  0x0000000002c4b2db: hlt    
  0x0000000002c4b2dc: hlt    
  0x0000000002c4b2dd: hlt    
  0x0000000002c4b2de: hlt    
  0x0000000002c4b2df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c4b2e0: callq  0x0000000002c2eb20  ;   {no_reloc}
  0x0000000002c4b2e5: mov    %rsp,-0x28(%rsp)
  0x0000000002c4b2ea: sub    $0x80,%rsp
  0x0000000002c4b2f1: mov    %rax,0x78(%rsp)
  0x0000000002c4b2f6: mov    %rcx,0x70(%rsp)
  0x0000000002c4b2fb: mov    %rdx,0x68(%rsp)
  0x0000000002c4b300: mov    %rbx,0x60(%rsp)
  0x0000000002c4b305: mov    %rbp,0x50(%rsp)
  0x0000000002c4b30a: mov    %rsi,0x48(%rsp)
  0x0000000002c4b30f: mov    %rdi,0x40(%rsp)
  0x0000000002c4b314: mov    %r8,0x38(%rsp)
  0x0000000002c4b319: mov    %r9,0x30(%rsp)
  0x0000000002c4b31e: mov    %r10,0x28(%rsp)
  0x0000000002c4b323: mov    %r11,0x20(%rsp)
  0x0000000002c4b328: mov    %r12,0x18(%rsp)
  0x0000000002c4b32d: mov    %r13,0x10(%rsp)
  0x0000000002c4b332: mov    %r14,0x8(%rsp)
  0x0000000002c4b337: mov    %r15,(%rsp)
  0x0000000002c4b33b: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c4b345: movabs $0x2c4b2e5,%rdx    ;   {internal_word}
  0x0000000002c4b34f: mov    %rsp,%r8
  0x0000000002c4b352: and    $0xfffffffffffffff0,%rsp
  0x0000000002c4b356: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c4b35b: hlt    
[Deopt Handler Code]
  0x0000000002c4b35c: movabs $0x2c4b35c,%r10    ;   {section_word}
  0x0000000002c4b366: push   %r10
  0x0000000002c4b368: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c4b36d: hlt    
  0x0000000002c4b36e: hlt    
  0x0000000002c4b36f: hlt    
<nmethod compile_id='25' compiler='C1' level='3' entry='0x0000000002c4b080' size='1520' address='0x0000000002c4af10' relocation_offset='288' insts_offset='368' stub_offset='976' scopes_data_offset='1144' scopes_pcs_offset='1264' dependencies_offset='1488' nul_chk_table_offset='1496' method='java/lang/CharacterDataLatin1 toUpperCase (I)I' bytes='53' count='504' iicount='504' stamp='0.452'/>
<writer thread='20984'/>
<task_queued compile_id='26' method='java/util/TreeMap leftOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='1792' iicount='1792' level='3' stamp='0.452' comment='tiered' hot_count='1792'/>
<task_queued compile_id='27' method='java/util/TreeMap setColor (Ljava/util/TreeMap$Entry;Z)V' bytes='10' count='2432' iicount='2432' level='3' stamp='0.453' comment='tiered' hot_count='2432'/>
<writer thread='9088'/>
Decoding compiled method 0x0000000002c4ab10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000019382ba8} &apos;leftOf&apos; &apos;(Ljava/util/Tree
<writer thread='20984'/>
[Loaded sun.usagetracker.UsageTrackerClient$3 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
<writer thread='9088'/>
Map$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;
  # parm0:    rdx:rdx   = &apos;java/util/TreeMap$Entry&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002c4ac60: mov    %eax,-0x6000(%rsp)
  0x0000000002c4ac67: push   %rbp
  0x0000000002c4ac68: sub    $0x30,%rsp
  0x0000000002c4ac6c: movabs $0x19387740,%rax   ;   {metadata(method data for {method} {0x0000000019382ba8} &apos;leftOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002c4ac76: mov    0xdc(%rax),%esi
  0x0000000002c4ac7c: add    $0x8,%esi
  0x0000000002c4ac7f: mov    %esi,0xdc(%rax)
  0x0000000002c4ac85: movabs $0x19382ba0,%rax   ;   {metadata({method} {0x0000000019382ba8} &apos;leftOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002c4ac8f: and    $0x1ff8,%esi
  0x0000000002c4ac95: cmp    $0x0,%esi
  0x0000000002c4ac98: je     0x0000000002c4ad11  ;*aload_0
                                                ; - java.util.TreeMap::leftOf@0 (line 2213)

  0x0000000002c4ac9e: cmp    $0x0,%rdx
  0x0000000002c4aca2: movabs $0x19387740,%rax   ;   {metadata(method data for {method} {0x0000000019382ba8} &apos;leftOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002c4acac: movabs $0x108,%rsi
  0x0000000002c4acb6: jne    0x0000000002c4acc6
  0x0000000002c4acbc: movabs $0x118,%rsi
  0x0000000002c4acc6: mov    (%rax,%rsi,1),%rdi
  0x0000000002c4acca: lea    0x1(%rdi),%rdi
  0x0000000002c4acce: mov    %rdi,(%rax,%rsi,1)
  0x0000000002c4acd2: jne    0x0000000002c4acfe  ;*ifnonnull
                                                ; - java.util.TreeMap::leftOf@1 (line 2213)

  0x0000000002c4acd8: movabs $0x19387740,%rax   ;   {metadata(method data for {method} {0x0000000019382ba8} &apos;leftOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002c4ace2: incl   0x128(%rax)
  0x0000000002c4ace8: movabs $0x0,%rax          ;*goto
                                                ; - java.util.TreeMap::leftOf@5 (line 2213)
                                                ;   {oop(NULL)}
  0x0000000002c4acf2: add    $0x30,%rsp
  0x0000000002c4acf6: pop    %rbp
  0x0000000002c4acf7: test   %eax,-0x257abfd(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c4acfd: retq   
  0x0000000002c4acfe: mov    0x18(%rdx),%eax    ; implicit exception: dispatches to 0x0000000002c4ad28
  0x0000000002c4ad01: shl    $0x3,%rax          ;*getfield left
                                                ; - java.util.TreeMap::leftOf@9 (line 2213)

  0x0000000002c4ad05: add    $0x30,%rsp
  0x0000000002c4ad09: pop    %rbp
  0x0000000002c4ad0a: test   %eax,-0x257ac10(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c4ad10: retq   
  0x0000000002c4ad11: mov    %rax,0x8(%rsp)
  0x0000000002c4ad16: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c4ad1e: callq  0x0000000002c31360  ; OopMap{rdx=Oop off=195}
                                                ;*synchronization entry
                                                ; - java.util.TreeMap::leftOf@-1 (line 2213)
                                                ;   {runtime_call}
  0x0000000002c4ad23: jmpq   0x0000000002c4ac9e
  0x0000000002c4ad28: callq  0x0000000002c2cc80  ; OopMap{rdx=Oop off=205}
                                                ;*getfield left
                                                ; - java.util.TreeMap::leftOf@9 (line 2213)
                                                ;   {runtime_call}
  0x0000000002c4ad2d: nop
  0x0000000002c4ad2e: nop
  0x0000000002c4ad2f: mov    0x2a8(%r15),%rax
  0x0000000002c4ad36: movabs $0x0,%r10
  0x0000000002c4ad40: mov    %r10,0x2a8(%r15)
  0x0000000002c4ad47: movabs $0x0,%r10
  0x0000000002c4ad51: mov    %r10,0x2b0(%r15)
  0x0000000002c4ad58: add    $0x30,%rsp
  0x0000000002c4ad5c: pop    %rbp
  0x0000000002c4ad5d: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c4ad62: hlt    
  0x0000000002c4ad63: hlt    
  0x0000000002c4ad64: hlt    
  0x0000000002c4ad65: hlt    
  0x0000000002c4ad66: hlt    
  0x0000000002c4ad67: hlt    
  0x0000000002c4ad68: hlt    
  0x0000000002c4ad69: hlt    
  0x0000000002c4ad6a: hlt    
  0x0000000002c4ad6b: hlt    
  0x0000000002c4ad6c: hlt    
  0x0000000002c4ad6d: hlt    
  0x0000000002c4ad6e: hlt    
  0x0000000002c4ad6f: hlt    
  0x0000000002c4ad70: hlt    
  0x0000000002c4ad71: hlt    
  0x0000000002c4ad72: hlt    
  0x0000000002c4ad73: hlt    
  0x0000000002c4ad74: hlt    
  0x0000000002c4ad75: hlt    
  0x0000000002c4ad76: hlt    
  0x0000000002c4ad77: hlt    
  0x0000000002c4ad78: hlt    
  0x0000000002c4ad79: hlt    
  0x0000000002c4ad7a: hlt    
  0x0000000002c4ad7b: hlt    
  0x0000000002c4ad7c: hlt    
  0x0000000002c4ad7d: hlt    
  0x0000000002c4ad7e: hlt    
  0x0000000002c4ad7f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c4ad80: callq  0x0000000002c2eb20  ;   {no_reloc}
  0x0000000002c4ad85: mov    %rsp,-0x28(%rsp)
  0x0000000002c4ad8a: sub    $0x80,%rsp
  0x0000000002c4ad91: mov    %rax,0x78(%rsp)
  0x0000000002c4ad96: mov    %rcx,0x70(%rsp)
  0x0000000002c4ad9b: mov    %rdx,0x68(%rsp)
  0x0000000002c4ada0: mov    %rbx,0x60(%rsp)
  0x0000000002c4ada5: mov    %rbp,0x50(%rsp)
  0x0000000002c4adaa: mov    %rsi,0x48(%rsp)
  0x0000000002c4adaf: mov    %rdi,0x40(%rsp)
  0x0000000002c4adb4: mov    %r8,0x38(%rsp)
  0x0000000002c4adb9: mov    %r9,0x30(%rsp)
  0x0000000002c4adbe: mov    %r10,0x28(%rsp)
  0x0000000002c4adc3: mov    %r11,0x20(%rsp)
  0x0000000002c4adc8: mov    %r12,0x18(%rsp)
  0x0000000002c4adcd: mov    %r13,0x10(%rsp)
  0x0000000002c4add2: mov    %r14,0x8(%rsp)
  0x0000000002c4add7: mov    %r15,(%rsp)
  0x0000000002c4addb: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c4ade5: movabs $0x2c4ad85,%rdx    ;   {internal_word}
  0x0000000002c4adef: mov    %rsp,%r8
  0x0000000002c4adf2: and    $0xfffffffffffffff0,%rsp
  0x0000000002c4adf6: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c4adfb: hlt    
[Deopt Handler Code]
  0x0000000002c4adfc: movabs $0x2c4adfc,%r10    ;   {section_word}
  0x0000000002c4ae06: push   %r10
  0x0000000002c4ae08: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c4ae0d: hlt    
  0x0000000002c4ae0e: hlt    
  0x0000000002c4ae0f: hlt    
<nmethod compile_id='26' compiler='C1' level='3' entry='0x0000000002c4ac60' size='968' address='0x0000000002c4ab10' relocation_offset='288' insts_offset='336' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='816' dependencies_offset='944' nul_chk_table_offset='952' method='java/util/TreeMap leftOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='1801' iicount='1801' stamp='0.455'/>
Decoding compiled method 0x0000000002c4a750:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000019382b08} &apos;setColor&apos; &apos;(Ljava/util/TreeMap$Entry;Z)V&apos; in &apos;java/util/TreeMap&apos;
  # parm0:    rdx:rdx   = &apos;java/util/TreeMap$Entry&apos;
  # parm1:    r8        = boolean
  #           [sp+0x40]  (sp of caller)
  0x0000000002c4a8a0: mov    %eax,-0x6000(%rsp)
  0x0000000002c4a8a7: push   %rbp
  0x0000000002c4a8a8: sub    $0x30,%rsp
  0x0000000002c4a8ac: movabs $0x193875f8,%rsi   ;   {metadata(method data for {method} {0x0000000019382b08} &apos;setColor&apos; &apos;(Ljava/util/TreeMap$Entry;Z)V&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002c4a8b6: mov    0xdc(%rsi),%edi
  0x0000000002c4a8bc: add    $0x8,%edi
  0x0000000002c4a8bf: mov    %edi,0xdc(%rsi)
  0x0000000002c4a8c5: movabs $0x19382b00,%rsi   ;   {metadata({method} {0x0000000019382b08} &apos;setColor&apos; &apos;(Ljava/util/TreeMap$Entry;Z)V&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002c4a8cf: and    $0x1ff8,%edi
  0x0000000002c4a8d5: cmp    $0x0,%edi
  0x0000000002c4a8d8: je     0x0000000002c4a92e  ;*aload_0
                                                ; - java.util.TreeMap::setColor@0 (line 2208)

  0x0000000002c4a8de: cmp    $0x0,%rdx
  0x0000000002c4a8e2: movabs $0x193875f8,%rsi   ;   {metadata(method data for {method} {0x0000000019382b08} &apos;setColor&apos; &apos;(Ljava/util/TreeMap$Entry;Z)V&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002c4a8ec: movabs $0x108,%rdi
  0x0000000002c4a8f6: je     0x0000000002c4a906
  0x0000000002c4a8fc: movabs $0x118,%rdi
  0x0000000002c4a906: mov    (%rsi,%rdi,1),%rbx
  0x0000000002c4a90a: lea    0x1(%rbx),%rbx
  0x0000000002c4a90e: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002c4a912: je     0x0000000002c4a922  ;*ifnull
                                                ; - java.util.TreeMap::setColor@1 (line 2208)

  0x0000000002c4a918: mov    %r8,%rsi
  0x0000000002c4a91b: and    $0x1,%esi
  0x0000000002c4a91e: mov    %sil,0xc(%rdx)     ;*putfield color
                                                ; - java.util.TreeMap::setColor@6 (line 2209)
                                                ; implicit exception: dispatches to 0x0000000002c4a942
  0x0000000002c4a922: add    $0x30,%rsp
  0x0000000002c4a926: pop    %rbp
  0x0000000002c4a927: test   %eax,-0x257a82d(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c4a92d: retq   
  0x0000000002c4a92e: mov    %rsi,0x8(%rsp)
  0x0000000002c4a933: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c4a93b: callq  0x0000000002c31360  ; OopMap{rdx=Oop off=160}
                                                ;*synchronization entry
                                                ; - java.util.TreeMap::setColor@-1 (line 2208)
                                                ;   {runtime_call}
  0x0000000002c4a940: jmp    0x0000000002c4a8de
  0x0000000002c4a942: callq  0x0000000002c2cc80  ; OopMap{rdx=Oop off=167}
                                                ;*putfield color
                                                ; - java.util.TreeMap::setColor@6 (line 2209)
                                                ;   {runtime_call}
  0x0000000002c4a947: nop
  0x0000000002c4a948: nop
  0x0000000002c4a949: mov    0x2a8(%r15),%rax
  0x0000000002c4a950: movabs $0x0,%r10
  0x0000000002c4a95a: mov    %r10,0x2a8(%r15)
  0x0000000002c4a961: movabs $0x0,%r10
  0x0000000002c4a96b: mov    %r10,0x2b0(%r15)
  0x0000000002c4a972: add    $0x30,%rsp
  0x0000000002c4a976: pop    %rbp
  0x0000000002c4a977: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c4a97c: hlt    
  0x0000000002c4a97d: hlt    
  0x0000000002c4a97e: hlt    
  0x0000000002c4a97f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c4a980: callq  0x0000000002c2eb20  ;   {no_reloc}
  0x0000000002c4a985: mov    %rsp,-0x28(%rsp)
  0x0000000002c4a98a: sub    $0x80,%rsp
  0x0000000002c4a991: mov    %rax,0x78(%rsp)
  0x0000000002c4a996: mov    %rcx,0x70(%rsp)
  0x0000000002c4a99b: mov    %rdx,0x68(%rsp)
  0x0000000002c4a9a0: mov    %rbx,0x60(%rsp)
  0x0000000002c4a9a5: mov    %rbp,0x50(%rsp)
  0x0000000002c4a9aa: mov    %rsi,0x48(%rsp)
  0x0000000002c4a9af: mov    %rdi,0x40(%rsp)
  0x0000000002c4a9b4: mov    %r8,0x38(%rsp)
  0x0000000002c4a9b9: mov    %r9,0x30(%rsp)
  0x0000000002c4a9be: mov    %r10,0x28(%rsp)
  0x0000000002c4a9c3: mov    %r11,0x20(%rsp)
  0x0000000002c4a9c8: mov    %r12,0x18(%rsp)
  0x0000000002c4a9cd: mov    %r13,0x10(%rsp)
  0x0000000002c4a9d2: mov    %r14,0x8(%rsp)
  0x0000000002c4a9d7: mov    %r15,(%rsp)
  0x0000000002c4a9db: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c4a9e5: movabs $0x2c4a985,%rdx    ;   {internal_word}
  0x0000000002c4a9ef: mov    %rsp,%r8
  0x0000000002c4a9f2: and    $0xfffffffffffffff0,%rsp
  0x0000000002c4a9f6: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c4a9fb: hlt    
[Deopt Handler Code]
  0x0000000002c4a9fc: movabs $0x2c4a9fc,%r10    ;   {section_word}
  0x0000000002c4aa06: push   %r10
  0x0000000002c4aa08: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c4aa0d: hlt    
  0x0000000002c4aa0e: hlt    
  0x0000000002c4aa0f: hlt    
<nmethod compile_id='27' compiler='C1' level='3' entry='0x0000000002c4a8a0' size='888' address='0x0000000002c4a750' relocation_offset='288' insts_offset='336' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='752' dependencies_offset='864' nul_chk_table_offset='872' method='java/util/TreeMap setColor (Ljava/util/TreeMap$Entry;Z)V' bytes='10' count='2434' iicount='2434' stamp='0.457'/>
<writer thread='20984'/>
<task_queued compile_id='28' method='java/lang/Character toLowerCase (I)I' bytes='9' count='12544' iicount='12544' stamp='0.457' comment='tiered' hot_count='12544'/>
<task_queued compile_id='29' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='12544' iicount='12544' stamp='0.457' comment='tiered' hot_count='12544'/>
<task_queued compile_id='30' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='2816' iicount='2816' level='3' stamp='0.457' comment='tiered' hot_count='2816'/>
<writer thread='8488'/>
Decoding compiled method 0x0000000002c4a390:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019428be8} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002c4a4c0: mov    0x8(%rdx),%r10d
  0x0000000002c4a4c4: shl    $0x3,%r10
  0x0000000002c4a4c8: cmp    %r10,%rax
  0x0000000002c4a4cb: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c4a4d1: data16 xchg %ax,%ax
  0x0000000002c4a4d4: nopl   0x0(%rax,%rax,1)
  0x0000000002c4a4dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c4a4e0: mov    %eax,-0x6000(%rsp)
  0x0000000002c4a4e7: push   %rbp
  0x0000000002c4a4e8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@-1 (line 133)

  0x0000000002c4a4ec: mov    %rdx,%r10
  0x0000000002c4a4ef: mov    %r8d,%r11d
  0x0000000002c4a4f2: movzwl %r11w,%r11d        ;*i2c  ; - java.lang.CharacterDataLatin1::getProperties@1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x0000000002c4a4f6: cmp    $0x100,%r11d
  0x0000000002c4a4fd: jae    0x0000000002c4a540
  0x0000000002c4a4ff: movabs $0x7807912d0,%r9   ;   {oop([I)}
  0x0000000002c4a509: mov    0x10(%r9,%r11,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x0000000002c4a50e: test   $0x20000,%eax
  0x0000000002c4a514: jne    0x0000000002c4a525  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)

  0x0000000002c4a516: mov    %r8d,%eax          ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)

  0x0000000002c4a519: add    $0x30,%rsp
  0x0000000002c4a51d: pop    %rbp
  0x0000000002c4a51e: test   %eax,-0x257a524(%rip)        # 0x00000000006d0000
                                                ;   {poll_return}
  0x0000000002c4a524: retq   
  0x0000000002c4a525: mov    %eax,%ebp
  0x0000000002c4a527: and    $0x7fc0000,%ebp    ;*iand
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@18 (line 136)

  0x0000000002c4a52d: cmp    $0x7fc0000,%ebp
  0x0000000002c4a533: je     0x0000000002c4a561  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x0000000002c4a535: shl    $0x5,%eax
  0x0000000002c4a538: sar    $0x17,%eax
  0x0000000002c4a53b: add    %r8d,%eax          ;*iadd
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@35 (line 139)

  0x0000000002c4a53e: jmp    0x0000000002c4a519
  0x0000000002c4a540: mov    $0xffffffe4,%edx
  0x0000000002c4a545: mov    %r8d,0x4(%rsp)
  0x0000000002c4a54a: mov    %r10,0x8(%rsp)
  0x0000000002c4a54f: mov    %r8d,0x10(%rsp)
  0x0000000002c4a554: mov    %r11d,0x18(%rsp)
  0x0000000002c4a559: xchg   %ax,%ax
  0x0000000002c4a55b: callq  0x0000000002b757a0  ; OopMap{[8]=Oop off=160}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000002c4a560: int3                      ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x0000000002c4a561: mov    $0xffffff65,%edx
  0x0000000002c4a566: mov    %r10,(%rsp)
  0x0000000002c4a56a: mov    %r8d,0xc(%rsp)
  0x0000000002c4a56f: mov    %eax,0x10(%rsp)
  0x0000000002c4a573: callq  0x0000000002b757a0  ; OopMap{[0]=Oop off=184}
                                                ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ;   {runtime_call}
  0x0000000002c4a578: int3                      ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x0000000002c4a579: hlt    
  0x0000000002c4a57a: hlt    
  0x0000000002c4a57b: hlt    
  0x0000000002c4a57c: hlt    
  0x0000000002c4a57d: hlt    
  0x0000000002c4a57e: hlt    
  0x0000000002c4a57f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c4a580: jmpq   0x0000000002b87ee0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002c4a585: callq  0x0000000002c4a58a
  0x0000000002c4a58a: subq   $0x5,(%rsp)
  0x0000000002c4a58f: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c4a594: hlt    
  0x0000000002c4a595: hlt    
  0x0000000002c4a596: hlt    
  0x0000000002c4a597: hlt    
<nmethod compile_id='29' compiler='C2' level='4' entry='0x0000000002c4a4c0' size='904' address='0x0000000002c4a390' relocation_offset='288' insts_offset='304' stub_offset='496' scopes_data_offset='544' scopes_pcs_offset='672' dependencies_offset='896' oops_offset='520' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='12546' iicount='12546' stamp='0.459'/>
<writer thread='9088'/>
Decoding compiled method 0x0000000002c46f90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001936cdd8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  # parm2:    r9        = int
  #           [sp+0xc0]  (sp of caller)
  0x0000000002c471a0: mov    %eax,-0x6000(%rsp)
  0x0000000002c471a7: push   %rbp
  0x0000000002c471a8: sub    $0xb0,%rsp
  0x0000000002c471af: mov    %rdx,0x88(%rsp)
  0x0000000002c471b7: mov    %r8d,0x78(%rsp)
  0x0000000002c471bc: mov    %r9d,0x7c(%rsp)
  0x0000000002c471c1: movabs $0x194456e0,%rbx   ;   {metadata(method data for {method} {0x000000001936cdd8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c471cb: mov    0xdc(%rbx),%esi
  0x0000000002c471d1: add    $0x8,%esi
  0x0000000002c471d4: mov    %esi,0xdc(%rbx)
  0x0000000002c471da: movabs $0x1936cdd0,%rbx   ;   {metadata({method} {0x000000001936cdd8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c471e4: and    $0x1ff8,%esi
  0x0000000002c471ea: cmp    $0x0,%esi
  0x0000000002c471ed: je     0x0000000002c47a84  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x0000000002c471f3: mov    %r9,%r11
  0x0000000002c471f6: sub    %r8d,%r11d
  0x0000000002c471f9: mov    %r11d,0x80(%rsp)
  0x0000000002c47201: cmp    $0x0,%r11d
  0x0000000002c47205: movabs $0x194456e0,%rbx   ;   {metadata(method data for {method} {0x000000001936cdd8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c4720f: movabs $0x108,%rsi
  0x0000000002c47219: jge    0x0000000002c47229
  0x0000000002c4721f: movabs $0x118,%rsi
  0x0000000002c47229: mov    (%rbx,%rsi,1),%rdi
  0x0000000002c4722d: lea    0x1(%rdi),%rdi
  0x0000000002c47231: mov    %rdi,(%rbx,%rsi,1)
  0x0000000002c47235: jl     0x0000000002c47403  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x0000000002c4723b: mov    %r11,%rbx
  0x0000000002c4723e: mov    %rdx,%r13
  0x0000000002c47241: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002c4724b: movslq %ebx,%rbx
  0x0000000002c4724e: mov    %rbx,%rdi
  0x0000000002c47251: cmp    $0xffffff,%rbx
  0x0000000002c47258: ja     0x0000000002c47a9b
  0x0000000002c4725e: movabs $0x17,%rsi
  0x0000000002c47268: lea    (%rsi,%rbx,2),%rsi
  0x0000000002c4726c: and    $0xfffffffffffffff8,%rsi
  0x0000000002c47270: mov    0x60(%r15),%rax
  0x0000000002c47274: lea    (%rax,%rsi,1),%rsi
  0x0000000002c47278: cmp    0x70(%r15),%rsi
  0x0000000002c4727c: ja     0x0000000002c47a9b
  0x0000000002c47282: mov    %rsi,0x60(%r15)
  0x0000000002c47286: sub    %rax,%rsi
  0x0000000002c47289: movq   $0x1,(%rax)
  0x0000000002c47290: mov    %rdx,%rcx
  0x0000000002c47293: shr    $0x3,%rcx
  0x0000000002c47297: mov    %ecx,0x8(%rax)
  0x0000000002c4729a: mov    %ebx,0xc(%rax)
  0x0000000002c4729d: sub    $0x10,%rsi
  0x0000000002c472a1: je     0x0000000002c472b8
  0x0000000002c472a7: xor    %rbx,%rbx
  0x0000000002c472aa: shr    $0x3,%rsi
  0x0000000002c472ae: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002c472b3: dec    %rsi
  0x0000000002c472b6: jne    0x0000000002c472ae  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x0000000002c472b8: mov    0xc(%r13),%edx     ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x0000000002c47aa5
  0x0000000002c472bc: sub    %r8d,%edx
  0x0000000002c472bf: movabs $0x194456e0,%rdi   ;   {metadata(method data for {method} {0x000000001936cdd8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c472c9: addq   $0x1,0x208(%rdi)
  0x0000000002c472d1: movabs $0x19444708,%rdi   ;   {metadata(method data for {method} {0x0000000019347a88} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c472db: mov    0xdc(%rdi),%esi
  0x0000000002c472e1: add    $0x8,%esi
  0x0000000002c472e4: mov    %esi,0xdc(%rdi)
  0x0000000002c472ea: movabs $0x19347a80,%rdi   ;   {metadata({method} {0x0000000019347a88} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c472f4: and    $0x7ffff8,%esi
  0x0000000002c472fa: cmp    $0x0,%esi
  0x0000000002c472fd: je     0x0000000002c47aaa
  0x0000000002c47303: cmp    %r11d,%edx
  0x0000000002c47306: movabs $0x19444708,%rdi   ;   {metadata(method data for {method} {0x0000000019347a88} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c47310: movabs $0x108,%rsi
  0x0000000002c4731a: jg     0x0000000002c4732a
  0x0000000002c47320: movabs $0x118,%rsi
  0x0000000002c4732a: mov    (%rdi,%rsi,1),%rbx
  0x0000000002c4732e: lea    0x1(%rbx),%rbx
  0x0000000002c47332: mov    %rbx,(%rdi,%rsi,1)
  0x0000000002c47336: jg     0x0000000002c47354  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002c4733c: movabs $0x19444708,%rdi   ;   {metadata(method data for {method} {0x0000000019347a88} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002c47346: incl   0x128(%rdi)
  0x0000000002c4734c: mov    %rdx,%rsi
  0x0000000002c4734f: jmpq   0x0000000002c47357  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002c47354: mov    %r11,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002c47357: movabs $0x194456e0,%rdx   ;   {metadata(method data for {method} {0x000000001936cdd8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c47361: addq   $0x1,0x218(%rdx)
  0x0000000002c47369: mov    %r13,%rdx
  0x0000000002c4736c: mov    %r8,%rbx
  0x0000000002c4736f: mov    %rbx,%r8
  0x0000000002c47372: mov    %rax,%r9
  0x0000000002c47375: mov    $0x0,%edi
  0x0000000002c4737a: mov    %rax,0x70(%rsp)
  0x0000000002c4737f: test   %r8d,%r8d
  0x0000000002c47382: jl     0x0000000002c47ac1
  0x0000000002c47388: lea    (%r8,%rsi,1),%rcx
  0x0000000002c4738c: cmp    0xc(%rdx),%ecx
  0x0000000002c4738f: ja     0x0000000002c47ac1
  0x0000000002c47395: lea    (%rdi,%rsi,1),%rcx
  0x0000000002c47399: cmp    0xc(%r9),%ecx
  0x0000000002c4739d: ja     0x0000000002c47ac1
  0x0000000002c473a3: test   %esi,%esi
  0x0000000002c473a5: jl     0x0000000002c47ac1
  0x0000000002c473ab: je     0x0000000002c473ef
  0x0000000002c473b1: movslq %r8d,%r8
  0x0000000002c473b4: movslq %edi,%rdi
  0x0000000002c473b7: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002c473bc: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002c473c1: mov    %rsi,%r8
  0x0000000002c473c4: sub    $0x20,%rsp
  0x0000000002c473c8: test   $0xf,%esp
  0x0000000002c473ce: je     0x0000000002c473e6
  0x0000000002c473d4: sub    $0x8,%rsp
  0x0000000002c473d8: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002c473dd: add    $0x8,%rsp
  0x0000000002c473e1: jmpq   0x0000000002c473eb
  0x0000000002c473e6: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002c473eb: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x0000000002c473ef: mov    0x70(%rsp),%rax
  0x0000000002c473f4: add    $0xb0,%rsp
  0x0000000002c473fb: pop    %rbp
  0x0000000002c473fc: test   %eax,-0x2577302(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c47402: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x0000000002c47403: nopl   0x0(%rax,%rax,1)
  0x0000000002c47408: jmpq   0x0000000002c47ae0  ;   {no_reloc}
  0x0000000002c4740d: add    %al,(%rax)
  0x0000000002c4740f: add    %al,(%rax)
  0x0000000002c47411: add    %cl,-0x75(%rcx)
  0x0000000002c47414: rex.RXB (bad) 
  0x0000000002c47416: lea    0x20(%rax),%rdi
  0x0000000002c4741a: cmp    0x70(%r15),%rdi
  0x0000000002c4741e: ja     0x0000000002c47aea
  0x0000000002c47424: mov    %rdi,0x60(%r15)
  0x0000000002c47428: mov    0xa8(%rdx),%rcx
  0x0000000002c4742f: mov    %rcx,(%rax)
  0x0000000002c47432: mov    %rdx,%rcx
  0x0000000002c47435: shr    $0x3,%rcx
  0x0000000002c47439: mov    %ecx,0x8(%rax)
  0x0000000002c4743c: xor    %rcx,%rcx
  0x0000000002c4743f: mov    %ecx,0xc(%rax)
  0x0000000002c47442: xor    %rcx,%rcx
  0x0000000002c47445: mov    %rcx,0x10(%rax)
  0x0000000002c47449: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x0000000002c4744d: data16 xchg %ax,%ax
  0x0000000002c47450: jmpq   0x0000000002c47b06  ;   {no_reloc}
  0x0000000002c47455: add    %al,(%rax)
  0x0000000002c47457: add    %al,(%rax)
  0x0000000002c47459: add    %cl,-0x77(%rax)
  0x0000000002c4745c: test   %ah,(%rax,%rbx,4)
  0x0000000002c4745f: add    %al,(%rax)
  0x0000000002c47461: add    %cl,-0x75(%rcx)
  0x0000000002c47464: rex.RXB (bad) 
  0x0000000002c47466: lea    0x18(%rax),%rdi
  0x0000000002c4746a: cmp    0x70(%r15),%rdi
  0x0000000002c4746e: ja     0x0000000002c47b10
  0x0000000002c47474: mov    %rdi,0x60(%r15)
  0x0000000002c47478: mov    0xa8(%rdx),%rcx
  0x0000000002c4747f: mov    %rcx,(%rax)
  0x0000000002c47482: mov    %rdx,%rcx
  0x0000000002c47485: shr    $0x3,%rcx
  0x0000000002c47489: mov    %ecx,0x8(%rax)
  0x0000000002c4748c: xor    %rcx,%rcx
  0x0000000002c4748f: mov    %ecx,0xc(%rax)
  0x0000000002c47492: xor    %rcx,%rcx
  0x0000000002c47495: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x0000000002c47499: mov    %rax,0x90(%rsp)
  0x0000000002c474a1: mov    %rax,%rbx
  0x0000000002c474a4: movabs $0x194456e0,%rdx   ;   {metadata(method data for {method} {0x000000001936cdd8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c474ae: addq   $0x1,0x128(%rdx)
  0x0000000002c474b6: movabs $0x194fd9a8,%rbx   ;   {metadata(method data for {method} {0x00000000192c9400} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c474c0: mov    0xdc(%rbx),%edx
  0x0000000002c474c6: add    $0x8,%edx
  0x0000000002c474c9: mov    %edx,0xdc(%rbx)
  0x0000000002c474cf: movabs $0x192c93f8,%rbx   ;   {metadata({method} {0x00000000192c9400} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c474d9: and    $0x7ffff8,%edx
  0x0000000002c474df: cmp    $0x0,%edx
  0x0000000002c474e2: je     0x0000000002c47b1d
  0x0000000002c474e8: mov    %rax,%rbx
  0x0000000002c474eb: movabs $0x194fd9a8,%rdx   ;   {metadata(method data for {method} {0x00000000192c9400} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c474f5: addq   $0x1,0x108(%rdx)
  0x0000000002c474fd: movabs $0x1948e498,%rbx   ;   {metadata(method data for {method} {0x00000000192c54b8} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c47507: mov    0xdc(%rbx),%edx
  0x0000000002c4750d: add    $0x8,%edx
  0x0000000002c47510: mov    %edx,0xdc(%rbx)
  0x0000000002c47516: movabs $0x192c54b0,%rbx   ;   {metadata({method} {0x00000000192c54b8} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c47520: and    $0x7ffff8,%edx
  0x0000000002c47526: cmp    $0x0,%edx
  0x0000000002c47529: je     0x0000000002c47b34
  0x0000000002c4752f: mov    %rax,%rbx
  0x0000000002c47532: movabs $0x1948e498,%rdx   ;   {metadata(method data for {method} {0x00000000192c54b8} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c4753c: addq   $0x1,0x108(%rdx)
  0x0000000002c47544: movabs $0x19387898,%rbx   ;   {metadata(method data for {method} {0x0000000019250488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002c4754e: mov    0xdc(%rbx),%edx
  0x0000000002c47554: add    $0x8,%edx
  0x0000000002c47557: mov    %edx,0xdc(%rbx)
  0x0000000002c4755d: movabs $0x19250480,%rbx   ;   {metadata({method} {0x0000000019250488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002c47567: and    $0x7ffff8,%edx
  0x0000000002c4756d: cmp    $0x0,%edx
  0x0000000002c47570: je     0x0000000002c47b4b
  0x0000000002c47576: mov    $0x10,%ebx
  0x0000000002c4757b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002c47585: mov    %rax,%r9
  0x0000000002c47588: movslq %ebx,%rbx
  0x0000000002c4758b: mov    %rbx,%rdi
  0x0000000002c4758e: cmp    $0xffffff,%rbx
  0x0000000002c47595: ja     0x0000000002c47b62
  0x0000000002c4759b: movabs $0x17,%rsi
  0x0000000002c475a5: lea    (%rsi,%rbx,2),%rsi
  0x0000000002c475a9: and    $0xfffffffffffffff8,%rsi
  0x0000000002c475ad: mov    0x60(%r15),%rax
  0x0000000002c475b1: lea    (%rax,%rsi,1),%rsi
  0x0000000002c475b5: cmp    0x70(%r15),%rsi
  0x0000000002c475b9: ja     0x0000000002c47b62
  0x0000000002c475bf: mov    %rsi,0x60(%r15)
  0x0000000002c475c3: sub    %rax,%rsi
  0x0000000002c475c6: movq   $0x1,(%rax)
  0x0000000002c475cd: mov    %rdx,%rcx
  0x0000000002c475d0: shr    $0x3,%rcx
  0x0000000002c475d4: mov    %ecx,0x8(%rax)
  0x0000000002c475d7: mov    %ebx,0xc(%rax)
  0x0000000002c475da: sub    $0x10,%rsi
  0x0000000002c475de: je     0x0000000002c475f5
  0x0000000002c475e4: xor    %rbx,%rbx
  0x0000000002c475e7: shr    $0x3,%rsi
  0x0000000002c475eb: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002c475f0: dec    %rsi
  0x0000000002c475f3: jne    0x0000000002c475eb  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000002c475f5: mov    %rax,%r10
  0x0000000002c475f8: shr    $0x3,%r10
  0x0000000002c475fc: mov    %r10d,0x10(%r9)
  0x0000000002c47600: mov    %r9,%rax
  0x0000000002c47603: shr    $0x9,%rax
  0x0000000002c47607: movabs $0xe6e6000,%rdx
  0x0000000002c47611: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000002c47615: mov    %r9,%rax
  0x0000000002c47618: movabs $0x194456e0,%rdx   ;   {metadata(method data for {method} {0x000000001936cdd8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c47622: mov    0x8(%rax),%eax
  0x0000000002c47625: shl    $0x3,%rax
  0x0000000002c47629: cmp    0x140(%rdx),%rax
  0x0000000002c47630: jne    0x0000000002c4763f
  0x0000000002c47632: addq   $0x1,0x148(%rdx)
  0x0000000002c4763a: jmpq   0x0000000002c476a5
  0x0000000002c4763f: cmp    0x150(%rdx),%rax
  0x0000000002c47646: jne    0x0000000002c47655
  0x0000000002c47648: addq   $0x1,0x158(%rdx)
  0x0000000002c47650: jmpq   0x0000000002c476a5
  0x0000000002c47655: cmpq   $0x0,0x140(%rdx)
  0x0000000002c47660: jne    0x0000000002c47679
  0x0000000002c47662: mov    %rax,0x140(%rdx)
  0x0000000002c47669: movq   $0x1,0x148(%rdx)
  0x0000000002c47674: jmpq   0x0000000002c476a5
  0x0000000002c47679: cmpq   $0x0,0x150(%rdx)
  0x0000000002c47684: jne    0x0000000002c4769d
  0x0000000002c47686: mov    %rax,0x150(%rdx)
  0x0000000002c4768d: movq   $0x1,0x158(%rdx)
  0x0000000002c47698: jmpq   0x0000000002c476a5
  0x0000000002c4769d: addq   $0x1,0x138(%rdx)
  0x0000000002c476a5: movabs $0x19521fe8,%rdx   ;   {metadata(method data for {method} {0x00000000192c9bd8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c476af: mov    0xdc(%rdx),%esi
  0x0000000002c476b5: add    $0x8,%esi
  0x0000000002c476b8: mov    %esi,0xdc(%rdx)
  0x0000000002c476be: movabs $0x192c9bd0,%rdx   ;   {metadata({method} {0x00000000192c9bd8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c476c8: and    $0x7ffff8,%esi
  0x0000000002c476ce: cmp    $0x0,%esi
  0x0000000002c476d1: je     0x0000000002c47b6c
  0x0000000002c476d7: mov    %r9,%rax
  0x0000000002c476da: movabs $0x19521fe8,%rdx   ;   {metadata(method data for {method} {0x00000000192c9bd8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c476e4: addq   $0x1,0x108(%rdx)
  0x0000000002c476ec: mov    %r8,%rsi
  0x0000000002c476ef: mov    %rsi,%r8
  0x0000000002c476f2: mov    %r9,%rdx           ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x0000000002c476f5: nop
  0x0000000002c476f6: nop
  0x0000000002c476f7: callq  0x0000000002b761a0  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=1372}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002c476fc: mov    0x90(%rsp),%rax
  0x0000000002c47704: movabs $0x194456e0,%r8    ;   {metadata(method data for {method} {0x000000001936cdd8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c4770e: mov    0x8(%rax),%eax
  0x0000000002c47711: shl    $0x3,%rax
  0x0000000002c47715: cmp    0x170(%r8),%rax
  0x0000000002c4771c: jne    0x0000000002c4772b
  0x0000000002c4771e: addq   $0x1,0x178(%r8)
  0x0000000002c47726: jmpq   0x0000000002c47791
  0x0000000002c4772b: cmp    0x180(%r8),%rax
  0x0000000002c47732: jne    0x0000000002c47741
  0x0000000002c47734: addq   $0x1,0x188(%r8)
  0x0000000002c4773c: jmpq   0x0000000002c47791
  0x0000000002c47741: cmpq   $0x0,0x170(%r8)
  0x0000000002c4774c: jne    0x0000000002c47765
  0x0000000002c4774e: mov    %rax,0x170(%r8)
  0x0000000002c47755: movq   $0x1,0x178(%r8)
  0x0000000002c47760: jmpq   0x0000000002c47791
  0x0000000002c47765: cmpq   $0x0,0x180(%r8)
  0x0000000002c47770: jne    0x0000000002c47789
  0x0000000002c47772: mov    %rax,0x180(%r8)
  0x0000000002c47779: movq   $0x1,0x188(%r8)
  0x0000000002c47784: jmpq   0x0000000002c47791
  0x0000000002c47789: addq   $0x1,0x168(%r8)
  0x0000000002c47791: movabs $0x194829b0,%r8    ;   {metadata(method data for {method} {0x00000000192c9718} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c4779b: mov    0xdc(%r8),%edx
  0x0000000002c477a2: add    $0x8,%edx
  0x0000000002c477a5: mov    %edx,0xdc(%r8)
  0x0000000002c477ac: movabs $0x192c9710,%r8    ;   {metadata({method} {0x00000000192c9718} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c477b6: and    $0x7ffff8,%edx
  0x0000000002c477bc: cmp    $0x0,%edx
  0x0000000002c477bf: je     0x0000000002c47b83
  0x0000000002c477c5: mov    0x90(%rsp),%rax
  0x0000000002c477cd: movabs $0x194829b0,%r8    ;   {metadata(method data for {method} {0x00000000192c9718} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c477d7: addq   $0x1,0x108(%r8)
  0x0000000002c477df: movabs $0x780bcedf8,%r8   ;   {oop(&quot; &gt; &quot;)}
  0x0000000002c477e9: mov    0x90(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x0000000002c477f1: nop
  0x0000000002c477f2: nop
  0x0000000002c477f3: nop
  0x0000000002c477f4: nop
  0x0000000002c477f5: nop
  0x0000000002c477f6: nop
  0x0000000002c477f7: callq  0x0000000002b761a0  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=1628}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002c477fc: mov    0x90(%rsp),%rax
  0x0000000002c47804: movabs $0x194456e0,%r8    ;   {metadata(method data for {method} {0x000000001936cdd8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c4780e: mov    0x8(%rax),%eax
  0x0000000002c47811: shl    $0x3,%rax
  0x0000000002c47815: cmp    0x1a0(%r8),%rax
  0x0000000002c4781c: jne    0x0000000002c4782b
  0x0000000002c4781e: addq   $0x1,0x1a8(%r8)
  0x0000000002c47826: jmpq   0x0000000002c47891
  0x0000000002c4782b: cmp    0x1b0(%r8),%rax
  0x0000000002c47832: jne    0x0000000002c47841
  0x0000000002c47834: addq   $0x1,0x1b8(%r8)
  0x0000000002c4783c: jmpq   0x0000000002c47891
  0x0000000002c47841: cmpq   $0x0,0x1a0(%r8)
  0x0000000002c4784c: jne    0x0000000002c47865
  0x0000000002c4784e: mov    %rax,0x1a0(%r8)
  0x0000000002c47855: movq   $0x1,0x1a8(%r8)
  0x0000000002c47860: jmpq   0x0000000002c47891
  0x0000000002c47865: cmpq   $0x0,0x1b0(%r8)
  0x0000000002c47870: jne    0x0000000002c47889
  0x0000000002c47872: mov    %rax,0x1b0(%r8)
  0x0000000002c47879: movq   $0x1,0x1b8(%r8)
  0x0000000002c47884: jmpq   0x0000000002c47891
  0x0000000002c47889: addq   $0x1,0x198(%r8)
  0x0000000002c47891: movabs $0x19521fe8,%r8    ;   {metadata(method data for {method} {0x00000000192c9bd8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c4789b: mov    0xdc(%r8),%edx
  0x0000000002c478a2: add    $0x8,%edx
  0x0000000002c478a5: mov    %edx,0xdc(%r8)
  0x0000000002c478ac: movabs $0x192c9bd0,%r8    ;   {metadata({method} {0x00000000192c9bd8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c478b6: and    $0x7ffff8,%edx
  0x0000000002c478bc: cmp    $0x0,%edx
  0x0000000002c478bf: je     0x0000000002c47b9a
  0x0000000002c478c5: mov    0x90(%rsp),%rax
  0x0000000002c478cd: movabs $0x19521fe8,%r8    ;   {metadata(method data for {method} {0x00000000192c9bd8} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c478d7: addq   $0x1,0x108(%r8)
  0x0000000002c478df: mov    0x7c(%rsp),%r8d
  0x0000000002c478e4: mov    0x90(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x0000000002c478ec: nop
  0x0000000002c478ed: nop
  0x0000000002c478ee: nop
  0x0000000002c478ef: callq  0x0000000002b761a0  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=1876}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002c478f4: mov    0x90(%rsp),%rax
  0x0000000002c478fc: movabs $0x194456e0,%rdx   ;   {metadata(method data for {method} {0x000000001936cdd8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c47906: mov    0x8(%rax),%eax
  0x0000000002c47909: shl    $0x3,%rax
  0x0000000002c4790d: cmp    0x1d0(%rdx),%rax
  0x0000000002c47914: jne    0x0000000002c47923
  0x0000000002c47916: addq   $0x1,0x1d8(%rdx)
  0x0000000002c4791e: jmpq   0x0000000002c47989
  0x0000000002c47923: cmp    0x1e0(%rdx),%rax
  0x0000000002c4792a: jne    0x0000000002c47939
  0x0000000002c4792c: addq   $0x1,0x1e8(%rdx)
  0x0000000002c47934: jmpq   0x0000000002c47989
  0x0000000002c47939: cmpq   $0x0,0x1d0(%rdx)
  0x0000000002c47944: jne    0x0000000002c4795d
  0x0000000002c47946: mov    %rax,0x1d0(%rdx)
  0x0000000002c4794d: movq   $0x1,0x1d8(%rdx)
  0x0000000002c47958: jmpq   0x0000000002c47989
  0x0000000002c4795d: cmpq   $0x0,0x1e0(%rdx)
  0x0000000002c47968: jne    0x0000000002c47981
  0x0000000002c4796a: mov    %rax,0x1e0(%rdx)
  0x0000000002c47971: movq   $0x1,0x1e8(%rdx)
  0x0000000002c4797c: jmpq   0x0000000002c47989
  0x0000000002c47981: addq   $0x1,0x1c8(%rdx)
  0x0000000002c47989: movabs $0x19492018,%rdx   ;   {metadata(method data for {method} {0x00000000192caac8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c47993: mov    0xdc(%rdx),%esi
  0x0000000002c47999: add    $0x8,%esi
  0x0000000002c4799c: mov    %esi,0xdc(%rdx)
  0x0000000002c479a2: movabs $0x192caac0,%rdx   ;   {metadata({method} {0x00000000192caac8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c479ac: and    $0x7ffff8,%esi
  0x0000000002c479b2: cmp    $0x0,%esi
  0x0000000002c479b5: je     0x0000000002c47bb1
  0x0000000002c479bb: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002c479c5: mov    0x60(%r15),%rax
  0x0000000002c479c9: lea    0x18(%rax),%rdi
  0x0000000002c479cd: cmp    0x70(%r15),%rdi
  0x0000000002c479d1: ja     0x0000000002c47bc8
  0x0000000002c479d7: mov    %rdi,0x60(%r15)
  0x0000000002c479db: mov    0xa8(%rdx),%rcx
  0x0000000002c479e2: mov    %rcx,(%rax)
  0x0000000002c479e5: mov    %rdx,%rcx
  0x0000000002c479e8: shr    $0x3,%rcx
  0x0000000002c479ec: mov    %ecx,0x8(%rax)
  0x0000000002c479ef: xor    %rcx,%rcx
  0x0000000002c479f2: mov    %ecx,0xc(%rax)
  0x0000000002c479f5: xor    %rcx,%rcx
  0x0000000002c479f8: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002c479fc: mov    0x90(%rsp),%rsi
  0x0000000002c47a04: mov    0x10(%rsi),%r8d
  0x0000000002c47a08: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002c47a0c: mov    0xc(%rsi),%edi     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002c47a0f: mov    %rax,%r9
  0x0000000002c47a12: movabs $0x19492018,%rdx   ;   {metadata(method data for {method} {0x00000000192caac8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002c47a1c: addq   $0x1,0x108(%rdx)
  0x0000000002c47a24: mov    $0x0,%r9d
  0x0000000002c47a2a: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002c47a2d: mov    %rax,0xa0(%rsp)
  0x0000000002c47a35: nop
  0x0000000002c47a36: nop
  0x0000000002c47a37: callq  0x0000000002b761a0  ; OopMap{[152]=Oop [136]=Oop [160]=Oop [144]=Oop off=2204}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002c47a3c: mov    0x98(%rsp),%rax
  0x0000000002c47a44: movabs $0x194456e0,%r8    ;   {metadata(method data for {method} {0x000000001936cdd8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002c47a4e: addq   $0x1,0x1f8(%r8)
  0x0000000002c47a56: mov    0xa0(%rsp),%r8
  0x0000000002c47a5e: mov    0x98(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x0000000002c47a66: nop
  0x0000000002c47a67: callq  0x0000000002b761a0  ; OopMap{[152]=Oop [136]=Oop off=2252}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002c47a6c: mov    0x98(%rsp),%rax    ; OopMap{[136]=Oop rax=Oop off=2260}
                                                ;*athrow
                                                ; - java.util.Arrays::copyOfRange@38 (line 3663)

  0x0000000002c47a74: movabs $0x2c47a74,%rdx    ;   {section_word}
  0x0000000002c47a7e: callq  0x0000000002b9f120  ;   {runtime_call}
  0x0000000002c47a83: nop
  0x0000000002c47a84: mov    %rbx,0x8(%rsp)
  0x0000000002c47a89: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c47a91: callq  0x0000000002c31360  ; OopMap{rdx=Oop [136]=Oop off=2294}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x0000000002c47a96: jmpq   0x0000000002c471f3
  0x0000000002c47a9b: callq  0x0000000002c2dd00  ; OopMap{r13=Oop [136]=Oop off=2304}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x0000000002c47aa0: jmpq   0x0000000002c472b8
  0x0000000002c47aa5: callq  0x0000000002c2cc80  ; OopMap{r13=Oop [136]=Oop rax=Oop off=2314}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x0000000002c47aaa: mov    %rdi,0x8(%rsp)
  0x0000000002c47aaf: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c47ab7: callq  0x0000000002c31360  ; OopMap{r13=Oop [136]=Oop rax=Oop off=2332}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x0000000002c47abc: jmpq   0x0000000002c47303
  0x0000000002c47ac1: nop
  0x0000000002c47ac2: nop
  0x0000000002c47ac3: nop
  0x0000000002c47ac4: nop
  0x0000000002c47ac5: nop
  0x0000000002c47ac6: nop
  0x0000000002c47ac7: callq  0x0000000002b76620  ; OopMap{[136]=Oop [112]=Oop off=2348}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x0000000002c47acc: jmpq   0x0000000002c473ef
  0x0000000002c47ad1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002c47adb: mov    $0xa050f00,%eax
  0x0000000002c47ae0: callq  0x0000000002c302a0  ; OopMap{[136]=Oop off=2373}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c47ae5: jmpq   0x0000000002c47408
  0x0000000002c47aea: mov    %rdx,%rdx
  0x0000000002c47aed: callq  0x0000000002c2d400  ; OopMap{[136]=Oop off=2386}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c47af2: jmpq   0x0000000002c4744d
  0x0000000002c47af7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002c47b01: mov    $0xa050f00,%eax
  0x0000000002c47b06: callq  0x0000000002c302a0  ; OopMap{[136]=Oop rax=Oop off=2411}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c47b0b: jmpq   0x0000000002c47450
  0x0000000002c47b10: mov    %rdx,%rdx
  0x0000000002c47b13: callq  0x0000000002c2d400  ; OopMap{[136]=Oop [152]=Oop off=2424}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c47b18: jmpq   0x0000000002c47499
  0x0000000002c47b1d: mov    %rbx,0x8(%rsp)
  0x0000000002c47b22: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c47b2a: callq  0x0000000002c31360  ; OopMap{[136]=Oop [152]=Oop rax=Oop [144]=Oop off=2447}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c47b2f: jmpq   0x0000000002c474e8
  0x0000000002c47b34: mov    %rbx,0x8(%rsp)
  0x0000000002c47b39: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c47b41: callq  0x0000000002c31360  ; OopMap{[136]=Oop [152]=Oop rax=Oop [144]=Oop off=2470}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c47b46: jmpq   0x0000000002c4752f
  0x0000000002c47b4b: mov    %rbx,0x8(%rsp)
  0x0000000002c47b50: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c47b58: callq  0x0000000002c31360  ; OopMap{[136]=Oop [152]=Oop rax=Oop [144]=Oop off=2493}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c47b5d: jmpq   0x0000000002c47576
  0x0000000002c47b62: callq  0x0000000002c2dd00  ; OopMap{[136]=Oop [152]=Oop r9=Oop [144]=Oop off=2503}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c47b67: jmpq   0x0000000002c475f5
  0x0000000002c47b6c: mov    %rdx,0x8(%rsp)
  0x0000000002c47b71: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c47b79: callq  0x0000000002c31360  ; OopMap{[136]=Oop [152]=Oop r9=Oop [144]=Oop off=2526}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c47b7e: jmpq   0x0000000002c476d7
  0x0000000002c47b83: mov    %r8,0x8(%rsp)
  0x0000000002c47b88: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c47b90: callq  0x0000000002c31360  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=2549}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c47b95: jmpq   0x0000000002c477c5
  0x0000000002c47b9a: mov    %r8,0x8(%rsp)
  0x0000000002c47b9f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c47ba7: callq  0x0000000002c31360  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=2572}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c47bac: jmpq   0x0000000002c478c5
  0x0000000002c47bb1: mov    %rdx,0x8(%rsp)
  0x0000000002c47bb6: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c47bbe: callq  0x0000000002c31360  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=2595}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c47bc3: jmpq   0x0000000002c479bb
  0x0000000002c47bc8: mov    %rdx,%rdx
  0x0000000002c47bcb: callq  0x0000000002c2d400  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=2608}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x0000000002c47bd0: jmpq   0x0000000002c479fc
  0x0000000002c47bd5: nop
  0x0000000002c47bd6: nop
  0x0000000002c47bd7: mov    0x2a8(%r15),%rax
  0x0000000002c47bde: movabs $0x0,%r10
  0x0000000002c47be8: mov    %r10,0x2a8(%r15)
  0x0000000002c47bef: movabs $0x0,%r10
  0x0000000002c47bf9: mov    %r10,0x2b0(%r15)
  0x0000000002c47c00: add    $0xb0,%rsp
  0x0000000002c47c07: pop    %rbp
  0x0000000002c47c08: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c47c0d: hlt    
  0x0000000002c47c0e: hlt    
  0x0000000002c47c0f: hlt    
  0x0000000002c47c10: hlt    
  0x0000000002c47c11: hlt    
  0x0000000002c47c12: hlt    
  0x0000000002c47c13: hlt    
  0x0000000002c47c14: hlt    
  0x0000000002c47c15: hlt    
  0x0000000002c47c16: hlt    
  0x0000000002c47c17: hlt    
  0x0000000002c47c18: hlt    
  0x0000000002c47c19: hlt    
  0x0000000002c47c1a: hlt    
  0x0000000002c47c1b: hlt    
  0x0000000002c47c1c: hlt    
  0x0000000002c47c1d: hlt    
  0x0000000002c47c1e: hlt    
  0x0000000002c47c1f: hlt    
[Stub Code]
  0x0000000002c47c20: nop                       ;   {no_reloc}
  0x0000000002c47c21: nop
  0x0000000002c47c22: nop
  0x0000000002c47c23: nop
  0x0000000002c47c24: nop
  0x0000000002c47c25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c47c2f: jmpq   0x0000000002c47c2f  ;   {runtime_call}
  0x0000000002c47c34: nop
  0x0000000002c47c35: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c47c3f: jmpq   0x0000000002c47c3f  ;   {runtime_call}
  0x0000000002c47c44: nop
  0x0000000002c47c45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c47c4f: jmpq   0x0000000002c47c4f  ;   {runtime_call}
  0x0000000002c47c54: nop
  0x0000000002c47c55: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c47c5f: jmpq   0x0000000002c47c5f  ;   {runtime_call}
  0x0000000002c47c64: nop
  0x0000000002c47c65: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c47c6f: jmpq   0x0000000002c47c6f  ;   {runtime_call}
  0x0000000002c47c74: nop
  0x0000000002c47c75: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c47c7f: jmpq   0x0000000002c47c7f  ;   {runtime_call}
[Exception Handler]
  0x0000000002c47c84: callq  0x0000000002c2eb20  ;   {runtime_call}
  0x0000000002c47c89: mov    %rsp,-0x28(%rsp)
  0x0000000002c47c8e: sub    $0x80,%rsp
  0x0000000002c47c95: mov    %rax,0x78(%rsp)
  0x0000000002c47c9a: mov    %rcx,0x70(%rsp)
  0x0000000002c47c9f: mov    %rdx,0x68(%rsp)
  0x0000000002c47ca4: mov    %rbx,0x60(%rsp)
  0x0000000002c47ca9: mov    %rbp,0x50(%rsp)
  0x0000000002c47cae: mov    %rsi,0x48(%rsp)
  0x0000000002c47cb3: mov    %rdi,0x40(%rsp)
  0x0000000002c47cb8: mov    %r8,0x38(%rsp)
  0x0000000002c47cbd: mov    %r9,0x30(%rsp)
  0x0000000002c47cc2: mov    %r10,0x28(%rsp)
  0x0000000002c47cc7: mov    %r11,0x20(%rsp)
  0x0000000002c47ccc: mov    %r12,0x18(%rsp)
  0x0000000002c47cd1: mov    %r13,0x10(%rsp)
  0x0000000002c47cd6: mov    %r14,0x8(%rsp)
  0x0000000002c47cdb: mov    %r15,(%rsp)
  0x0000000002c47cdf: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c47ce9: movabs $0x2c47c89,%rdx    ;   {internal_word}
  0x0000000002c47cf3: mov    %rsp,%r8
  0x0000000002c47cf6: and    $0xfffffffffffffff0,%rsp
  0x0000000002c47cfa: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c47cff: hlt    
[Deopt Handler Code]
  0x0000000002c47d00: movabs $0x2c47d00,%r10    ;   {section_word}
  0x0000000002c47d0a: push   %r10
  0x0000000002c47d0c: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c47d11: hlt    
  0x0000000002c47d12: hlt    
  0x0000000002c47d13: hlt    
  0x0000000002c47d14: hlt    
  0x0000000002c47d15: hlt    
  0x0000000002c47d16: hlt    
  0x0000000002c47d17: hlt    
<nmethod compile_id='30' compiler='C1' level='3' entry='0x0000000002c471a0' size='4984' address='0x0000000002c46f90' relocation_offset='288' insts_offset='528' stub_offset='3216' scopes_data_offset='3544' scopes_pcs_offset='4192' dependencies_offset='4944' nul_chk_table_offset='4968' oops_offset='3464' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='2817' iicount='2817' stamp='0.470'/>
<writer thread='20984'/>
<task_queued compile_id='31' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='32640' iicount='32640' stamp='0.470' comment='tiered' hot_count='32640'/>
<writer thread='18064'/>
Decoding compiled method 0x0000000002c49f50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000000192ec8e0} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000002c4a080: mov    %eax,-0x6000(%rsp)
  0x0000000002c4a087: push   %rbp
  0x0000000002c4a088: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)

  0x0000000002c4a08c: mov    %edx,%r11d
  0x0000000002c4a08f: shr    $0x8,%r11d         ;*iushr
                                                ; - java.lang.CharacterData::of@3 (line 77)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)

  0x0000000002c4a093: test   %r11d,%r11d
  0x0000000002c4a096: jne    0x0000000002c4a0f9  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)

  0x0000000002c4a098: mov    %edx,%ebp
  0x0000000002c4a09a: movzwl %bp,%ebp           ;*i2c  ; - java.lang.CharacterDataLatin1::getProperties@1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x0000000002c4a09d: cmp    $0x100,%ebp
  0x0000000002c4a0a3: jae    0x0000000002c4a0e4
  0x0000000002c4a0a5: movabs $0x7807912d0,%r10  ;   {oop([I)}
  0x0000000002c4a0af: mov    0x10(%r10,%rbp,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x0000000002c4a0b4: test   $0x20000,%eax
  0x0000000002c4a0ba: jne    0x0000000002c4a0ca  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x0000000002c4a0bc: mov    %edx,%eax          ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x0000000002c4a0be: add    $0x20,%rsp
  0x0000000002c4a0c2: pop    %rbp
  0x0000000002c4a0c3: test   %eax,-0x257a0c9(%rip)        # 0x00000000006d0000
        
<writer thread='20984'/>
[Loaded java.io.FileOutputStream$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
<writer thread='18064'/>
                                        ;   {poll_return}
  0x0000000002c4a0c9: retq   
  0x0000000002c4a0ca: mov    %eax,%ebp
  0x0000000002c4a0cc: and    $0x7fc0000,%ebp    ;*iand
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@18 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x0000000002c4a0d2: cmp    $0x7fc0000,%ebp
  0x0000000002c4a0d8: je     0x0000000002c4a10d  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x0000000002c4a0da: shl    $0x5,%eax
  0x0000000002c4a0dd: sar    $0x17,%eax
  0x0000000002c4a0e0: add    %edx,%eax          ;*iadd
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@35 (line 139)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x0000000002c4a0e2: jmp    0x0000000002c4a0be
  0x0000000002c4a0e4: mov    %edx,0x4(%rsp)
  0x0000000002c4a0e8: mov    %edx,0x8(%rsp)
  0x0000000002c4a0ec: mov    $0xffffffe4,%edx
  0x0000000002c4a0f1: xchg   %ax,%ax
  0x0000000002c4a0f3: callq  0x0000000002b757a0  ; OopMap{off=120}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {runtime_call}
  0x0000000002c4a0f8: int3                      ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x0000000002c4a0f9: mov    %edx,(%rsp)
  0x0000000002c4a0fc: mov    %r11d,0x4(%rsp)
  0x0000000002c4a101: mov    $0xffffff65,%edx
  0x0000000002c4a106: nop
  0x0000000002c4a107: callq  0x0000000002b757a0  ; OopMap{off=140}
                                                ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ;   {runtime_call}
  0x0000000002c4a10c: int3                      ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)

  0x0000000002c4a10d: mov    %edx,0x4(%rsp)
  0x0000000002c4a111: mov    %edx,0x8(%rsp)
  0x0000000002c4a115: mov    %eax,0xc(%rsp)
  0x0000000002c4a119: mov    $0xffffff65,%edx
  0x0000000002c4a11e: nop
  0x0000000002c4a11f: callq  0x0000000002b757a0  ; OopMap{off=164}
                                                ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {runtime_call}
  0x0000000002c4a124: int3                      ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x0000000002c4a125: hlt    
  0x0000000002c4a126: hlt    
  0x0000000002c4a127: hlt    
  0x0000000002c4a128: hlt    
  0x0000000002c4a129: hlt    
  0x0000000002c4a12a: hlt    
  0x0000000002c4a12b: hlt    
  0x0000000002c4a12c: hlt    
  0x0000000002c4a12d: hlt    
  0x0000000002c4a12e: hlt    
  0x0000000002c4a12f: hlt    
  0x0000000002c4a130: hlt    
  0x0000000002c4a131: hlt    
  0x0000000002c4a132: hlt    
  0x0000000002c4a133: hlt    
  0x0000000002c4a134: hlt    
  0x0000000002c4a135: hlt    
  0x0000000002c4a136: hlt    
  0x0000000002c4a137: hlt    
  0x0000000002c4a138: hlt    
  0x0000000002c4a139: hlt    
  0x0000000002c4a13a: hlt    
  0x0000000002c4a13b: hlt    
  0x0000000002c4a13c: hlt    
  0x0000000002c4a13d: hlt    
  0x0000000002c4a13e: hlt    
  0x0000000002c4a13f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c4a140: jmpq   0x0000000002b87ee0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002c4a145: callq  0x0000000002c4a14a
  0x0000000002c4a14a: subq   $0x5,(%rsp)
  0x0000000002c4a14f: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c4a154: hlt    
  0x0000000002c4a155: hlt    
  0x0000000002c4a156: hlt    
  0x0000000002c4a157: hlt    
<nmethod compile_id='28' compiler='C2' level='4' entry='0x0000000002c4a080' size='1064' address='0x0000000002c49f50' relocation_offset='288' insts_offset='304' stub_offset='496' scopes_data_offset='584' scopes_pcs_offset='760' dependencies_offset='1048' oops_offset='520' method='java/lang/Character toLowerCase (I)I' bytes='9' count='12546' iicount='12546' stamp='0.472'/>
<writer thread='20984'/>
[Loaded sun.launcher.LauncherHelper from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
<task_queued compile_id='32' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='512' iicount='512' level='3' stamp='0.476' comment='tiered' hot_count='512'/>
<writer thread='8488'/>
Decoding compiled method 0x0000000002c463d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000192c5738} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = int
  #           [sp+0x80]  (sp of caller)
  0x0000000002c46520: mov    0x8(%rdx),%r10d
  0x0000000002c46524: shl    $0x3,%r10
  0x0000000002c46528: cmp    %r10,%rax
  0x0000000002c4652b: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c46531: data16 xchg %ax,%ax
  0x0000000002c46534: nopl   0x0(%rax,%rax,1)
  0x0000000002c4653c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c46540: mov    %eax,-0x6000(%rsp)
  0x0000000002c46547: push   %rbp
  0x0000000002c46548: sub    $0x70,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x0000000002c4654c: mov    %r8d,0x20(%rsp)
  0x0000000002c46551: mov    %rdx,0x28(%rsp)
  0x0000000002c46556: mov    0x10(%rdx),%ebp    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x0000000002c46559: test   %ebp,%ebp
  0x0000000002c4655b: je     0x0000000002c46755
  0x0000000002c46561: mov    0xc(%r12,%rbp,8),%r8d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)

  0x0000000002c46566: mov    0x20(%rsp),%r10d
  0x0000000002c4656b: sub    %r8d,%r10d
  0x0000000002c4656e: test   %r10d,%r10d
  0x0000000002c46571: jg     0x0000000002c4657f  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x0000000002c46573: add    $0x70,%rsp
  0x0000000002c46577: pop    %rbp
  0x0000000002c46578: test   %eax,-0x257657e(%rip)        # 0x00000000006d0000
                                                ;   {poll_return}
  0x0000000002c4657e: retq   
  0x0000000002c4657f: mov    %r8d,%r10d
  0x0000000002c46582: shl    %r10d              ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002c46585: mov    %r10d,%r11d
  0x0000000002c46588: sub    0x20(%rsp),%r11d
  0x0000000002c4658d: add    $0x2,%r11d
  0x0000000002c46591: test   %r11d,%r11d
  0x0000000002c46594: jge    0x0000000002c466bf  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002c4659a: mov    0x20(%rsp),%r10d   ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002c4659f: test   %r10d,%r10d
  0x0000000002c465a2: jle    0x0000000002c465b2  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002c465a4: mov    $0x7ffffff7,%r9d
  0x0000000002c465aa: sub    %r10d,%r9d
  0x0000000002c465ad: test   %r9d,%r9d
  0x0000000002c465b0: jge    0x0000000002c465d0  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002c465b2: mov    %r8d,0x44(%rsp)
  0x0000000002c465b7: mov    0x20(%rsp),%r8d
  0x0000000002c465bc: mov    %r10d,0x40(%rsp)
  0x0000000002c465c1: xchg   %ax,%ax
  0x0000000002c465c3: callq  0x0000000002b761a0  ; OopMap{rbp=NarrowOop [40]=Oop off=168}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x0000000002c465c8: mov    %eax,%r10d
  0x0000000002c465cb: mov    0x44(%rsp),%r8d    ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002c465d0: cmp    $0x80000,%r10d
  0x0000000002c465d7: ja     0x0000000002c46771
  0x0000000002c465dd: movslq %r10d,%r9          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002c465e0: shl    %r9
  0x0000000002c465e3: lea    (%r12,%rbp,8),%r11  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x0000000002c465e7: add    $0x17,%r9
  0x0000000002c465eb: mov    %r9,%rdi
  0x0000000002c465ee: and    $0xfffffffffffffff8,%rdi  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002c465f2: cmp    $0x80000,%r10d
  0x0000000002c465f9: ja     0x0000000002c46708
  0x0000000002c465ff: mov    0x60(%r15),%rbx
  0x0000000002c46603: mov    %rbx,%rcx
  0x0000000002c46606: add    %rdi,%rcx
  0x0000000002c46609: cmp    0x70(%r15),%rcx
  0x0000000002c4660d: jae    0x0000000002c46708  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)

  0x0000000002c46613: mov    %rcx,0x60(%r15)
  0x0000000002c46617: prefetchnta 0x100(%rcx)
  0x0000000002c4661e: movq   $0x1,(%rbx)
  0x0000000002c46625: prefetchnta 0x140(%rcx)
  0x0000000002c4662c: movl   $0xf8000041,0x8(%rbx)  ;   {metadata({type array char})}
  0x0000000002c46633: mov    %r10d,0xc(%rbx)
  0x0000000002c46637: prefetchnta 0x180(%rcx)   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002c4663e: cmp    %r10d,%r8d
  0x0000000002c46641: mov    %r10d,%esi
  0x0000000002c46644: cmovl  %r8d,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002c46648: mov    %rbx,%rdx
  0x0000000002c4664b: add    $0x10,%rdx
  0x0000000002c4664f: shr    $0x3,%r9
  0x0000000002c46653: mov    %r9,%rcx
  0x0000000002c46656: add    $0xfffffffffffffffe,%rcx
  0x0000000002c4665a: cmp    %esi,%r8d
  0x0000000002c4665d: jb     0x0000000002c46779
  0x0000000002c46663: cmp    %esi,%r10d
  0x0000000002c46666: jb     0x0000000002c46779
  0x0000000002c4666c: test   %esi,%esi
  0x0000000002c4666e: jle    0x0000000002c467b6
  0x0000000002c46674: lea    0x10(%r12,%rbp,8),%rbp
  0x0000000002c46679: cmp    %r10d,%esi
  0x0000000002c4667c: jl     0x0000000002c466c8
  0x0000000002c4667e: add    $0xfffffffffffffff0,%rdi
  0x0000000002c46682: shr    $0x3,%rdi
  0x0000000002c46686: mov    %rbp,%rcx
  0x0000000002c46689: mov    %rdi,%r8
  0x0000000002c4668c: movabs $0x2b82c60,%r10
  0x0000000002c46696: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002c46699: mov    %rbx,%r10
  0x0000000002c4669c: shr    $0x3,%r10
  0x0000000002c466a0: mov    0x28(%rsp),%r11
  0x0000000002c466a5: mov    %r10d,0x10(%r11)
  0x0000000002c466a9: mov    %r11,%r10
  0x0000000002c466ac: shr    $0x9,%r10
  0x0000000002c466b0: mov    $0xe6e6000,%r11d
  0x0000000002c466b6: mov    %r12b,(%r11,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x0000000002c466ba: jmpq   0x0000000002c46573
  0x0000000002c466bf: add    $0x2,%r10d         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002c466c3: jmpq   0x0000000002c4659f
  0x0000000002c466c8: movslq %esi,%r8
  0x0000000002c466cb: mov    %r8,%r10
  0x0000000002c466ce: shl    %r10
  0x0000000002c466d1: add    $0x10,%r10
  0x0000000002c466d5: mov    %r10,%r11
  0x0000000002c466d8: and    $0xfffffffffffffff9,%r11
  0x0000000002c466dc: mov    %rbx,%rdi
  0x0000000002c466df: add    %r11,%rdi
  0x0000000002c466e2: shr    $0x3,%r10
  0x0000000002c466e6: sub    %r10,%r9
  0x0000000002c466e9: mov    %r9,%rcx
  0x0000000002c466ec: xor    %rax,%rax
  0x0000000002c466ef: shl    $0x3,%rcx
  0x0000000002c466f3: rep rex.W stos %al,%es:(%rdi)
  0x0000000002c466f6: mov    %rbp,%rcx
  0x0000000002c466f9: movabs $0x2b82980,%r10
  0x0000000002c46703: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002c46706: jmp    0x0000000002c46699
  0x0000000002c46708: mov    %r8d,0x50(%rsp)
  0x0000000002c4670d: mov    %rdi,0x40(%rsp)
  0x0000000002c46712: mov    %r11,0x38(%rsp)
  0x0000000002c46717: mov    %r9,0x30(%rsp)
  0x0000000002c4671c: mov    %r10d,0x24(%rsp)
  0x0000000002c46721: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002c4672b: mov    %r10d,%r8d
  0x0000000002c4672e: nop
  0x0000000002c4672f: callq  0x0000000002c346e0  ; OopMap{rbp=NarrowOop [40]=Oop [56]=Oop off=532}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x0000000002c46734: mov    0x24(%rsp),%r10d
  0x0000000002c46739: mov    0x30(%rsp),%r9
  0x0000000002c4673e: mov    0x38(%rsp),%r11
  0x0000000002c46743: mov    0x40(%rsp),%rdi
  0x0000000002c46748: mov    0x50(%rsp),%r8d
  0x0000000002c4674d: mov    %rax,%rbx
  0x0000000002c46750: jmpq   0x0000000002c4663e
  0x0000000002c46755: mov    0x39c(%r15),%r10d
  0x0000000002c4675c: test   %r10d,%r10d
  0x0000000002c4675f: jne    0x0000000002c467c8
  0x0000000002c46761: mov    $0xfffffff6,%edx
  0x0000000002c46766: mov    0x28(%rsp),%rbp
  0x0000000002c4676b: callq  0x0000000002b757a0  ; OopMap{rbp=Oop off=592}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x0000000002c46770: int3                      ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)

  0x0000000002c46771: movslq %r10d,%r9          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002c46774: jmpq   0x0000000002c465e0
  0x0000000002c46779: mov    %rdx,%rdi
  0x0000000002c4677c: xor    %rax,%rax
  0x0000000002c4677f: shl    $0x3,%rcx
  0x0000000002c46783: rep rex.W stos %al,%es:(%rdi)
  0x0000000002c46786: mov    0x20(%rsp),%ebp
  0x0000000002c4678a: mov    %r11,%rdx
  0x0000000002c4678d: xor    %r8d,%r8d
  0x0000000002c46790: mov    %rbx,%r9
  0x0000000002c46793: xor    %edi,%edi
  0x0000000002c46795: mov    %r11,0x30(%rsp)
  0x0000000002c4679a: mov    %r10d,0x38(%rsp)
  0x0000000002c4679f: mov    %rbx,0x48(%rsp)
  0x0000000002c467a4: data16 xchg %ax,%ax
  0x0000000002c467a7: callq  0x0000000002c31b60  ; OopMap{[40]=Oop [48]=Oop [72]=Oop off=652}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x0000000002c467ac: mov    0x48(%rsp),%rbx
  0x0000000002c467b1: jmpq   0x0000000002c46699
  0x0000000002c467b6: mov    %rdx,%rdi
  0x0000000002c467b9: xor    %rax,%rax
  0x0000000002c467bc: shl    $0x3,%rcx
  0x0000000002c467c0: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002c467c3: jmpq   0x0000000002c46699
  0x0000000002c467c8: mov    $0xfffffff7,%edx
  0x0000000002c467cd: mov    0x28(%rsp),%rbp
  0x0000000002c467d2: nop
  0x0000000002c467d3: callq  0x0000000002b757a0  ; OopMap{rbp=Oop off=696}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x0000000002c467d8: int3   
  0x0000000002c467d9: jmp    0x0000000002c467db  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002c467db: mov    %rax,%rdx
  0x0000000002c467de: jmp    0x0000000002c467e3  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002c467e0: mov    %rax,%rdx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x0000000002c467e3: add    $0x70,%rsp
  0x0000000002c467e7: pop    %rbp
  0x0000000002c467e8: jmpq   0x0000000002c31c20  ;   {runtime_call}
  0x0000000002c467ed: hlt    
  0x0000000002c467ee: hlt    
  0x0000000002c467ef: hlt    
  0x0000000002c467f0: hlt    
  0x0000000002c467f1: hlt    
  0x0000000002c467f2: hlt    
  0x0000000002c467f3: hlt    
  0x0000000002c467f4: hlt    
  0x0000000002c467f5: hlt    
  0x0000000002c467f6: hlt    
  0x0000000002c467f7: hlt    
  0x0000000002c467f8: hlt    
  0x0000000002c467f9: hlt    
  0x0000000002c467fa: hlt    
  0x0000000002c467fb: hlt    
  0x0000000002c467fc: hlt    
  0x0000000002c467fd: hlt    
  0x0000000002c467fe: hlt    
  0x0000000002c467ff: hlt    
[Stub Code]
  0x0000000002c46800: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000002c4680a: jmpq   0x0000000002c4680a  ;   {runtime_call}
[Exception Handler]
  0x0000000002c4680f: jmpq   0x0000000002b87ee0  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000002c46814: callq  0x0000000002c46819
  0x0000000002c46819: subq   $0x5,(%rsp)
  0x0000000002c4681e: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c46823: hlt    
  0x0000000002c46824: hlt    
  0x0000000002c46825: hlt    
  0x0000000002c46826: hlt    
  0x0000000002c46827: hlt    
<nmethod compile_id='31' compiler='C2' level='4' entry='0x0000000002c46520' size='1968' address='0x0000000002c463d0' relocation_offset='288' insts_offset='336' stub_offset='1072' scopes_data_offset='1144' scopes_pcs_offset='1360' dependencies_offset='1888' handler_table_offset='1896' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='32640' iicount='32640' stamp='0.485'/>
<writer thread='20984'/>
Decoding compiled method 0x0000000002c46010:
Code:
[Entry Point]
  # {method} {0x00000000192d1270} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rdx:rdx   = &apos;sun/misc/Unsafe&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = long
  #           [sp+0x70]  (sp of caller)
  0x0000000002c46180: mov    0x8(%rdx),%r10d
  0x0000000002c46184: shl    $0x3,%r10
  0x0000000002c46188: cmp    %r10,%rax
  0x0000000002c4618b: je     0x0000000002c46198
  0x0000000002c46191: jmpq   0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c46196: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000002c46198: mov    %eax,-0x6000(%rsp)
  0x0000000002c4619f: push   %rbp
  0x0000000002c461a0: mov    %rsp,%rbp
  0x0000000002c461a3: sub    $0x60,%rsp
  0x0000000002c461a7: mov    %r8,0x28(%rsp)
  0x0000000002c461ac: cmp    $0x0,%r8
  0x0000000002c461b0: lea    0x28(%rsp),%r8
  0x0000000002c461b5: cmove  0x28(%rsp),%r8
  0x0000000002c461bb: mov    %rdx,0x20(%rsp)
  0x0000000002c461c0: cmp    $0x0,%rdx
  0x0000000002c461c4: lea    0x20(%rsp),%rdx
  0x0000000002c461c9: cmove  0x20(%rsp),%rdx    ; OopMap{[40]=Oop [32]=Oop off=79}
  0x0000000002c461cf: movabs $0x2c461cf,%r10    ;   {section_word}
  0x0000000002c461d9: mov    %r10,0x1e0(%r15)
  0x0000000002c461e0: mov    %rsp,0x1d8(%r15)
  0x0000000002c461e7: cmpb   $0x0,0x59056593(%rip)        # 0x000000005bc9c781
                                                ;   {external_word}
  0x0000000002c461ee: je     0x0000000002c46236
  0x0000000002c461f4: push   %rdx
  0x0000000002c461f5: push   %r8
  0x0000000002c461f7: push   %r9
  0x0000000002c461f9: movabs $0x192d1268,%rdx   ;   {metadata({method} {0x00000000192d1270} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000002c46203: mov    %r15,%rcx
  0x0000000002c46206: sub    $0x20,%rsp
  0x0000000002c4620a: test   $0xf,%esp
  0x0000000002c46210: je     0x0000000002c46228
  0x0000000002c46216: sub    $0x8,%rsp
  0x0000000002c4621a: callq  0x000000005b6bc870  ;   {runtime_call}
  0x0000000002c4621f: add    $0x8,%rsp
  0x0000000002c46223: jmpq   0x0000000002c4622d
  0x0000000002c46228: callq  0x000000005b6bc870  ;   {runtime_call}
  0x0000000002c4622d: add    $0x20,%rsp
  0x0000000002c46231: pop    %r9
  0x0000000002c46233: pop    %r8
  0x0000000002c46235: pop    %rdx
  0x0000000002c46236: lea    0x1f8(%r15),%rcx
  0x0000000002c4623d: movl   $0x4,0x270(%r15)
  0x0000000002c46248: callq  0x000000005b66deb0  ;   {runtime_call}
  0x0000000002c4624d: vzeroupper 
  0x0000000002c46250: movl   $0x5,0x270(%r15)
  0x0000000002c4625b: mov    %r15d,%ecx
  0x0000000002c4625e: shr    $0x4,%ecx
  0x0000000002c46261: and    $0xffc,%ecx
  0x0000000002c46267: movabs $0x9e0000,%r10     ;   {external_word}
  0x0000000002c46271: mov    %ecx,(%r10,%rcx,1)
  0x0000000002c46275: cmpl   $0x0,0x590570d1(%rip)        # 0x000000005bc9d350
                                                ;   {external_word}
  0x0000000002c4627f: jne    0x0000000002c46293
  0x0000000002c46285: cmpl   $0x0,0x30(%r15)
  0x0000000002c4628d: je     0x0000000002c462b4
  0x0000000002c46293: mov    %rax,-0x8(%rbp)
  0x0000000002c46297: mov    %r15,%rcx
  0x0000000002c4629a: mov    %rsp,%r12
  0x0000000002c4629d: sub    $0x20,%rsp
  0x0000000002c462a1: and    $0xfffffffffffffff0,%rsp
  0x0000000002c462a5: callq  0x000000005b6d39e0  ;   {runtime_call}
  0x0000000002c462aa: mov    %r12,%rsp
  0x0000000002c462ad: xor    %r12,%r12
  0x0000000002c462b0: mov    -0x8(%rbp),%rax
  0x0000000002c462b4: movl   $0x8,0x270(%r15)
  0x0000000002c462bf: cmpl   $0x1,0x29c(%r15)
  0x0000000002c462ca: je     0x0000000002c4636e
  0x0000000002c462d0: cmpb   $0x0,0x590564aa(%rip)        # 0x000000005bc9c781
                                                ;   {external_word}
  0x0000000002c462d7: je     0x0000000002c4631d
  0x0000000002c462dd: mov    %rax,-0x8(%rbp)
  0x0000000002c462e1: movabs $0x192d1268,%rdx   ;   {metadata({method} {0x00000000192d1270} &apos;getObjectVolatile&apos; &apos;(Ljava/lang/Object;J)Ljava/lang/Object;&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000002c462eb: mov    %r15,%rcx
  0x0000000002c462ee: sub    $0x20,%rsp
  0x0000000002c462f2: test   $0xf,%esp
  0x0000000002c462f8: je     0x0000000002c46310
  0x0000000002c462fe: sub    $0x8,%rsp
  0x0000000002c46302: callq  0x000000005b6bc870  ;   {runtime_call}
  0x0000000002c46307: add    $0x8,%rsp
  0x0000000002c4630b: jmpq   0x0000000002c46315
  0x0000000002c46310: callq  0x000000005b6bc870  ;   {runtime_call}
  0x0000000002c46315: add    $0x20,%rsp
  0x0000000002c46319: mov    -0x8(%rbp),%rax
  0x0000000002c4631d: movabs $0x0,%r10
  0x0000000002c46327: mov    %r10,0x1d8(%r15)
  0x0000000002c4632e: movabs $0x0,%r10
  0x0000000002c46338: mov    %r10,0x1e0(%r15)
  0x0000000002c4633f: test   %rax,%rax
  0x0000000002c46342: je     0x0000000002c4634b
  0x0000000002c46348: mov    (%rax),%rax
  0x0000000002c4634b: mov    0x38(%r15),%rcx
  0x0000000002c4634f: movl   $0x0,0x100(%rcx)
  0x0000000002c46359: leaveq 
  0x0000000002c4635a: cmpq   $0x0,0x8(%r15)
  0x0000000002c46362: jne    0x0000000002c46369
  0x0000000002c46368: retq   
  0x0000000002c46369: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000002c4636e: mov    %rax,-0x8(%rbp)
  0x0000000002c46372: mov    %rsp,%r12
  0x0000000002c46375: sub    $0x20,%rsp
  0x0000000002c46379: and    $0xfffffffffffffff0,%rsp
  0x0000000002c4637d: callq  0x000000005b6bc890  ;   {runtime_call}
  0x0000000002c46382: mov    %r12,%rsp
  0x0000000002c46385: xor    %r12,%r12
  0x0000000002c46388: mov    -0x8(%rbp),%rax
  0x0000000002c4638c: jmpq   0x0000000002c462d0
  0x0000000002c46391: hlt    
  0x0000000002c46392: hlt    
  0x0000000002c46393: hlt    
  0x0000000002c46394: hlt    
  0x0000000002c46395: hlt    
  0x0000000002c46396: hlt    
  0x0000000002c46397: hlt    
<nmethod compile_id='33' compile_kind='c2n' level='0' entry='0x0000000002c46180' size='904' address='0x0000000002c46010' relocation_offset='288' consts_offset='904' insts_offset='368' method='sun/misc/Unsafe getObjectVolatile (Ljava/lang/Object;J)Ljava/lang/Object;' bytes='0' count='512' iicount='512' stamp='0.487'/>
<task_queued compile_id='34' method='java/util/concurrent/ConcurrentHashMap setTabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V' bytes='19' count='256' iicount='256' level='3' stamp='0.487' comment='tiered' hot_count='256'/>
Decoding compiled method 0x0000000002c45c10:
Code:
[Entry Point]
  # {method} {0x00000000192d1308} &apos;putObjectVolatile&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;)V&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rdx:rdx   = &apos;sun/misc/Unsafe&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = long
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  #           [sp+0x70]  (sp of caller)
  0x0000000002c45d80: mov    0x8(%rdx),%r10d
  0x0000000002c45d84: shl    $0x3,%r10
  0x0000000002c45d88: cmp    %r10,%rax
  0x0000000002c45d8b: je     0x0000000002c45d98
  0x0000000002c45d91: jmpq   0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c45d96: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000002c45d98: mov    %eax,-0x6000(%rsp)
  0x0000000002c45d9f: push   %rbp
  0x0000000002c45da0: mov    %rsp,%rbp
  0x0000000002c45da3: sub    $0x60,%rsp
  0x0000000002c45da7: mov    %rdi,0x40(%rsp)
  0x0000000002c45dac: cmp    $0x0,%rdi
  0x0000000002c45db0: lea    0x40(%rsp),%rax
  0x0000000002c45db5: cmove  0x40(%rsp),%rax
  0x0000000002c45dbb: mov    %rax,0x20(%rsp)
  0x0000000002c45dc0: mov    %r8,0x30(%rsp)
  0x0000000002c45dc5: cmp    $0x0,%r8
  0x0000000002c45dc9: lea    0x30(%rsp),%r8
  0x0000000002c45dce: cmove  0x30(%rsp),%r8
  0x0000000002c45dd4: mov    %rdx,0x28(%rsp)
  0x0000000002c45dd9: cmp    $0x0,%rdx
  0x0000000002c45ddd: lea    0x28(%rsp),%rdx
  0x0000000002c45de2: cmove  0x28(%rsp),%rdx    ; OopMap{[64]=Oop [48]=Oop [40]=Oop off=104}
  0x0000000002c45de8: movabs $0x2c45de8,%r10    ;   {section_word}
  0x0000000002c45df2: mov    %r10,0x1e0(%r15)
  0x0000000002c45df9: mov    %rsp,0x1d8(%r15)
  0x0000000002c45e00: cmpb   $0x0,0x5905697a(%rip)        # 0x000000005bc9c781
                                                ;   {external_word}
  0x0000000002c45e07: je     0x0000000002c45e4f
  0x0000000002c45e0d: push   %rdx
  0x0000000002c45e0e: push   %r8
  0x0000000002c45e10: push   %r9
  0x0000000002c45e12: movabs $0x192d1300,%rdx   ;   {metadata({method} {0x00000000192d1308} &apos;putObjectVolatile&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;)V&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000002c45e1c: mov    %r15,%rcx
  0x0000000002c45e1f: sub    $0x20,%rsp
  0x0000000002c45e23: test   $0xf,%esp
  0x0000000002c45e29: je     0x0000000002c45e41
  0x0000000002c45e2f: sub    $0x8,%rsp
  0x0000000002c45e33: callq  0x000000005b6bc870  ;   {runtime_call}
  0x0000000002c45e38: add    $0x8,%rsp
  0x0000000002c45e3c: jmpq   0x0000000002c45e46
  0x0000000002c45e41: callq  0x000000005b6bc870  ;   {runtime_call}
  0x0000000002c45e46: add    $0x20,%rsp
  0x0000000002c45e4a: pop    %r9
  0x0000000002c45e4c: pop    %r8
  0x0000000002c45e4e: pop    %rdx
  0x0000000002c45e4f: lea    0x1f8(%r15),%rcx
  0x0000000002c45e56: movl   $0x4,0x270(%r15)
  0x0000000002c45e61: callq  0x000000005b679330  ;   {runtime_call}
  0x0000000002c45e66: vzeroupper 
  0x0000000002c45e69: movl   $0x5,0x270(%r15)
  0x0000000002c45e74: mov    %r15d,%ecx
  0x0000000002c45e77: shr    $0x4,%ecx
  0x0000000002c45e7a: and    $0xffc,%ecx
  0x0000000002c45e80: movabs $0x9e0000,%r10     ;   {external_word}
  0x0000000002c45e8a: mov    %ecx,(%r10,%rcx,1)
  0x0000000002c45e8e: cmpl   $0x0,0x590574b8(%rip)        # 0x000000005bc9d350
                                                ;   {external_word}
  0x0000000002c45e98: jne    0x0000000002c45eac
  0x0000000002c45e9e: cmpl   $0x0,0x30(%r15)
  0x0000000002c45ea6: je     0x0000000002c45ec5
  0x0000000002c45eac: mov    %r15,%rcx
  0x0000000002c45eaf: mov    %rsp,%r12
  0x0000000002c45eb2: sub    $0x20,%rsp
  0x0000000002c45eb6: and    $0xfffffffffffffff0,%rsp
  0x0000000002c45eba: callq  0x000000005b6d39e0  ;   {runtime_call}
  0x0000000002c45ebf: mov    %r12,%rsp
  0x0000000002c45ec2: xor    %r12,%r12
  0x0000000002c45ec5: movl   $0x8,0x270(%r15)
  0x0000000002c45ed0: cmpl   $0x1,0x29c(%r15)
  0x0000000002c45edb: je     0x0000000002c45f6b
  0x0000000002c45ee1: cmpb   $0x0,0x59056899(%rip)        # 0x000000005bc9c781
                                                ;   {external_word}
  0x0000000002c45ee8: je     0x0000000002c45f26
  0x0000000002c45eee: movabs $0x192d1300,%rdx   ;   {metadata({method} {0x00000000192d1308} &apos;putObjectVolatile&apos; &apos;(Ljava/lang/Object;JLjava/lang/Object;)V&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000002c45ef8: mov    %r15,%rcx
  0x0000000002c45efb: sub    $0x20,%rsp
  0x0000000002c45eff: test   $0xf,%esp
  0x0000000002c45f05: je     0x0000000002c45f1d
  0x0000000002c45f0b: sub    $0x8,%rsp
  0x0000000002c45f0f: callq  0x000000005b6bc870  ;   {runtime_call}
  0x0000000002c45f14: add    $0x8,%rsp
  0x0000000002c45f18: jmpq   0x0000000002c45f22
  0x0000000002c45f1d: callq  0x000000005b6bc870  ;   {runtime_call}
  0x0000000002c45f22: add    $0x20,%rsp
  0x0000000002c45f26: movabs $0x0,%r10
  0x0000000002c45f30: mov    %r10,0x1d8(%r15)
  0x0000000002c45f37: movabs $0x0,%r10
  0x0000000002c45f41: mov    %r10,0x1e0(%r15)
  0x0000000002c45f48: mov    0x38(%r15),%rcx
  0x0000000002c45f4c: movl   $0x0,0x100(%rcx)
  0x0000000002c45f56: leaveq 
  0x0000000002c45f57: cmpq   $0x0,0x8(%r15)
  0x0000000002c45f5f: jne    0x0000000002c45f66
  0x0000000002c45f65: retq   
  0x0000000002c45f66: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000002c45f6b: mov    %rsp,%r12
  0x0000000002c45f6e: sub    $0x20,%rsp
  0x0000000002c45f72: and    $0xfffffffffffffff0,%rsp
  0x0000000002c45f76: callq  0x000000005b6bc890  ;   {runtime_call}
  0x0000000002c45f7b: mov    %r12,%rsp
  0x0000000002c45f7e: xor    %r12,%r12
  0x0000000002c45f81: jmpq   0x0000000002c45ee1
  0x0000000002c45f86: hlt    
  0x0000000002c45f87: hlt    
<nmethod compile_id='35' compile_kind='c2n' level='0' entry='0x0000000002c45d80' size='888' address='0x0000000002c45c10' relocation_offset='288' consts_offset='888' insts_offset='368' method='sun/misc/Unsafe putObjectVolatile (Ljava/lang/Object;JLjava/lang/Object;)V' bytes='0' count='256' iicount='256' stamp='0.489'/>
<writer thread='9088'/>
Decoding compiled method 0x0000000002c496d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000000194123a0} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rdx:rdx   = &apos;[Ljava/util/concurrent/ConcurrentHashMap$Node;&apos;
  # parm1:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000002c49820: mov    %eax,-0x6000(%rsp)
  0x0000000002c49827: push   %rbp
  0x0000000002c49828: sub    $0x40,%rsp
  0x0000000002c4982c: movabs $0x19527448,%rcx   ;   {metadata(method data for {method} {0x00000000194123a0} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002c49836: mov    0xdc(%rcx),%eax
  0x0000000002c4983c: add    $0x8,%eax
  0x0000000002c4983f: mov    %eax,0xdc(%rcx)
  0x0000000002c49845: movabs $0x19412398,%rcx   ;   {metadata({method} {0x00000000194123a0} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002c4984f: and    $0x1ff8,%eax
  0x0000000002c49855: cmp    $0x0,%eax
  0x0000000002c49858: je     0x0000000002c49969  ;*getstatic U
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@0 (line 755)

  0x0000000002c4985e: movslq %r8d,%rax
  0x0000000002c49861: mov    $0x2,%ecx
  0x0000000002c49866: shl    %cl,%rax
  0x0000000002c49869: movabs $0x10,%r10
  0x0000000002c49873: add    %r10,%rax
  0x0000000002c49876: mov    (%rdx,%rax,1),%eax
  0x0000000002c49879: shl    $0x3,%rax
  0x0000000002c4987d: cmp    $0x0,%rax
  0x0000000002c49881: jne    0x0000000002c4989c
  0x0000000002c49883: movabs $0x19527448,%rdi   ;   {metadata(method data for {method} {0x00000000194123a0} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002c4988d: orl    $0x100,0x130(%rdi)
  0x0000000002c49897: jmpq   0x0000000002c4995d
  0x0000000002c4989c: movabs $0x7c0036fd0,%rbx  ;   {metadata(&apos;java/util/concurrent/ConcurrentHashMap$Node&apos;)}
  0x0000000002c498a6: mov    0x8(%rax),%edi
  0x0000000002c498a9: shl    $0x3,%rdi
  0x0000000002c498ad: cmp    0x30(%rdi),%rbx
  0x0000000002c498b1: jne    0x0000000002c49941
  0x0000000002c498b7: movabs $0x19527448,%rdi   ;   {metadata(method data for {method} {0x00000000194123a0} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002c498c1: mov    0x8(%rax),%ebx
  0x0000000002c498c4: shl    $0x3,%rbx
  0x0000000002c498c8: cmp    0x140(%rdi),%rbx
  0x0000000002c498cf: jne    0x0000000002c498de
  0x0000000002c498d1: addq   $0x1,0x148(%rdi)
  0x0000000002c498d9: jmpq   0x0000000002c4995d
  0x0000000002c498de: cmp    0x150(%rdi),%rbx
  0x0000000002c498e5: jne    0x0000000002c498f4
  0x0000000002c498e7: addq   $0x1,0x158(%rdi)
  0x0000000002c498ef: jmpq   0x0000000002c4995d
  0x0000000002c498f4: cmpq   $0x0,0x140(%rdi)
  0x0000000002c498ff: jne    0x0000000002c49918
  0x0000000002c49901: mov    %rbx,0x140(%rdi)
  0x0000000002c49908: movq   $0x1,0x148(%rdi)
  0x0000000002c49913: jmpq   0x0000000002c4995d
  0x0000000002c49918: cmpq   $0x0,0x150(%rdi)
  0x0000000002c49923: jne    0x0000000002c4993c
  0x0000000002c49925: mov    %rbx,0x150(%rdi)
  0x0000000002c4992c: movq   $0x1,0x158(%rdi)
  0x0000000002c49937: jmpq   0x0000000002c4995d
  0x0000000002c4993c: jmpq   0x0000000002c4995d
  0x0000000002c49941: movabs $0x19527448,%rdi   ;   {metadata(method data for {method} {0x00000000194123a0} &apos;tabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002c4994b: subq   $0x1,0x138(%rdi)
  0x0000000002c49953: jmpq   0x0000000002c49980
  0x0000000002c49958: jmpq   0x0000000002c4995d  ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)

  0x0000000002c4995d: add    $0x40,%rsp
  0x0000000002c49961: pop    %rbp
  0x0000000002c49962: test   %eax,-0x2579868(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c49968: retq   
  0x0000000002c49969: mov    %rcx,0x8(%rsp)
  0x0000000002c4996e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c49976: callq  0x0000000002c31360  ; OopMap{rdx=Oop off=347}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1 (line 755)
                                                ;   {runtime_call}
  0x0000000002c4997b: jmpq   0x0000000002c4985e
  0x0000000002c49980: mov    %rax,(%rsp)
  0x0000000002c49984: callq  0x0000000002c2ee80  ; OopMap{rdx=Oop off=361}
                                                ;*checkcast
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@17 (line 755)
                                                ;   {runtime_call}
  0x0000000002c49989: nop
  0x0000000002c4998a: nop
  0x0000000002c4998b: mov    0x2a8(%r15),%rax
  0x0000000002c49992: movabs $0x0,%r10
  0x0000000002c4999c: mov    %r10,0x2a8(%r15)
  0x0000000002c499a3: movabs $0x0,%r10
  0x0000000002c499ad: mov    %r10,0x2b0(%r15)
  0x0000000002c499b4: add    $0x40,%rsp
  0x0000000002c499b8: pop    %rbp
  0x0000000002c499b9: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c499be: hlt    
  0x0000000002c499bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c499c0: callq  0x0000000002c2eb20  ;   {no_reloc}
  0x0000000002c499c5: mov    %rsp,-0x28(%rsp)
  0x0000000002c499ca: sub    $0x80,%rsp
  0x0000000002c499d1: mov    %rax,0x78(%rsp)
  0x0000000002c499d6: mov    %rcx,0x70(%rsp)
  0x0000000002c499db: mov    %rdx,0x68(%rsp)
  0x0000000002c499e0: mov    %rbx,0x60(%rsp)
  0x0000000002c499e5: mov    %rbp,0x50(%rsp)
  0x0000000002c499ea: mov    %rsi,0x48(%rsp)
  0x0000000002c499ef: mov    %rdi,0x40(%rsp)
  0x0000000002c499f4: mov    %r8,0x38(%rsp)
  0x0000000002c499f9: mov    %r9,0x30(%rsp)
  0x0000000002c499fe: mov    %r10,0x28(%rsp)
  0x0000000002c49a03: mov    %r11,0x20(%rsp)
  0x0000000002c49a08: mov    %r12,0x18(%rsp)
  0x0000000002c49a0d: mov    %r13,0x10(%rsp)
  0x0000000002c49a12: mov    %r14,0x8(%rsp)
  0x0000000002c49a17: mov    %r15,(%rsp)
  0x0000000002c49a1b: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c49a25: movabs $0x2c499c5,%rdx    ;   {internal_word}
  0x0000000002c49a2f: mov    %rsp,%r8
  0x0000000002c49a32: and    $0xfffffffffffffff0,%rsp
  0x0000000002c49a36: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c49a3b: hlt    
[Deopt Handler Code]
  0x0000000002c49a3c: movabs $0x2c49a3c,%r10    ;   {section_word}
  0x0000000002c49a46: push   %r10
  0x0000000002c49a48: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c49a4d: hlt    
  0x0000000002c49a4e: hlt    
  0x0000000002c49a4f: hlt    
<nmethod compile_id='32' compiler='C1' level='3' entry='0x0000000002c49820' size='1048' address='0x0000000002c496d0' relocation_offset='288' insts_offset='336' stub_offset='752' scopes_data_offset='912' scopes_pcs_offset='944' dependencies_offset='1040' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='780' iicount='780' stamp='0.492'/>
<writer thread='20984'/>
<task_queued compile_id='36' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='1408' iicount='1408' level='3' stamp='0.492' comment='tiered' hot_count='1408'/>
<task_queued compile_id='37' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='640' iicount='640' level='3' stamp='0.492' comment='tiered' hot_count='640'/>
<task_queued compile_id='38' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='3072' backedge_count='2629' iicount='3072' level='3' stamp='0.492' comment='tiered' hot_count='3072'/>
<task_queued compile_id='39' method='java/net/URL getFile ()Ljava/lang/String;' bytes='5' count='512' iicount='512' level='1' stamp='0.492' comment='tiered' hot_count='512'/>
<writer thread='9088'/>
Decoding compiled method 0x0000000002c49390:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000000194124f0} &apos;setTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;
  # parm0:    rdx:rdx   = &apos;[Ljava/util/concurrent/ConcurrentHashMap$Node;&apos;
  # parm1:    r8        = int
  # parm2:    r9:r9     = &apos;java/util/concurrent/ConcurrentHashMap$Node&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000002c494e0: mov    %eax,-0x6000(%rsp)
  0x0000000002c494e7: push   %rbp
  0x0000000002c494e8: sub    $0x40,%rsp
  0x0000000002c494ec: movabs $0x195275f8,%rcx   ;   {metadata(method data for {method} {0x00000000194124f0} &apos;setTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002c494f6: mov    0xdc(%rcx),%esi
  0x0000000002c494fc: add    $0x8,%esi
  0x0000000002c494ff: mov    %esi,0xdc(%rcx)
  0x0000000002c49505: movabs $0x194124e8,%rcx   ;   {metadata({method} {0x00000000194124f0} &apos;setTabAt&apos; &apos;([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V&apos; in &apos;java/util/concurrent/ConcurrentHashMap&apos;)}
  0x0000000002c4950f: and    $0x1ff8,%esi
  0x0000000002c49515: cmp    $0x0,%esi
  0x0000000002c49518: je     0x0000000002c49568  ;*getstatic U
                                                ; - java.util.concurrent.ConcurrentHashMap::setTabAt@0 (line 764)

  0x0000000002c4951e: movslq %r8d,%r8
  0x0000000002c49521: mov    $0x2,%ecx
  0x0000000002c49526: shl    %cl,
<writer thread='20984'/>
[Loaded sun.misc.URLClassPath$FileLoader$1 from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
<writer thread='9088'/>
%r8
  0x0000000002c49529: movabs $0x10,%r10
  0x0000000002c49533: add    %r10,%r8
  0x0000000002c49536: mov    %r9,%r10
  0x0000000002c49539: shr    $0x3,%r10
  0x0000000002c4953d: mov    %r10d,(%rdx,%r8,1)
  0x0000000002c49541: lea    (%rdx,%r8,1),%rsi
  0x0000000002c49545: shr    $0x9,%rsi
  0x0000000002c49549: movabs $0xe6e6000,%rdi
  0x0000000002c49553: movb   $0x0,(%rsi,%rdi,1)
  0x0000000002c49557: lock addl $0x0,(%rsp)
  0x0000000002c4955c: add    $0x40,%rsp
  0x0000000002c49560: pop    %rbp
  0x0000000002c49561: test   %eax,-0x2579467(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c49567: retq   
  0x0000000002c49568: mov    %rcx,0x8(%rsp)
  0x0000000002c4956d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c49575: callq  0x0000000002c31360  ; OopMap{rdx=Oop r9=Oop off=154}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::setTabAt@-1 (line 764)
                                                ;   {runtime_call}
  0x0000000002c4957a: jmp    0x0000000002c4951e
  0x0000000002c4957c: nop
  0x0000000002c4957d: nop
  0x0000000002c4957e: mov    0x2a8(%r15),%rax
  0x0000000002c49585: movabs $0x0,%r10
  0x0000000002c4958f: mov    %r10,0x2a8(%r15)
  0x0000000002c49596: movabs $0x0,%r10
  0x0000000002c495a0: mov    %r10,0x2b0(%r15)
  0x0000000002c495a7: add    $0x40,%rsp
  0x0000000002c495ab: pop    %rbp
  0x0000000002c495ac: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c495b1: hlt    
  0x0000000002c495b2: hlt    
  0x0000000002c495b3: hlt    
  0x0000000002c495b4: hlt    
  0x0000000002c495b5: hlt    
  0x0000000002c495b6: hlt    
  0x0000000002c495b7: hlt    
  0x0000000002c495b8: hlt    
  0x0000000002c495b9: hlt    
  0x0000000002c495ba: hlt    
  0x0000000002c495bb: hlt    
  0x0000000002c495bc: hlt    
  0x0000000002c495bd: hlt    
  0x0000000002c495be: hlt    
  0x0000000002c495bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c495c0: callq  0x0000000002c2eb20  ;   {no_reloc}
  0x0000000002c495c5: mov    %rsp,-0x28(%rsp)
  0x0000000002c495ca: sub    $0x80,%rsp
  0x0000000002c495d1: mov    %rax,0x78(%rsp)
  0x0000000002c495d6: mov    %rcx,0x70(%rsp)
  0x0000000002c495db: mov    %rdx,0x68(%rsp)
  0x0000000002c495e0: mov    %rbx,0x60(%rsp)
  0x0000000002c495e5: mov    %rbp,0x50(%rsp)
  0x0000000002c495ea: mov    %rsi,0x48(%rsp)
  0x0000000002c495ef: mov    %rdi,0x40(%rsp)
  0x0000000002c495f4: mov    %r8,0x38(%rsp)
  0x0000000002c495f9: mov    %r9,0x30(%rsp)
  0x0000000002c495fe: mov    %r10,0x28(%rsp)
  0x0000000002c49603: mov    %r11,0x20(%rsp)
  0x0000000002c49608: mov    %r12,0x18(%rsp)
  0x0000000002c4960d: mov    %r13,0x10(%rsp)
  0x0000000002c49612: mov    %r14,0x8(%rsp)
  0x0000000002c49617: mov    %r15,(%rsp)
  0x0000000002c4961b: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c49625: movabs $0x2c495c5,%rdx    ;   {internal_word}
  0x0000000002c4962f: mov    %rsp,%r8
  0x0000000002c49632: and    $0xfffffffffffffff0,%rsp
  0x0000000002c49636: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c4963b: hlt    
[Deopt Handler Code]
  0x0000000002c4963c: movabs $0x2c4963c,%r10    ;   {section_word}
  0x0000000002c49646: push   %r10
  0x0000000002c49648: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c4964d: hlt    
  0x0000000002c4964e: hlt    
  0x0000000002c4964f: hlt    
<nmethod compile_id='34' compiler='C1' level='3' entry='0x0000000002c494e0' size='816' address='0x0000000002c49390' relocation_offset='288' insts_offset='336' stub_offset='560' scopes_data_offset='720' scopes_pcs_offset='744' dependencies_offset='808' method='java/util/concurrent/ConcurrentHashMap setTabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V' bytes='19' count='336' iicount='336' stamp='0.499'/>
Decoding compiled method 0x0000000002c48c10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019254e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002c48d80: mov    0x8(%rdx),%r10d
  0x0000000002c48d84: shl    $0x3,%r10
  0x0000000002c48d88: cmp    %rax,%r10
  0x0000000002c48d8b: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c48d91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c48d9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c48da0: mov    %eax,-0x6000(%rsp)
  0x0000000002c48da7: push   %rbp
  0x0000000002c48da8: sub    $0x30,%rsp
  0x0000000002c48dac: mov    %rdx,0x20(%rsp)
  0x0000000002c48db1: movabs $0x1948d958,%rax   ;   {metadata(method data for {method} {0x0000000019254e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c48dbb: mov    0xdc(%rax),%esi
  0x0000000002c48dc1: add    $0x8,%esi
  0x0000000002c48dc4: mov    %esi,0xdc(%rax)
  0x0000000002c48dca: movabs $0x19254e48,%rax   ;   {metadata({method} {0x0000000019254e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c48dd4: and    $0x1ff8,%esi
  0x0000000002c48dda: cmp    $0x0,%esi
  0x0000000002c48ddd: je     0x0000000002c48f9b  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x0000000002c48de3: mov    0xc(%rdx),%eax
  0x0000000002c48de6: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x0000000002c48dea: mov    0xc(%r8),%esi      ; implicit exception: dispatches to 0x0000000002c48fb2
  0x0000000002c48dee: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)

  0x0000000002c48df2: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x0000000002c48fb7
  0x0000000002c48df5: cmp    $0x0,%r9d
  0x0000000002c48df9: movabs $0x1948d958,%rbx   ;   {metadata(method data for {method} {0x0000000019254e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c48e03: movabs $0x108,%rcx
  0x0000000002c48e0d: jl     0x0000000002c48e1d
  0x0000000002c48e13: movabs $0x118,%rcx
  0x0000000002c48e1d: mov    (%rbx,%rcx,1),%r11
  0x0000000002c48e21: lea    0x1(%r11),%r11
  0x0000000002c48e25: mov    %r11,(%rbx,%rcx,1)
  0x0000000002c48e29: jl     0x0000000002c48f68  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x0000000002c48e2f: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x0000000002c48fbc
  0x0000000002c48e32: sub    %edi,%ebx
  0x0000000002c48e34: cmp    %ebx,%r9d
  0x0000000002c48e37: movabs $0x1948d958,%rbx   ;   {metadata(method data for {method} {0x0000000019254e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c48e41: movabs $0x128,%rcx
  0x0000000002c48e4b: jle    0x0000000002c48e5b
  0x0000000002c48e51: movabs $0x138,%rcx
  0x0000000002c48e5b: mov    (%rbx,%rcx,1),%r11
  0x0000000002c48e5f: lea    0x1(%r11),%r11
  0x0000000002c48e63: mov    %r11,(%rbx,%rcx,1)
  0x0000000002c48e67: jg     0x0000000002c48f68  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x0000000002c48e6d: mov    %r9,%rbx
  0x0000000002c48e70: mov    $0x0,%ecx
  0x0000000002c48e75: jmpq   0x0000000002c48f28  ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x0000000002c48e7a: nopw   0x0(%rax,%rax,1)
  0x0000000002c48e80: mov    %rbx,%r11
  0x0000000002c48e83: inc    %r11d
  0x0000000002c48e86: movslq %ebx,%r13
  0x0000000002c48e89: cmp    0xc(%rax),%ebx
  0x0000000002c48e8c: jae    0x0000000002c48fc1
  0x0000000002c48e92: movzwl 0x10(%rax,%r13,2),%ebx  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x0000000002c48e98: mov    %rcx,%r13
  0x0000000002c48e9b: inc    %r13d
  0x0000000002c48e9e: movslq %ecx,%r14
  0x0000000002c48ea1: cmp    0xc(%rsi),%ecx
  0x0000000002c48ea4: jae    0x0000000002c48fca
  0x0000000002c48eaa: movzwl 0x10(%rsi,%r14,2),%ecx  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x0000000002c48eb0: movabs $0x1948d958,%r14   ;   {metadata(method data for {method} {0x0000000019254e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c48eba: mov    0xe0(%r14),%edx
  0x0000000002c48ec1: add    $0x8,%edx
  0x0000000002c48ec4: mov    %edx,0xe0(%r14)
  0x0000000002c48ecb: movabs $0x19254e48,%r14   ;   {metadata({method} {0x0000000019254e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c48ed5: and    $0xfff8,%edx
  0x0000000002c48edb: cmp    $0x0,%edx
  0x0000000002c48ede: je     0x0000000002c48fd3  ; OopMap{rsi=Oop rax=Oop r8=Oop [32]=Oop off=356}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x0000000002c48ee4: test   %eax,-0x2578dea(%rip)        # 0x00000000006d0100
                                                ;   {poll}
  0x0000000002c48eea: cmp    %ecx,%ebx
  0x0000000002c48eec: movabs $0x1948d958,%rbx   ;   {metadata(method data for {method} {0x0000000019254e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c48ef6: movabs $0x168,%rdx
  0x0000000002c48f00: je     0x0000000002c48f10
  0x0000000002c48f06: movabs $0x178,%rdx
  0x0000000002c48f10: mov    (%rbx,%rdx,1),%rcx
  0x0000000002c48f14: lea    0x1(%rcx),%rcx
  0x0000000002c48f18: mov    %rcx,(%rbx,%rdx,1)
  0x0000000002c48f1c: jne    0x0000000002c48f79  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x0000000002c48f22: mov    %r13,%rcx
  0x0000000002c48f25: mov    %r11,%rbx          ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x0000000002c48f28: dec    %edi
  0x0000000002c48f2a: cmp    $0x0,%edi
  0x0000000002c48f2d: movabs $0x1948d958,%r11   ;   {metadata(method data for {method} {0x0000000019254e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c48f37: movabs $0x148,%r13
  0x0000000002c48f41: jl     0x0000000002c48f51
  0x0000000002c48f47: movabs $0x158,%r13
  0x0000000002c48f51: mov    (%r11,%r13,1),%r14
  0x0000000002c48f55: lea    0x1(%r14),%r14
  0x0000000002c48f59: mov    %r14,(%r11,%r13,1)
  0x0000000002c48f5d: jl     0x0000000002c48f8a
  0x0000000002c48f63: jmpq   0x0000000002c48e80  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x0000000002c48f68: mov    $0x0,%eax
  0x0000000002c48f6d: add    $0x30,%rsp
  0x0000000002c48f71: pop    %rbp
  0x0000000002c48f72: test   %eax,-0x2578e78(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c48f78: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x0000000002c48f79: mov    $0x0,%eax
  0x0000000002c48f7e: add    $0x30,%rsp
  0x0000000002c48f82: pop    %rbp
  0x0000000002c48f83: test   %eax,-0x2578e89(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c48f89: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x0000000002c48f8a: mov    $0x1,%eax
  0x0000000002c48f8f: add    $0x30,%rsp
  0x0000000002c48f93: pop    %rbp
  0x0000000002c48f94: test   %eax,-0x2578e9a(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c48f9a: retq   
  0x0000000002c48f9b: mov    %rax,0x8(%rsp)
  0x0000000002c48fa0: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c48fa8: callq  0x0000000002c31360  ; OopMap{rdx=Oop [32]=Oop r8=Oop off=557}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x0000000002c48fad: jmpq   0x0000000002c48de3
  0x0000000002c48fb2: callq  0x0000000002c2cc80  ; OopMap{rdx=Oop [32]=Oop r8=Oop rax=Oop off=567}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x0000000002c48fb7: callq  0x0000000002c2cc80  ; OopMap{rdx=Oop [32]=Oop r8=Oop rax=Oop rsi=Oop off=572}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x0000000002c48fbc: callq  0x0000000002c2cc80  ; OopMap{rsi=Oop rax=Oop r8=Oop rdx=Oop [32]=Oop off=577}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x0000000002c48fc1: mov    %rbx,(%rsp)
  0x0000000002c48fc5: callq  0x0000000002b9f300  ; OopMap{rsi=Oop rax=Oop r8=Oop [32]=Oop off=586}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x0000000002c48fca: mov    %rcx,(%rsp)
  0x0000000002c48fce: callq  0x0000000002b9f300  ; OopMap{rsi=Oop rax=Oop r8=Oop [32]=Oop off=595}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x0000000002c48fd3: mov    %r14,0x8(%rsp)
  0x0000000002c48fd8: movq   $0x41,(%rsp)
  0x0000000002c48fe0: callq  0x0000000002c31360  ; OopMap{rsi=Oop rax=Oop r8=Oop [32]=Oop off=613}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x0000000002c48fe5: jmpq   0x0000000002c48ee4
  0x0000000002c48fea: nop
  0x0000000002c48feb: nop
  0x0000000002c48fec: mov    0x2a8(%r15),%rax
  0x0000000002c48ff3: movabs $0x0,%r10
  0x0000000002c48ffd: mov    %r10,0x2a8(%r15)
  0x0000000002c49004: movabs $0x0,%r10
  0x0000000002c4900e: mov    %r10,0x2b0(%r15)
  0x0000000002c49015: add    $0x30,%rsp
  0x0000000002c49019: pop    %rbp
  0x0000000002c4901a: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c4901f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c49020: callq  0x0000000002c2eb20  ;   {no_reloc}
  0x0000000002c49025: mov    %rsp,-0x28(%rsp)
  0x0000000002c4902a: sub    $0x80,%rsp
  0x0000000002c49031: mov    %rax,0x78(%rsp)
  0x0000000002c49036: mov    %rcx,0x70(%rsp)
  0x0000000002c4903b: mov    %rdx,0x68(%rsp)
  0x0000000002c49040: mov    %rbx,0x60(%rsp)
  0x0000000002c49045: mov    %rbp,0x50(%rsp)
  0x0000000002c4904a: mov    %rsi,0x48(%rsp)
  0x0000000002c4904f: mov    %rdi,0x40(%rsp)
  0x0000000002c49054: mov    %r8,0x38(%rsp)
  0x0000000002c49059: mov    %r9,0x30(%rsp)
  0x0000000002c4905e: mov    %r10,0x28(%rsp)
  0x0000000002c49063: mov    %r11,0x20(%rsp)
  0x0000000002c49068: mov    %r12,0x18(%rsp)
  0x0000000002c4906d: mov    %r13,0x10(%rsp)
  0x0000000002c49072: mov    %r14,0x8(%rsp)
  0x0000000002c49077: mov    %r15,(%rsp)
  0x0000000002c4907b: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c49085: movabs $0x2c49025,%rdx    ;   {internal_word}
  0x0000000002c4908f: mov    %rsp,%r8
  0x0000000002c49092: and    $0xfffffffffffffff0,%rsp
  0x0000000002c49096: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c4909b: hlt    
[Deopt Handler Code]
  0x0000000002c4909c: movabs $0x2c4909c,%r10    ;   {section_word}
  0x0000000002c490a6: push   %r10
  0x0000000002c490a8: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c490ad: hlt    
  0x0000000002c490ae: hlt    
  0x0000000002c490af: hlt    
<nmethod compile_id='38' compiler='C1' level='3' entry='0x0000000002c48d80' size='1896' address='0x0000000002c48c10' relocation_offset='288' insts_offset='368' stub_offset='1040' scopes_data_offset='1192' scopes_pcs_offset='1456' dependencies_offset='1856' nul_chk_table_offset='1864' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='3131' backedge_count='2725' iicount='3131' stamp='0.504'/>
Decoding compiled method 0x0000000002c487d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019254ee8} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000002c48940: mov    0x8(%rdx),%r10d
  0x0000000002c48944: shl    $0x3,%r10
  0x0000000002c48948: cmp    %rax,%r10
  0x0000000002c4894b: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c48951: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c4895c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c48960: mov    %eax,-0x6000(%rsp)
  0x0000000002c48967: push   %rbp
  0x0000000002c48968: sub    $0x40,%rsp
  0x0000000002c4896c: movabs $0x194ed8a8,%r9    ;   {metadata(method data for {method} {0x0000000019254ee8} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c48976: mov    0xdc(%r9),%esi
  0x0000000002c4897d: add    $0x8,%esi
  0x0000000002c48980: mov    %esi,0xdc(%r9)
  0x0000000002c48987: movabs $0x19254ee0,%r9    ;   {metadata({method} {0x0000000019254ee8} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c48991: and    $0x1ff8,%esi
  0x0000000002c48997: cmp    $0x0,%esi
  0x0000000002c4899a: je     0x0000000002c48a63  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1434)

  0x0000000002c489a0: mov    %rdx,%r9
  0x0000000002c489a3: movabs $0x194ed8a8,%rsi   ;   {metadata(method data for {method} {0x0000000019254ee8} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c489ad: mov    0x8(%r9),%r9d
  0x0000000002c489b1: shl    $0x3,%r9
  0x0000000002c489b5: cmp    0x110(%rsi),%r9
  0x0000000002c489bc: jne    0x0000000002c489cb
  0x0000000002c489be: addq   $0x1,0x118(%rsi)
  0x0000000002c489c6: jmpq   0x0000000002c48a31
  0x0000000002c489cb: cmp    0x120(%rsi),%r9
  0x0000000002c489d2: jne    0x0000000002c489e1
  0x0000000002c489d4: addq   $0x1,0x128(%rsi)
  0x0000000002c489dc: jmpq   0x0000000002c48a31
  0x0000000002c489e1: cmpq   $0x0,0x110(%rsi)
  0x0000000002c489ec: jne    0x0000000002c48a05
  0x0000000002c489ee: mov    %r9,0x110(%rsi)
  0x0000000002c489f5: movq   $0x1,0x118(%rsi)
  0x0000000002c48a00: jmpq   0x0000000002c48a31
  0x0000000002c48a05: cmpq   $0x0,0x120(%rsi)
  0x0000000002c48a10: jne    0x0000000002c48a29
  0x0000000002c48a12: mov    %r9,0x120(%rsi)
  0x0000000002c48a19: movq   $0x1,0x128(%rsi)
  0x0000000002c48a24: jmpq   0x0000000002c48a31
  0x0000000002c48a29: addq   $0x1,0x108(%rsi)
  0x0000000002c48a31: mov    %r8,%rsi
  0x0000000002c48a34: mov    %rsi,%r8
  0x0000000002c48a37: mov    $0x0,%r9d
  0x0000000002c48a3d: mov    %rdx,%rdi
  0x0000000002c48a40: mov    %rdi,%rdx          ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)

  0x0000000002c48a43: mov    %rsi,0x28(%rsp)
  0x0000000002c48a48: mov    %rdi,0x20(%rsp)
  0x0000000002c48a4d: nop
  0x0000000002c48a4e: nop
  0x0000000002c48a4f: callq  0x0000000002b761a0  ; OopMap{[40]=Oop [32]=Oop off=276}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)
                                                ;   {optimized virtual_call}
  0x0000000002c48a54: and    $0x1,%eax
  0x0000000002c48a57: add    $0x40,%rsp
  0x0000000002c48a5b: pop    %rbp
  0x0000000002c48a5c: test   %eax,-0x2578962(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c48a62: retq   
  0x0000000002c48a63: mov    %r9,0x8(%rsp)
  0x0000000002c48a68: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c48a70: callq  0x0000000002c31360  ; OopMap{rdx=Oop r8=Oop off=309}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1434)
                                                ;   {runtime_call}
  0x0000000002c48a75: jmpq   0x0000000002c489a0
  0x0000000002c48a7a: nop
  0x0000000002c48a7b: nop
  0x0000000002c48a7c: mov    0x2a8(%r15),%rax
  0x0000000002c48a83: movabs $0x0,%r10
  0x0000000002c48a8d: mov    %r10,0x2a8(%r15)
  0x0000000002c48a94: movabs $0x0,%r10
  0x0000000002c48a9e: mov    %r10,0x2b0(%r15)
  0x0000000002c48aa5: add    $0x40,%rsp
  0x0000000002c48aa9: pop    %rbp
  0x0000000002c48aaa: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c48aaf: hlt    
  0x0000000002c48ab0: hlt    
  0x0000000002c48ab1: hlt    
  0x0000000002c48ab2: hlt    
  0x0000000002c48ab3: hlt    
  0x0000000002c48ab4: hlt    
  0x0000000002c48ab5: hlt    
  0x0000000002c48ab6: hlt    
  0x0000000002c48ab7: hlt    
  0x0000000002c48ab8: hlt    
  0x0000000002c48ab9: hlt    
  0x0000000002c48aba: hlt    
  0x0000000002c48abb: hlt    
  0x0000000002c48abc: hlt    
  0x0000000002c48abd: hlt    
  0x0000000002c48abe: hlt    
  0x0000000002c48abf: hlt    
[Stub Code]
  0x0000000002c48ac0: nop                       ;   {no_reloc}
  0x0000000002c48ac1: nop
  0x0000000002c48ac2: nop
  0x0000000002c48ac3: nop
  0x0000000002c48ac4: nop
  0x0000000002c48ac5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002c48acf: jmpq   0x0000000002c48acf  ;   {runtime_call}
[Exception Handler]
  0x0000000002c48ad4: callq  0x0000000002c2eb20  ;   {runtime_call}
  0x0000000002c48ad9: mov    %rsp,-0x28(%rsp)
  0x0000000002c48ade: sub    $0x80,%rsp
  0x0000000002c48ae5: mov    %rax,0x78(%rsp)
  0x0000000002c48aea: mov    %rcx,0x70(%rsp)
  0x0000000002c48aef: mov    %rdx,0x68(%rsp)
  0x0000000002c48af4: mov    %rbx,0x60(%rsp)
  0x0000000002c48af9: mov    %rbp,0x50(%rsp)
  0x0000000002c48afe: mov    %rsi,0x48(%rsp)
  0x0000000002c48b03: mov    %rdi,0x40(%rsp)
  0x0000000002c48b08: mov    %r8,0x38(%rsp)
  0x0000000002c48b0d: mov    %r9,0x30(%rsp)
  0x0000000002c48b12: mov    %r10,0x28(%rsp)
  0x0000000002c48b17: mov    %r11,0x20(%rsp)
  0x0000000002c48b1c: mov    %r12,0x18(%rsp)
  0x0000000002c48b21: mov    %r13,0x10(%rsp)
  0x0000000002c48b26: mov    %r14,0x8(%rsp)
  0x0000000002c48b2b: mov    %r15,(%rsp)
  0x0000000002c48b2f: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c48b39: movabs $0x2c48ad9,%rdx    ;   {internal_word}
  0x0000000002c48b43: mov    %rsp,%r8
  0x0000000002c48b46: and    $0xfffffffffffffff0,%rsp
  0x0000000002c48b4a: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c48b4f: hlt    
[Deopt Handler Code]
  0x0000000002c48b50: movabs $0x2c48b50,%r10    ;   {section_word}
  0x0000000002c48b5a: push   %r10
  0x0000000002c48b5c: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c48b61: hlt    
  0x0000000002c48b62: hlt    
  0x0000000002c48b63: hlt    
  0x0000000002c48b64: hlt    
  0x0000000002c48b65: hlt    
  0x0000000002c48b66: hlt    
  0x0000000002c48b67: hlt    
<nmethod compile_id='36' compiler='C1' level='3' entry='0x0000000002c48940' size='1072' address='0x0000000002c487d0' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='928' scopes_pcs_offset='968' dependencies_offset='1064' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='1516' iicount='1516' stamp='0.512'/>
<writer thread='20984'/>
<task_queued compile_id='40' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='1024' iicount='1024' level='3' stamp='0.512' comment='tiered' hot_count='1024'/>
<writer thread='9088'/>
Decoding compiled method 0x0000000002c4df50:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000192c54b8} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002c4e0c0: mov    0x8(%rdx),%r10d
  0x0000000002c4e0c4: shl    $0x3,%r10
  0x0000000002c4e0c8: cmp    %rax,%r10
  0x0000000002c4e0cb: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c4e0d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c4e0dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c4e0e0: mov    %eax,-0x6000(%rsp)
  0x0000000002c4e0e7: push   %rbp
  0x0000000002c4e0e8: sub    $0x30,%rsp
  0x0000000002c4e0ec: mov    %rdx,%r9
  0x0000000002c4e0ef: movabs $0x1948e498,%rbx   ;   {metadata(method data for {method} {0x00000000192c54b8} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c4e0f9: mov    0xdc(%rbx),%edx
  0x0000000002c4e0ff: add    $0x8,%edx
  0x0000000002c4e102: mov    %edx,0xdc(%rbx)
  0x0000000002c4e108: movabs $0x192c54b0,%rbx   ;   {metadata({method} {0x00000000192c54b8} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c4e112: and    $0x1ff8,%edx
  0x0000000002c4e118: cmp    $0x0,%edx
  0x0000000002c4e11b: je     0x0000000002c4e20c  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@0 (line 67)

  0x0000000002c4e121: mov    %r9,%rbx
  0x0000000002c4e124: movabs $0x1948e498,%rdx   ;   {metadata(method data for {method} {0x00000000192c54b8} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002c4e12e: addq   $0x1,0x108(%rdx)
  0x0000000002c4e136: movabs $0x19387898,%rbx   ;   {metadata(method data for {method} {0x0000000019250488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002c4e140: mov    0xdc(%rbx),%edx
  0x0000000002c4e146: add    $0x8,%edx
  0x0000000002c4e149: mov    %edx,0xdc(%rbx)
  0x0000000002c4e14f: movabs $0x19250480,%rbx   ;   {metadata({method} {0x0000000019250488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002c4e159: and    $0x7ffff8,%edx
  0x0000000002c4e15f: cmp    $0x0,%edx
  0x0000000002c4e162: je     0x0000000002c4e223
  0x0000000002c4e168: mov    %r8,%rbx
  0x0000000002c4e16b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002c4e175: movslq %ebx,%rbx
  0x0000000002c4e178: mov    %rbx,%rdi
  0x0000000002c4e17b: cmp    $0xffffff,%rbx
  0x0000000002c4e182: ja     0x0000000002c4e23a
  0x0000000002c4e188: movabs $0x17,%rsi
  0x0000000002c4e192: lea    (%rsi,%rbx,2),%rsi
  0x0000000002c4e196: and    $0xfffffffffffffff8,%rsi
  0x0000000002c4e19a: mov    0x60(%r15),%rax
  0x0000000002c4e19e: lea    (%rax,%rsi,1),%rsi
  0x0000000002c4e1a2: cmp    0x70(%r15),%rsi
  0x0000000002c4e1a6: ja     0x0000000002c4e23a
  0x0000000002c4e1ac: mov    %rsi,0x60(%r15)
  0x0000000002c4e1b0: sub    %rax,%rsi
  0x0000000002c4e1b3: movq   $0x1,(%rax)
  0x0000000002c4e1ba: mov    %rdx,%rcx
  0x0000000002c4e1bd: shr    $0x3,%rcx
  0x0000000002c4e1c1: mov    %ecx,0x8(%rax)
  0x0000000002c4e1c4: mov    %ebx,0xc(%rax)
  0x0000000002c4e1c7: sub    $0x10,%rsi
  0x0000000002c4e1cb: je     0x0000000002c4e1e2
  0x0000000002c4e1d1: xor    %rbx,%rbx
  0x0000000002c4e1d4: shr    $0x3,%rsi
  0x0000000002c4e1d8: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002c4e1dd: dec    %rsi
  0x0000000002c4e1e0: jne    0x0000000002c4e1d8  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)

  0x0000000002c4e1e2: mov    %rax,%r10
  0x0000000002c4e1e5: shr    $0x3,%r10
  0x0000000002c4e1e9: mov    %r10d,0x10(%r9)
  0x0000000002c4e1ed: shr    $0x9,%r9
  0x0000000002c4e1f1: movabs $0xe6e6000,%rsi
  0x0000000002c4e1fb: movb   $0x0,(%r9,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)

  0x0000000002c4e200: add    $0x30,%rsp
  0x0000000002c4e204: pop    %rbp
  0x0000000002c4e205: test   %eax,-0x257e10b(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c4e20b: retq   
  0x0000000002c4e20c: mov    %rbx,0x8(%rsp)
  0x0000000002c4e211: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c4e219: callq  0x0000000002c31360  ; OopMap{r9=Oop off=350}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ;   {runtime_call}
  0x0000000002c4e21e: jmpq   0x0000000002c4e121
  0x0000000002c4e223: mov    %rbx,0x8(%rsp)
  0x0000000002c4e228: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c4e230: callq  0x0000000002c31360  ; OopMap{r9=Oop off=373}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ;   {runtime_call}
  0x0000000002c4e235: jmpq   0x0000000002c4e168
  0x0000000002c4e23a: callq  0x0000000002c2dd00  ; OopMap{r9=Oop off=383}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ;   {runtime_call}
  0x0000000002c4e23f: jmp    0x0000000002c4e1e2
  0x0000000002c4e241: nop
  0x0000000002c4e242: nop
  0x0000000002c4e243: mov    0x2a8(%r15),%rax
  0x0000000002c4e24a: movabs $0x0,%r10
  0x0000000002c4e254: mov    %r10,0x2a8(%r15)
  0x0000000002c4e25b: movabs $0x0,%r10
  0x0000000002c4e265: mov    %r10,0x2b0(%r15)
  0x0000000002c4e26c: add    $0x30,%rsp
  0x0000000002c4e270: pop    %rbp
  0x0000000002c4e271: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c4e276: hlt    
  0x0000000002c4e277: hlt    
  0x0000000002c4e278: hlt    
  0x0000000002c4e279: hlt    
  0x0000000002c4e27a: hlt    
  0x0000000002c4e27b: hlt    
  0x0000000002c4e27c: hlt    
  0x0000000002c4e27d: hlt    
  0x0000000002c4e27e: hlt    
  0x0000000002c4e27f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c4e280: callq  0x0000000002c2eb20  ;   {no_reloc}
  0x0000000002c4e285: mov    %rsp,-0x28(%rsp)
  0x0000000002c4e28a: sub    $0x80,%rsp
  0x0000000002c4e291: mov    %rax,0x78(%rsp)
  0x0000000002c4e296: mov    %rcx,0x70(%rsp)
  0x0000000002c4e29b: mov    %rdx,0x68(%rsp)
  0x0000000002c4e2a0: mov    %rbx,0x60(%rsp)
  0x0000000002c4e2a5: mov    %rbp,0x50(%rsp)
  0x0000000002c4e2aa: mov    %rsi,0x48(%rsp)
  0x0000000002c4e2af: mov    %rdi,0x40(%rsp)
  0x0000000002c4e2b4: mov    %r8,0x38(%rsp)
  0x0000000002c4e2b9: mov    %r9,0x30(%rsp)
  0x0000000002c4e2be: mov    %r10,0x28(%rsp)
  0x0000000002c4e2c3: mov    %r11,0x20(%rsp)
  0x0000000002c4e2c8: mov    %r12,0x18(%rsp)
  0x0000000002c4e2cd: mov    %r13,0x10(%rsp)
  0x0000000002c4e2d2: mov    %r14,0x8(%rsp)
  0x0000000002c4e2d7: mov    %r15,(%rsp)
  0x0000000002c4e2db: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c4e2e5: movabs $0x2c4e285,%rdx    ;   {internal_word}
  0x0000000002c4e2ef: mov    %rsp,%r8
  0x0000000002c4e2f2: and    $0xfffffffffffffff0,%rsp
  0x0000000002c4e2f6: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c4e2fb: hlt    
[Deopt Handler Code]
  0x0000000002c4e2fc: movabs $0x2c4e2fc,%r10    ;   {section_word}
  0x0000000002c4e306: push   %r10
  0x0000000002c4e308: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c4e30d: hlt    
  0x0000000002c4e30e: hlt    
  0x0000000002c4e30f: hlt    
<nmethod compile_id='40' compiler='C1' level='3' entry='0x0000000002c4e0c0' size='1176' address='0x0000000002c4df50' relocation_offset='288' insts_offset='368' stub_offset='816' scopes_data_offset='984' scopes_pcs_offset='1040' dependencies_offset='1168' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='1027' iicount='1027' stamp='0.514'/>
<writer thread='20984'/>
<task_queued compile_id='41' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='30464' iicount='30464' stamp='0.514' comment='tiered' hot_count='30464'/>
<writer thread='9088'/>
Decoding compiled method 0x0000000002c48350:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000019253c20} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;[C&apos;
  # parm1:    r9        = boolean
  #           [sp+0x40]  (sp of caller)
  0x0000000002c484a0: mov    0x8(%rdx),%r10d
  0x0000000002c484a4: shl    $0x3,%r10
  0x0000000002c484a8: cmp    %rax,%r10
  0x0000000002c484ab: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c484b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c484bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c484c0: mov    %eax,-0x6000(%rsp)
  0x0000000002c484c7: push   %rbp
  0x0000000002c484c8: sub    $0x30,%rsp
  0x0000000002c484cc: movabs $0x19491ed8,%rsi   ;   {metadata(method data for {method} {0x0000000019253c20} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c484d6: mov    0xdc(%rsi),%edi
  0x0000000002c484dc: add    $0x8,%edi
  0x0000000002c484df: mov    %edi,0xdc(%rsi)
  0x0000000002c484e5: movabs $0x19253c18,%rsi   ;   {metadata({method} {0x0000000019253c20} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c484ef: and    $0x1ff8,%edi
  0x0000000002c484f5: cmp    $0x0,%edi
  0x0000000002c484f8: je     0x0000000002c4856e  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 609)

  0x0000000002c484fe: mov    %rdx,%rsi
  0x0000000002c48501: movabs $0x19491ed8,%rdi   ;   {metadata(method data for {method} {0x0000000019253c20} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002c4850b: addq   $0x1,0x108(%rdi)
  0x0000000002c48513: movabs $0x19387898,%rsi   ;   {metadata(method data for {method} {0x0000000019250488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002c4851d: mov    0xdc(%rsi),%edi
  0x0000000002c48523: add    $0x8,%edi
  0x0000000002c48526: mov    %edi,0xdc(%rsi)
  0x0000000002c4852c: movabs $0x19250480,%rsi   ;   {metadata({method} {0x0000000019250488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002c48536: and    $0x7ffff8,%edi
  0x0000000002c4853c: cmp    $0x0,%edi
  0x0000000002c4853f: je     0x0000000002c48585
  0x0000000002c48545: mov    %r8,%r10
  0x0000000002c48548: shr    $0x3,%r10
  0x0000000002c4854c: mov    %r10d,0xc(%rdx)
  0x0000000002c48550: shr    $0x9,%rdx
  0x0000000002c48554: movabs $0xe6e6000,%rsi
  0x0000000002c4855e: movb   $0x0,(%rdx,%rsi,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)

  0x0000000002c48562: add    $0x30,%rsp
  0x0000000002c48566: pop    %rbp
  0x0000000002c48567: test   %eax,-0x257846d(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c4856d: retq   
  0x0000000002c4856e: mov    %rsi,0x8(%rsp)
  0x0000000002c48573: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c4857b: callq  0x0000000002c31360  ; OopMap{rdx=Oop r8=Oop off=224}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 609)
                                                ;   {runtime_call}
  0x0000000002c48580: jmpq   0x0000000002c484fe
  0x0000000002c48585: mov    %rsi,0x8(%rsp)
  0x0000000002c4858a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002c48592: callq  0x0000000002c31360  ; OopMap{rdx=Oop r8=Oop off=247}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ;   {runtime_call}
  0x0000000002c48597: jmp    0x0000000002c48545
  0x0000000002c48599: nop
  0x0000000002c4859a: nop
  0x0000000002c4859b: mov    0x2a8(%r15),%rax
  0x0000000002c485a2: movabs $0x0,%r10
  0x0000000002c485ac: mov    %r10,0x2a8(%r15)
  0x0000000002c485b3: movabs $0x0,%r10
  0x0000000002c485bd: mov    %r10,0x2b0(%r15)
  0x0000000002c485c4: add    $0x30,%rsp
  0x0000000002c485c8: pop    %rbp
  0x0000000002c485c9: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c485ce: hlt    
  0x0000000002c485cf: hlt    
  0x0000000002c485d0: hlt    
  0x0000000002c485d1: hlt    
  0x0000000002c485d2: hlt    
  0x0000000002c485d3: hlt    
  0x0000000002c485d4: hlt    
  0x0000000002c485d5: hlt    
  0x0000000002c485d6: hlt    
  0x0000000002c485d7: hlt    
  0x0000000002c485d8: hlt    
  0x0000000002c485d9: hlt    
  0x0000000002c485da: hlt    
  0x0000000002c485db: hlt    
  0x0000000002c485dc: hlt    
  0x0000000002c485dd: hlt    
  0x0000000002c485de: hlt    
  0x0000000002c485df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c485e0: callq  0x0000000002c2eb20  ;   {no_reloc}
  0x0000000002c485e5: mov    %rsp,-0x28(%rsp)
  0x0000000002c485ea: sub    $0x80,%rsp
  0x0000000002c485f1: mov    %rax,0x78(%rsp)
  0x0000000002c485f6: mov    %rcx,0x70(%rsp)
  0x0000000002c485fb: mov    %rdx,0x68(%rsp)
  0x0000000002c48600: mov    %rbx,0x60(%rsp)
  0x0000000002c48605: mov    %rbp,0x50(%rsp)
  0x0000000002c4860a: mov    %rsi,0x48(%rsp)
  0x0000000002c4860f: mov    %rdi,0x40(%rsp)
  0x0000000002c48614: mov    %r8,0x38(%rsp)
  0x0000000002c48619: mov    %r9,0x30(%rsp)
  0x0000000002c4861e: mov    %r10,0x28(%rsp)
  0x0000000002c48623: mov    %r11,0x20(%rsp)
  0x0000000002c48628: mov    %r12,0x18(%rsp)
  0x0000000002c4862d: mov    %r13,0x10(%rsp)
  0x0000000002c48632: mov    %r14,0x8(%rsp)
  0x0000000002c48637: mov    %r15,(%rsp)
  0x0000000002c4863b: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c48645: movabs $0x2c485e5,%rdx    ;   {internal_word}
  0x0000000002c4864f: mov    %rsp,%r8
  0x0000000002c48652: and    $0xfffffffffffffff0,%rsp
  0x0000000002c48656: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c4865b: hlt    
[Deopt Handler Code]
  0x0000000002c4865c: movabs $0x2c4865c,%r10    ;   {section_word}
  0x0000000002c48666: push   %r10
  0x0000000002c48668: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c4866d: hlt    
  0x0000000002c4866e: hlt    
  0x0000000002c4866f: hlt    
<nmethod compile_id='37' compiler='C1' level='3' entry='0x0000000002c484a0' size='968' address='0x0000000002c48350' relocation_offset='288' insts_offset='336' stub_offset='656' scopes_data_offset='816' scopes_pcs_offset='864' dependencies_offset='960' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='649' iicount='649' stamp='0.517'/>
<writer thread='18064'/>
Decoding compiled method 0x0000000002c4c7d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000193d0880} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8        = char
  #           [sp+0x20]  (sp of caller)
  0x0000000002c4c900: mov    0x8(%rdx),%r10d
  0x0000000002c4c904: shl    $0x3,%r10
  0x0000000002c4c908: cmp    %r10,%rax
  0x0000000002c4c90b: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c4c911: data16 xchg %ax,%ax
  0x0000000002c4c914: nopl   0x0(%rax,%rax,1)
  0x0000000002c4c91c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c4c920: sub    $0x18,%rsp
  0x0000000002c4c927: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)

  0x0000000002c4c92c: cmp    $0x5c,%r8d
  0x0000000002c4c930: je     0x0000000002c4c946  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)

  0x0000000002c4c932: cmp    $0x2f,%r8d
  0x0000000002c4c936: je     0x0000000002c4c946  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)

  0x0000000002c4c938: xor    %eax,%eax          ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)

  0x0000000002c4c93a: add    $0x10,%rsp
  0x0000000002c4c93e: pop    %rbp
  0x0000000002c4c93f: test   %eax,-0x257c945(%rip)        # 0x00000000006d0000
                                                ;   {poll_return}
  0x0000000002c4c945: retq                      ;*iconst_1
                                                ; - java.io.WinNTFileSystem::isSlash@12 (line 53)

  0x0000000002c4c946: mov    $0x1,%eax
  0x0000000002c4c94b: jmp    0x0000000002c4c93a
  0x0000000002c4c94d: hlt    
  0x0000000002c4c94e: hlt    
  0x0000000002c4c94f: hlt    
  0x0000000002c4c950: hlt    
  0x0000000002c4c951: hlt    
  0x0000000002c4c952: hlt    
  0x0000000002c4c953: hlt    
  0x0000000002c4c954: hlt    
  0x0000000002c4c955: hlt    
  0x0000000002c4c956: hlt    
  0x0000000002c4c957: hlt    
  0x0000000002c4c958: hlt    
  0x0000000002c4c959: hlt    
  0x0000000002c4c95a: hlt    
  0x0000000002c4c95b: hlt    
  0x0000000002c4c95c: hlt    
  0x0000000002c4c95d: hlt    
  0x0000000002c4c95e: hlt    
  0x0000000002c4c95f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c4c960: jmpq   0x0000000002b87ee0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002c4c965: callq  0x0000000002c4c96a
  0x0000000002c4c96a: subq   $0x5,(%rsp)
  0x0000000002c4c96f: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c4c974: hlt    
  0x0000000002c4c975: hlt    
  0x0000000002c4c976: hlt    
  0x0000000002c4c977: hlt    
<nmethod compile_id='41' compiler='C2' level='4' entry='0x0000000002c4c900' size='584' address='0x0000000002c4c7d0' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='576' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='30465' iicount='30465' stamp='0.522'/>
<writer thread='20984'/>
<task_queued compile_id='42' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='28160' iicount='28160' stamp='0.522' comment='tiered' hot_count='28160'/>
<writer thread='9088'/>
Decoding compiled method 0x0000000002c4c4d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000192ddb70} &apos;getFile&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002c4c620: mov    0x8(%rdx),%r10d
  0x0000000002c4c624: shl    $0x3,%r10
  0x0000000002c4c628: cmp    %rax,%r10
  0x0000000002c4c62b: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c4c631: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002c4c63c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c4c640: mov    %eax,-0x6000(%rsp)
  0x0000000002c4c647: push   %rbp
  0x0000000002c4c648: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getFile@0 (line 826)

  0x0000000002c4c64c: mov    0x1c(%rdx),%eax
  0x0000000002c4c64f: shl    $0x3,%rax          ;*getfield file
                                                ; - java.net.URL::getFile@1 (line 826)

  0x0000000002c4c653: add    $0x30,%rsp
  0x0000000002c4c657: pop    %rbp
  0x0000000002c4c658: test   %eax,-0x257c55e(%rip)        # 0x00000000006d0100
                                                ;   {poll_return}
  0x0000000002c4c65e: retq   
  0x0000000002c4c65f: nop
  0x0000000002c4c660: nop
  0x0000000002c4c661: mov    0x2a8(%r15),%rax
  0x0000000002c4c668: movabs $0x0,%r10
  0x0000000002c4c672: mov    %r10,0x2a8(%r15)
  0x0000000002c4c679: movabs $0x0,%r10
  0x0000000002c4c683: mov    %r10,0x2b0(%r15)
  0x0000000002c4c68a: add    $0x30,%rsp
  0x0000000002c4c68e: pop    %rbp
  0x0000000002c4c68f: jmpq   0x0000000002b9f7a0  ;   {runtime_call}
  0x0000000002c4c694: hlt    
  0x0000000002c4c695: hlt    
  0x0000000002c4c696: hlt    
  0x0000000002c4c697: hlt    
  0x0000000002c4c698: hlt    
  0x0000000002c4c699: hlt    
  0x0000000002c4c69a: hlt    
  0x0000000002c4c69b: hlt    
  0x0000000002c4c69c: hlt    
  0x0000000002c4c69d: hlt    
  0x0000000002c4c69e: hlt    
  0x0000000002c4c69f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c4c6a0: callq  0x0000000002c2eb20  ;   {no_reloc}
  0x0000000002c4c6a5: mov    %rsp,-0x28(%rsp)
  0x0000000002c4c6aa: sub    $0x80,%rsp
  0x0000000002c4c6b1: mov    %rax,0x78(%rsp)
  0x0000000002c4c6b6: mov    %rcx,0x70(%rsp)
  0x0000000002c4c6bb: mov    %rdx,0x68(%rsp)
  0x0000000002c4c6c0: mov    %rbx,0x60(%rsp)
  0x0000000002c4c6c5: mov    %rbp,0x50(%rsp)
  0x0000000002c4c6ca: mov    %rsi,0x48(%rsp)
  0x0000000002c4c6cf: mov    %rdi,0x40(%rsp)
  0x0000000002c4c6d4: mov    %r8,0x38(%rsp)
  0x0000000002c4c6d9: mov    %r9,0x30(%rsp)
  0x0000000002c4c6de: mov    %r10,0x28(%rsp)
  0x0000000002c4c6e3: mov    %r11,0x20(%rsp)
  0x0000000002c4c6e8: mov    %r12,0x18(%rsp)
  0x0000000002c4c6ed: mov    %r13,0x10(%rsp)
  0x0000000002c4c6f2: mov    %r14,0x8(%rsp)
  0x0000000002c4c6f7: mov    %r15,(%rsp)
  0x0000000002c4c6fb: movabs $0x5bac8cb0,%rcx   ;   {external_word}
  0x0000000002c4c705: movabs $0x2c4c6a5,%rdx    ;   {internal_word}
  0x0000000002c4c70f: mov    %rsp,%r8
  0x0000000002c4c712: and    $0xfffffffffffffff0,%rsp
  0x0000000002c4c716: callq  0x000000005b7837a0  ;   {runtime_call}
  0x0000000002c4c71b: hlt    
[Deopt Handler Code]
  0x0000000002c4c71c: movabs $0x2c4c71c,%r10    ;   {section_word}
  0x0000000002c4c726: push   %r10
  0x0000000002c4c728: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c4c72d: hlt    
  0x0000000002c4c72e: hlt    
  0x0000000002c4c72f: hlt    
<nmethod compile_id='39' compiler='C1' level='1' entry='0x0000000002c4c620' size='704' address='0x0000000002c4c4d0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/net/URL getFile ()Ljava/lang/String;' bytes='5' count='514' iicount='514' stamp='0.524'/>
<writer thread='20984'/>
<task_queued compile_id='43' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='30976' iicount='30976' stamp='0.524' comment='tiered' hot_count='30976'/>
<writer thread='18064'/>
Decoding compiled method 0x0000000002c4bad0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000192c6870} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = char
  #           [sp+0x90]  (sp of caller)
  0x0000000002c4bc20: mov    0x8(%rdx),%r10d
  0x0000000002c4bc24: shl    $0x3,%r10
  0x0000000002c4bc28: cmp    %r10,%rax
  0x0000000002c4bc2b: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c4bc31: data16 xchg %ax,%ax
  0x0000000002c4bc34: nopl   0x0(%rax,%rax,1)
  0x0000000002c4bc3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c4bc40: mov    %eax,-0x6000(%rsp)
  0x0000000002c4bc47: push   %rbp
  0x0000000002c4bc48: sub    $0x80,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x0000000002c4bc4f: mov    %r8d,0x28(%rsp)
  0x0000000002c4bc54: mov    %rdx,0x60(%rsp)
  0x0000000002c4bc59: mov    0xc(%rdx),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)

  0x0000000002c4bc5d: mov    0x10(%rdx),%r9d    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4bc61: mov    %r10d,%r11d
  0x0000000002c4bc64: inc    %r11d              ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)

  0x0000000002c4bc67: test   %r9d,%r9d
  0x0000000002c4bc6a: je     0x0000000002c4bece
  0x0000000002c4bc70: mov    0xc(%r12,%r9,8),%r8d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4bc75: mov    %r10d,%ecx
  0x0000000002c4bc78: sub    %r8d,%ecx
  0x0000000002c4bc7b: mov    %r9,%rbp
  0x0000000002c4bc7e: shl    $0x3,%rbp          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4bc82: inc    %ecx
  0x0000000002c4bc84: test   %ecx,%ecx
  0x0000000002c4bc86: jg     0x0000000002c4bcce  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4bc88: mov    %r11d,%ecx         ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)

  0x0000000002c4bc8b: mov    0x60(%rsp),%r11
  0x0000000002c4bc90: mov    %ecx,0xc(%r11)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)

  0x0000000002c4bc94: test   %rbp,%rbp
  0x0000000002c4bc97: je     0x0000000002c4bef9
  0x0000000002c4bc9d: mov    0xc(%rbp),%r11d
  0x0000000002c4bca1: cmp    %r11d,%r10d
  0x0000000002c4bca4: jae    0x0000000002c4bf21
  0x0000000002c4bcaa: mov    0x28(%rsp),%r8d
  0x0000000002c4bcaf: mov    %r8w,0x10(%rbp,%r10,2)  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x0000000002c4bcb5: mov    0x60(%rsp),%rax
  0x0000000002c4bcba: add    $0x80,%rsp
  0x0000000002c4bcc1: pop    %rbp
  0x0000000002c4bcc2: test   %eax,-0x257bcc8(%rip)        # 0x00000000006d0000
                                                ;   {poll_return}
  0x0000000002c4bcc8: retq   
  0x0000000002c4bcc9: mov    %r11d,%ebx
  0x0000000002c4bccc: jmp    0x0000000002c4bce1
  0x0000000002c4bcce: mov    %r8d,%ebx
  0x0000000002c4bcd1: shl    %ebx               ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4bcd3: mov    %ebx,%ecx
  0x0000000002c4bcd5: sub    %r10d,%ecx
  0x0000000002c4bcd8: inc    %ecx
  0x0000000002c4bcda: test   %ecx,%ecx
  0x0000000002c4bcdc: jl     0x0000000002c4bcc9  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4bcde: add    $0x2,%ebx          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4bce1: test   %ebx,%ebx
  0x0000000002c4bce3: jle    0x0000000002c4bcf3  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4bce5: mov    $0x7ffffff7,%r10d
  0x0000000002c4bceb: sub    %ebx,%r10d
  0x0000000002c4bcee: test   %r10d,%r10d
  0x0000000002c4bcf1: jge    0x0000000002c4bd2d  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4bcf3: mov    %r8d,0x58(%rsp)
  0x0000000002c4bcf8: mov    %r9d,0x54(%rsp)
  0x0000000002c4bcfd: mov    %rbp,%r10
  0x0000000002c4bd00: mov    %r11d,0x20(%rsp)
  0x0000000002c4bd05: mov    %rdx,%rbp
  0x0000000002c4bd08: mov    %r11d,%r8d
  0x0000000002c4bd0b: mov    %r10,0x40(%rsp)
  0x0000000002c4bd10: mov    %ebx,0x50(%rsp)
  0x0000000002c4bd14: data16 xchg %ax,%ax
  0x0000000002c4bd17: callq  0x0000000002b761a0  ; OopMap{rbp=Oop [64]=Oop [84]=NarrowOop [96]=Oop off=252}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {optimized virtual_call}
  0x0000000002c4bd1c: mov    0x20(%rsp),%r11d
  0x0000000002c4bd21: mov    %eax,%ebx
  0x0000000002c4bd23: mov    0x54(%rsp),%r9d
  0x0000000002c4bd28: mov    0x58(%rsp),%r8d    ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4bd2d: cmp    $0x80000,%ebx
  0x0000000002c4bd33: ja     0x0000000002c4bf31
  0x0000000002c4bd39: movslq %ebx,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4bd3c: shl    %r10
  0x0000000002c4bd3f: lea    (%r12,%r9,8),%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4bd43: add    $0x17,%r10
  0x0000000002c4bd47: mov    %r10,%rdi
  0x0000000002c4bd4a: and    $0xfffffffffffffff8,%rdi  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4bd4e: cmp    $0x80000,%ebx
  0x0000000002c4bd54: ja     0x0000000002c4be6b
  0x0000000002c4bd5a: mov    0x60(%r15),%rbp
  0x0000000002c4bd5e: mov    %rbp,%rcx
  0x0000000002c4bd61: add    %rdi,%rcx
  0x0000000002c4bd64: cmp    0x70(%r15),%rcx
  0x0000000002c4bd68: jae    0x0000000002c4be6b  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4bd6e: mov    %rcx,0x60(%r15)
  0x0000000002c4bd72: prefetchnta 0x100(%rcx)
  0x0000000002c4bd79: movq   $0x1,0x0(%rbp)
  0x0000000002c4bd81: prefetchnta 0x140(%rcx)
  0x0000000002c4bd88: movl   $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
  0x0000000002c4bd8f: mov    %ebx,0xc(%rbp)
  0x0000000002c4bd92: prefetchnta 0x180(%rcx)   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4bd99: cmp    %ebx,%r8d
  0x0000000002c4bd9c: mov    %ebx,%esi
  0x0000000002c4bd9e: cmovl  %r8d,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4bda2: mov    %rbp,%r13
  0x0000000002c4bda5: add    $0x10,%r13
  0x0000000002c4bda9: shr    $0x3,%r10
  0x0000000002c4bdad: mov    %r10,%rcx
  0x0000000002c4bdb0: add    $0xfffffffffffffffe,%rcx
  0x0000000002c4bdb4: cmp    %esi,%r8d
  0x0000000002c4bdb7: jb     0x0000000002c4bf39
  0x0000000002c4bdbd: cmp    %esi,%ebx
  0x0000000002c4bdbf: jb     0x0000000002c4bf39
  0x0000000002c4bdc5: test   %esi,%esi
  0x0000000002c4bdc7: jle    0x0000000002c4bf71
  0x0000000002c4bdcd: lea    0x10(%r12,%r9,8),%r9
  0x0000000002c4bdd2: cmp    %ebx,%esi
  0x0000000002c4bdd4: jl     0x0000000002c4be28
  0x0000000002c4bdd6: add    $0xfffffffffffffff0,%rdi
  0x0000000002c4bdda: shr    $0x3,%rdi
  0x0000000002c4bdde: mov    %r9,%rcx
  0x0000000002c4bde1: mov    %r13,%rdx
  0x0000000002c4bde4: mov    %rdi,%r8
  0x0000000002c4bde7: movabs $0x2b82c60,%r10
  0x0000000002c4bdf1: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4bdf4: mov    0x60(%rsp),%r10
  0x0000000002c4bdf9: mov    0xc(%r10),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)

  0x0000000002c4bdfd: mov    %rbp,%r11
  0x0000000002c4be00: shr    $0x3,%r11
  0x0000000002c4be04: mov    0x60(%rsp),%r8
  0x0000000002c4be09: mov    %r11d,0x10(%r8)    ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4be0d: mov    %r10d,%ecx
  0x0000000002c4be10: inc    %ecx               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)

  0x0000000002c4be12: mov    %r8,%r11
  0x0000000002c4be15: shr    $0x9,%r11
  0x0000000002c4be19: mov    $0xe6e6000,%r8d
  0x0000000002c4be1f: mov    %r12b,(%r8,%r11,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4be23: jmpq   0x0000000002c4bc8b
  0x0000000002c4be28: movslq %esi,%r8
  0x0000000002c4be2b: mov    %r8,%r11
  0x0000000002c4be2e: shl    %r11
  0x0000000002c4be31: add    $0x10,%r11
  0x0000000002c4be35: mov    %r11,%rcx
  0x0000000002c4be38: and    $0xfffffffffffffff9,%rcx
  0x0000000002c4be3c: mov    %rbp,%rdi
  0x0000000002c4be3f: add    %rcx,%rdi
  0x0000000002c4be42: shr    $0x3,%r11
  0x0000000002c4be46: sub    %r11,%r10
  0x0000000002c4be49: mov    %r10,%rcx
  0x0000000002c4be4c: xor    %rax,%rax
  0x0000000002c4be4f: shl    $0x3,%rcx
  0x0000000002c4be53: rep rex.W stos %al,%es:(%rdi)
  0x0000000002c4be56: mov    %r9,%rcx
  0x0000000002c4be59: mov    %r13,%rdx
  0x0000000002c4be5c: movabs $0x2b82980,%r10
  0x0000000002c4be66: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4be69: jmp    0x0000000002c4bdf4
  0x0000000002c4be6b: mov    %r8d,0x58(%rsp)
  0x0000000002c4be70: mov    %r9d,0x2c(%rsp)
  0x0000000002c4be75: mov    %rdi,0x40(%rsp)
  0x0000000002c4be7a: mov    %rdx,0x38(%rsp)
  0x0000000002c4be7f: mov    %r10,0x30(%rsp)
  0x0000000002c4be84: mov    %ebx,0x24(%rsp)
  0x0000000002c4be88: mov    %r11d,0x20(%rsp)
  0x0000000002c4be8d: mov    0x60(%rsp),%rbp
  0x0000000002c4be92: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002c4be9c: mov    %ebx,%r8d
  0x0000000002c4be9f: callq  0x0000000002c346e0  ; OopMap{rbp=Oop [44]=NarrowOop [56]=Oop [96]=Oop off=644}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002c4bea4: mov    0x20(%rsp),%r11d
  0x0000000002c4bea9: mov    %rax,%rbp
  0x0000000002c4beac: mov    0x24(%rsp),%ebx
  0x0000000002c4beb0: mov    0x30(%rsp),%r10
  0x0000000002c4beb5: mov    0x38(%rsp),%rdx
  0x0000000002c4beba: mov    0x40(%rsp),%rdi
  0x0000000002c4bebf: mov    0x2c(%rsp),%r9d
  0x0000000002c4bec4: mov    0x58(%rsp),%r8d
  0x0000000002c4bec9: jmpq   0x0000000002c4bd99
  0x0000000002c4bece: mov    0x39c(%r15),%r10d
  0x0000000002c4bed5: test   %r10d,%r10d
  0x0000000002c4bed8: jne    0x0000000002c4bf83
  0x0000000002c4bede: mov    $0xfffffff6,%edx
  0x0000000002c4bee3: mov    0x60(%rsp),%rbp
  0x0000000002c4bee8: mov    %r8d,0x20(%rsp)
  0x0000000002c4beed: mov    %r11d,0x30(%rsp)
  0x0000000002c4bef2: nop
  0x0000000002c4bef3: callq  0x0000000002b757a0  ; OopMap{rbp=Oop off=728}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002c4bef8: int3                      ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4bef9: mov    0x39c(%r15),%r11d
  0x0000000002c4bf00: test   %r11d,%r11d
  0x0000000002c4bf03: jne    0x0000000002c4bf9d
  0x0000000002c4bf09: mov    $0xfffffff6,%edx
  0x0000000002c4bf0e: mov    0x60(%rsp),%rbp
  0x0000000002c4bf13: mov    %r10d,0x24(%rsp)
  0x0000000002c4bf18: data16 xchg %ax,%ax
  0x0000000002c4bf1b: callq  0x0000000002b757a0  ; OopMap{rbp=Oop off=768}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x0000000002c4bf20: int3   
  0x0000000002c4bf21: mov    $0xffffffe4,%edx
  0x0000000002c4bf26: mov    %r10d,0x2c(%rsp)
  0x0000000002c4bf2b: callq  0x0000000002b757a0  ; OopMap{rbp=Oop [96]=Oop off=784}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x0000000002c4bf30: int3                      ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)

  0x0000000002c4bf31: movslq %ebx,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4bf34: jmpq   0x0000000002c4bd3c
  0x0000000002c4bf39: mov    %r13,%rdi
  0x0000000002c4bf3c: xor    %rax,%rax
  0x0000000002c4bf3f: shl    $0x3,%rcx
  0x0000000002c4bf43: rep rex.W stos %al,%es:(%rdi)
  0x0000000002c4bf46: mov    %r11d,0x20(%rsp)
  0x0000000002c4bf4b: xor    %r8d,%r8d
  0x0000000002c4bf4e: mov    %rbp,%r9
  0x0000000002c4bf51: xor    %edi,%edi
  0x0000000002c4bf53: rex.W pushq 0x60(%rsp)
  0x0000000002c4bf58: rex.W popq 0x30(%rsp)
  0x0000000002c4bf5d: mov    %rdx,0x48(%rsp)
  0x0000000002c4bf62: mov    %ebx,0x2c(%rsp)
  0x0000000002c4bf66: nop
  0x0000000002c4bf67: callq  0x0000000002c31b60  ; OopMap{rbp=Oop [48]=Oop [72]=Oop [96]=Oop off=844}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002c4bf6c: jmpq   0x0000000002c4bdf4
  0x0000000002c4bf71: mov    %r13,%rdi
  0x0000000002c4bf74: xor    %rax,%rax
  0x0000000002c4bf77: shl    $0x3,%rcx
  0x0000000002c4bf7b: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4bf7e: jmpq   0x0000000002c4bdf4
  0x0000000002c4bf83: mov    $0xfffffff7,%edx
  0x0000000002c4bf88: mov    0x60(%rsp),%rbp
  0x0000000002c4bf8d: mov    %r8d,0x20(%rsp)
  0x0000000002c4bf92: mov    %r11d,0x30(%rsp)
  0x0000000002c4bf97: callq  0x0000000002b757a0  ; OopMap{rbp=Oop off=892}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002c4bf9c: int3   
  0x0000000002c4bf9d: mov    $0xfffffff7,%edx
  0x0000000002c4bfa2: mov    0x60(%rsp),%rbp
  0x0000000002c4bfa7: mov    %r10d,0x24(%rsp)
  0x0000000002c4bfac: data16 xchg %ax,%ax
  0x0000000002c4bfaf: callq  0x0000000002b757a0  ; OopMap{rbp=Oop off=916}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x0000000002c4bfb4: int3   
  0x0000000002c4bfb5: jmp    0x0000000002c4bfb7  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4bfb7: mov    %rax,%rdx
  0x0000000002c4bfba: jmp    0x0000000002c4bfbf  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002c4bfbc: mov    %rax,%rdx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x0000000002c4bfbf: add    $0x80,%rsp
  0x0000000002c4bfc6: pop    %rbp
  0x0000000002c4bfc7: jmpq   0x0000000002c31c20  ;   {runtime_call}
  0x0000000002c4bfcc: hlt    
  0x0000000002c4bfcd: hlt    
  0x0000000002c4bfce: hlt    
  0x0000000002c4bfcf: hlt    
  0x0000000002c4bfd0: hlt    
  0x0000000002c4bfd1: hlt    
  0x0000000002c4bfd2: hlt    
  0x0000000002c4bfd3: hlt    
  0x0000000002c4bfd4: hlt    
  0x0000000002c4bfd5: hlt    
  0x0000000002c4bfd6: hlt    
  0x0000000002c4bfd7: hlt    
  0x0000000002c4bfd8: hlt    
  0x0000000002c4bfd9: hlt    
  0x0000000002c4bfda: hlt    
  0x0000000002c4bfdb: hlt    
  0x0000000002c4bfdc: hlt    
  0x0000000002c4bfdd: hlt    
  0x0000000002c4bfde: hlt    
  0x0000000002c4bfdf: hlt    
[Stub Code]
  0x0000000002c4bfe0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000002c4bfea: jmpq   0x0000000002c4bfea  ;   {runtime_call}
[Exception Handler]
  0x0000000002c4bfef: jmpq   0x0000000002b87ee0  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000002c4bff4: callq  0x0000000002c4bff9
  0x0000000002c4bff9: subq   $0x5,(%rsp)
  0x0000000002c4bffe: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c4c003: hlt    
  0x0000000002c4c004: hlt    
  0x0000000002c4c005: hlt    
  0x0000000002c4c006: hlt    
  0x0000000002c4c007: hlt    
<nmethod compile_id='43' compiler='C2' level='4' entry='0x0000000002c4bc20' size='2528' address='0x0000000002c4bad0' relocation_offset='288' insts_offset='336' stub_offset='1296' scopes_data_offset='1376' scopes_pcs_offset='1720' dependencies_offset='2440' handler_table_offset='2456' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='30976' iicount='30976' stamp='0.533'/>
<writer thread='20984'/>
<task_queued compile_id='44' method='java/lang/String indexOf (II)I' bytes='70' count='2063' backedge_count='103424' iicount='2063' stamp='0.533' comment='tiered' hot_count='2063'/>
<writer thread='8488'/>
Decoding compiled method 0x0000000002c4d0d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000192c1a78} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuffer&apos;
  # parm0:    r8        = char
  #           [sp+0x90]  (sp of caller)
  0x0000000002c4d240: mov    0x8(%rdx),%r10d
  0x0000000002c4d244: shl    $0x3,%r10
  0x0000000002c4d248: cmp    %r10,%rax
  0x0000000002c4d24b: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c4d251: data16 xchg %ax,%ax
  0x0000000002c4d254: nopl   0x0(%rax,%rax,1)
  0x0000000002c4d25c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c4d260: mov    %eax,-0x6000(%rsp)
  0x0000000002c4d267: push   %rbp
  0x0000000002c4d268: sub    $0x80,%rsp         ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x0000000002c4d26f: mov    %r8d,0x44(%rsp)
  0x0000000002c4d274: mov    %rdx,0x48(%rsp)
  0x0000000002c4d279: mov    (%rdx),%rax
  0x0000000002c4d27c: mov    %rax,%r10
  0x0000000002c4d27f: and    $0x7,%r10
  0x0000000002c4d283: cmp    $0x5,%r10
  0x0000000002c4d287: jne    0x0000000002c4d60e
  0x0000000002c4d28d: mov    $0xf8001ac1,%r11d  ;   {metadata(&apos;java/lang/StringBuffer&apos;)}
  0x0000000002c4d293: movabs $0x0,%r10
  0x0000000002c4d29d: lea    (%r10,%r11,8),%r10
  0x0000000002c4d2a1: mov    0xa8(%r10),%r10
  0x0000000002c4d2a8: mov    %r10,%r11          ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d2ab: or     %r15,%r11
  0x0000000002c4d2ae: mov    %r11,%r8
  0x0000000002c4d2b1: xor    %rax,%r8
  0x0000000002c4d2b4: test   $0xffffffffffffff87,%r8
  0x0000000002c4d2bb: jne    0x0000000002c4d675  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x0000000002c4d2c1: mov    0x48(%rsp),%r10
  0x0000000002c4d2c6: mov    0x10(%r10),%r9d    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d2ca: mov    0xc(%r10),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d2ce: mov    0x48(%rsp),%r11
  0x0000000002c4d2d3: mov    %r12d,0x14(%r11)   ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)

  0x0000000002c4d2d7: mov    %r10d,%r11d
  0x0000000002c4d2da: inc    %r11d              ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d2dd: test   %r9d,%r9d
  0x0000000002c4d2e0: je     0x0000000002c4d572
  0x0000000002c4d2e6: mov    0xc(%r12,%r9,8),%r8d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d2eb: mov    %r10d,%ecx
  0x0000000002c4d2ee: sub    %r8d,%ecx
  0x0000000002c4d2f1: mov    %r9,%rbp
  0x0000000002c4d2f4: shl    $0x3,%rbp          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d2f8: inc    %ecx
  0x0000000002c4d2fa: test   %ecx,%ecx
  0x0000000002c4d2fc: jg     0x0000000002c4d357  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d2fe: mov    %r11d,%ecx         ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d301: mov    0x48(%rsp),%r11
  0x0000000002c4d306: mov    %ecx,0xc(%r11)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d30a: test   %rbp,%rbp
  0x0000000002c4d30d: je     0x0000000002c4d5a5
  0x0000000002c4d313: mov    0xc(%rbp),%r11d
  0x0000000002c4d317: cmp    %r11d,%r10d
  0x0000000002c4d31a: jae    0x0000000002c4d5e1
  0x0000000002c4d320: mov    0x44(%rsp),%r11d
  0x0000000002c4d325: mov    %r11w,0x10(%rbp,%r10,2)
  0x0000000002c4d32b: mov    0x48(%rsp),%r10
  0x0000000002c4d330: mov    $0x7,%r11d
  0x0000000002c4d336: and    (%r10),%r11
  0x0000000002c4d339: cmp    $0x5,%r11
  0x0000000002c4d33d: jne    0x0000000002c4d6a0  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x0000000002c4d343: mov    0x48(%rsp),%rax
  0x0000000002c4d348: add    $0x80,%rsp
  0x0000000002c4d34f: pop    %rbp
  0x0000000002c4d350: test   %eax,-0x257d356(%rip)        # 0x00000000006d0000
                                                ;   {poll_return}
  0x0000000002c4d356: retq   
  0x0000000002c4d357: mov    %r8d,%ebx
  0x0000000002c4d35a: shl    %ebx               ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d35c: mov    %ebx,%ecx
  0x0000000002c4d35e: sub    %r10d,%ecx
  0x0000000002c4d361: inc    %ecx
  0x0000000002c4d363: test   %ecx,%ecx
  0x0000000002c4d365: jge    0x0000000002c4d4c0  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d36b: mov    %r11d,%ebx         ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal
<writer thread='20984'/>
[Loaded com.wdq.juc.TestAssemly from file:/D:/wdq/apollo/target/classes/]
<writer thread='8488'/>
@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d36e: test   %ebx,%ebx
  0x0000000002c4d370: jle    0x0000000002c4d37d  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d372: mov    $0x7ffffff7,%ecx
  0x0000000002c4d377: sub    %ebx,%ecx
  0x0000000002c4d379: test   %ecx,%ecx
  0x0000000002c4d37b: jge    0x0000000002c4d3c5  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d37d: mov    %r8d,0x6c(%rsp)
  0x0000000002c4d382: mov    %r9d,0x68(%rsp)
  0x0000000002c4d387: mov    %rbp,%r10
  0x0000000002c4d38a: mov    %r11d,0x20(%rsp)
  0x0000000002c4d38f: mov    0x48(%rsp),%rbp    ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d394: mov    %rbp,%rdx
  0x0000000002c4d397: mov    %r11d,%r8d
  0x0000000002c4d39a: mov    0x44(%rsp),%r11d
  0x0000000002c4d39f: mov    %r11d,0x38(%rsp)
  0x0000000002c4d3a4: mov    %r10,0x58(%rsp)
  0x0000000002c4d3a9: mov    %ebx,0x40(%rsp)
  0x0000000002c4d3ad: xchg   %ax,%ax
  0x0000000002c4d3af: callq  0x0000000002b761a0  ; OopMap{rbp=Oop [72]=Oop [88]=Oop [104]=NarrowOop off=372}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {optimized virtual_call}
  0x0000000002c4d3b4: mov    0x20(%rsp),%r11d
  0x0000000002c4d3b9: mov    %eax,%ebx
  0x0000000002c4d3bb: mov    0x68(%rsp),%r9d
  0x0000000002c4d3c0: mov    0x6c(%rsp),%r8d    ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d3c5: cmp    $0x80000,%ebx
  0x0000000002c4d3cb: ja     0x0000000002c4d74b
  0x0000000002c4d3d1: movslq %ebx,%rdx          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d3d4: shl    %rdx
  0x0000000002c4d3d7: lea    (%r12,%r9,8),%r10  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d3db: add    $0x17,%rdx
  0x0000000002c4d3df: mov    %rdx,%rdi
  0x0000000002c4d3e2: and    $0xfffffffffffffff8,%rdi  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d3e6: cmp    $0x80000,%ebx
  0x0000000002c4d3ec: ja     0x0000000002c4d50e
  0x0000000002c4d3f2: mov    0x60(%r15),%rbp
  0x0000000002c4d3f6: mov    %rbp,%rcx
  0x0000000002c4d3f9: add    %rdi,%rcx
  0x0000000002c4d3fc: cmp    0x70(%r15),%rcx
  0x0000000002c4d400: jae    0x0000000002c4d50e  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d406: mov    %rcx,0x60(%r15)
  0x0000000002c4d40a: prefetchnta 0x100(%rcx)
  0x0000000002c4d411: movq   $0x1,0x0(%rbp)
  0x0000000002c4d419: prefetchnta 0x140(%rcx)
  0x0000000002c4d420: movl   $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
  0x0000000002c4d427: mov    %ebx,0xc(%rbp)
  0x0000000002c4d42a: prefetchnta 0x180(%rcx)   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d431: cmp    %ebx,%r8d
  0x0000000002c4d434: mov    %ebx,%esi
  0x0000000002c4d436: cmovl  %r8d,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d43a: mov    %rbp,%r13
  0x0000000002c4d43d: add    $0x10,%r13
  0x0000000002c4d441: shr    $0x3,%rdx
  0x0000000002c4d445: mov    %rdx,%rcx
  0x0000000002c4d448: add    $0xfffffffffffffffe,%rcx
  0x0000000002c4d44c: cmp    %esi,%r8d
  0x0000000002c4d44f: jb     0x0000000002c4d753
  0x0000000002c4d455: cmp    %esi,%ebx
  0x0000000002c4d457: jb     0x0000000002c4d753
  0x0000000002c4d45d: test   %esi,%esi
  0x0000000002c4d45f: jle    0x0000000002c4d799
  0x0000000002c4d465: lea    0x10(%r12,%r9,8),%r11
  0x0000000002c4d46a: cmp    %ebx,%esi
  0x0000000002c4d46c: jl     0x0000000002c4d4c8
  0x0000000002c4d46e: add    $0xfffffffffffffff0,%rdi
  0x0000000002c4d472: shr    $0x3,%rdi
  0x0000000002c4d476: mov    %r11,%rcx
  0x0000000002c4d479: mov    %r13,%rdx
  0x0000000002c4d47c: mov    %rdi,%r8
  0x0000000002c4d47f: movabs $0x2b82c60,%r10
  0x0000000002c4d489: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d48c: mov    0x48(%rsp),%r10
  0x0000000002c4d491: mov    0xc(%r10),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d495: mov    %rbp,%r11
  0x0000000002c4d498: shr    $0x3,%r11
  0x0000000002c4d49c: mov    0x48(%rsp),%r8
  0x0000000002c4d4a1: mov    %r11d,0x10(%r8)    ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d4a5: mov    %r10d,%ecx
  0x0000000002c4d4a8: inc    %ecx               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d4aa: mov    %r8,%r11
  0x0000000002c4d4ad: shr    $0x9,%r11
  0x0000000002c4d4b1: mov    $0xe6e6000,%r8d
  0x0000000002c4d4b7: mov    %r12b,(%r8,%r11,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d4bb: jmpq   0x0000000002c4d301
  0x0000000002c4d4c0: add    $0x2,%ebx          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d4c3: jmpq   0x0000000002c4d36e
  0x0000000002c4d4c8: movslq %esi,%r8
  0x0000000002c4d4cb: mov    %r8,%r10
  0x0000000002c4d4ce: shl    %r10
  0x0000000002c4d4d1: add    $0x10,%r10
  0x0000000002c4d4d5: mov    %r10,%r9
  0x0000000002c4d4d8: and    $0xfffffffffffffff9,%r9
  0x0000000002c4d4dc: mov    %rbp,%rdi
  0x0000000002c4d4df: add    %r9,%rdi
  0x0000000002c4d4e2: shr    $0x3,%r10
  0x0000000002c4d4e6: sub    %r10,%rdx
  0x0000000002c4d4e9: mov    %rdx,%rcx
  0x0000000002c4d4ec: xor    %rax,%rax
  0x0000000002c4d4ef: shl    $0x3,%rcx
  0x0000000002c4d4f3: rep rex.W stos %al,%es:(%rdi)
  0x0000000002c4d4f6: mov    %r11,%rcx
  0x0000000002c4d4f9: mov    %r13,%rdx
  0x0000000002c4d4fc: movabs $0x2b82980,%r10
  0x0000000002c4d506: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d509: jmpq   0x0000000002c4d48c
  0x0000000002c4d50e: mov    %r8d,0x6c(%rsp)
  0x0000000002c4d513: mov    %r9d,0x68(%rsp)
  0x0000000002c4d518: mov    %rdi,0x38(%rsp)
  0x0000000002c4d51d: mov    %r10,0x30(%rsp)
  0x0000000002c4d522: mov    %rdx,0x28(%rsp)
  0x0000000002c4d527: mov    %ebx,0x24(%rsp)
  0x0000000002c4d52b: mov    %r11d,0x20(%rsp)
  0x0000000002c4d530: mov    0x48(%rsp),%rbp    ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d535: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002c4d53f: mov    %ebx,%r8d
  0x0000000002c4d542: nop
  0x0000000002c4d543: callq  0x0000000002c346e0  ; OopMap{rbp=Oop [48]=Oop [72]=Oop [104]=NarrowOop off=776}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002c4d548: mov    0x20(%rsp),%r11d
  0x0000000002c4d54d: mov    %rax,%rbp
  0x0000000002c4d550: mov    0x24(%rsp),%ebx
  0x0000000002c4d554: mov    0x28(%rsp),%rdx
  0x0000000002c4d559: mov    0x30(%rsp),%r10
  0x0000000002c4d55e: mov    0x38(%rsp),%rdi
  0x0000000002c4d563: mov    0x68(%rsp),%r9d
  0x0000000002c4d568: mov    0x6c(%rsp),%r8d
  0x0000000002c4d56d: jmpq   0x0000000002c4d431
  0x0000000002c4d572: mov    0x39c(%r15),%r10d
  0x0000000002c4d579: test   %r10d,%r10d
  0x0000000002c4d57c: jne    0x0000000002c4d7ab
  0x0000000002c4d582: mov    $0xfffffff6,%edx
  0x0000000002c4d587: mov    0x48(%rsp),%rbp
  0x0000000002c4d58c: mov    0x44(%rsp),%r10d
  0x0000000002c4d591: mov    %r10d,%r8d
  0x0000000002c4d594: mov    %r8d,0x24(%rsp)
  0x0000000002c4d599: mov    %r11d,0x44(%rsp)
  0x0000000002c4d59e: nop
  0x0000000002c4d59f: callq  0x0000000002b757a0  ; OopMap{rbp=Oop off=868}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002c4d5a4: int3                      ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d5a5: mov    0x39c(%r15),%r8d
  0x0000000002c4d5ac: test   %r8d,%r8d
  0x0000000002c4d5af: jne    0x0000000002c4d7cd
  0x0000000002c4d5b5: mov    $0xfffffff6,%edx
  0x0000000002c4d5ba: mov    0x44(%rsp),%r8d
  0x0000000002c4d5bf: mov    %r11,0x28(%rsp)
  0x0000000002c4d5c4: mov    %r11,0x30(%rsp)
  0x0000000002c4d5c9: mov    %r8d,0x24(%rsp)
  0x0000000002c4d5ce: mov    %r10d,0x38(%rsp)
  0x0000000002c4d5d3: mov    %r8d,0x3c(%rsp)
  0x0000000002c4d5d8: data16 xchg %ax,%ax
  0x0000000002c4d5db: callq  0x0000000002b757a0  ; OopMap{[40]=Oop [48]=Oop off=928}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002c4d5e0: int3   
  0x0000000002c4d5e1: mov    $0xffffffe4,%edx
  0x0000000002c4d5e6: rex.W pushq 0x48(%rsp)
  0x0000000002c4d5eb: rex.W popq 0x20(%rsp)
  0x0000000002c4d5f0: mov    0x44(%rsp),%r11d
  0x0000000002c4d5f5: mov    %r11d,%r8d
  0x0000000002c4d5f8: mov    %r8d,0x2c(%rsp)
  0x0000000002c4d5fd: mov    %r10d,0x40(%rsp)
  0x0000000002c4d602: nop
  0x0000000002c4d603: callq  0x0000000002b757a0  ; OopMap{rbp=Oop [32]=Oop off=968}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002c4d608: int3                      ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d609: lock cmpxchg %r10,(%rdx)
  0x0000000002c4d60e: lea    0x70(%rsp),%rbx
  0x0000000002c4d613: mov    (%rdx),%rax
  0x0000000002c4d616: test   $0x2,%rax
  0x0000000002c4d61c: jne    0x0000000002c4d642
  0x0000000002c4d61e: or     $0x1,%rax
  0x0000000002c4d622: mov    %rax,(%rbx)
  0x0000000002c4d625: lock cmpxchg %rbx,(%rdx)
  0x0000000002c4d62a: je     0x0000000002c4d65b
  0x0000000002c4d630: sub    %rsp,%rax
  0x0000000002c4d633: and    $0xfffffffffffff007,%rax
  0x0000000002c4d63a: mov    %rax,(%rbx)
  0x0000000002c4d63d: jmpq   0x0000000002c4d65b
  0x0000000002c4d642: movq   $0x3,(%rbx)
  0x0000000002c4d649: mov    %rax,%rbx
  0x0000000002c4d64c: mov    0x16(%rbx),%rax
  0x0000000002c4d650: test   %rax,%rax
  0x0000000002c4d653: jne    0x0000000002c4d65b
  0x0000000002c4d655: lock cmpxchg %r15,0x16(%rbx)
  0x0000000002c4d65b: je     0x0000000002c4d2c1
  0x0000000002c4d661: lea    0x70(%rsp),%r8
  0x0000000002c4d666: mov    %rdx,0x28(%rsp)
  0x0000000002c4d66b: callq  0x0000000002c31d20  ; OopMap{[40]=Oop [72]=Oop off=1072}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ;   {runtime_call}
  0x0000000002c4d670: jmpq   0x0000000002c4d2c1
  0x0000000002c4d675: test   $0x7,%r8
  0x0000000002c4d67c: jne    0x0000000002c4d609
  0x0000000002c4d67e: test   $0x300,%r8
  0x0000000002c4d685: jne    0x0000000002c4d694
  0x0000000002c4d687: and    $0x37f,%rax
  0x0000000002c4d68e: mov    %rax,%r11          ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d691: or     %r15,%r11
  0x0000000002c4d694: lock cmpxchg %r11,(%rdx)
  0x0000000002c4d699: jne    0x0000000002c4d661
  0x0000000002c4d69b: jmpq   0x0000000002c4d2c1
  0x0000000002c4d6a0: lea    0x70(%rsp),%rax
  0x0000000002c4d6a5: mov    0x48(%rsp),%r11
  0x0000000002c4d6aa: cmpq   $0x0,(%rax)
  0x0000000002c4d6b1: je     0x0000000002c4d72b
  0x0000000002c4d6b7: mov    (%r11),%r10
  0x0000000002c4d6ba: test   $0x2,%r10
  0x0000000002c4d6c1: je     0x0000000002c4d723
  0x0000000002c4d6c3: mov    0x16(%r10),%rax
  0x0000000002c4d6c7: xor    %r15,%rax
  0x0000000002c4d6ca: or     0x26(%r10),%rax
  0x0000000002c4d6ce: jne    0x0000000002c4d72b
  0x0000000002c4d6d0: mov    0x36(%r10),%rax
  0x0000000002c4d6d4: or     0x3e(%r10),%rax
  0x0000000002c4d6d8: jne    0x0000000002c4d6e4
  0x0000000002c4d6da: movq   $0x0,0x16(%r10)
  0x0000000002c4d6e2: jmp    0x0000000002c4d72b
  0x0000000002c4d6e4: cmpq   $0x0,0x46(%r10)
  0x0000000002c4d6ec: je     0x0000000002c4d717
  0x0000000002c4d6ee: movq   $0x0,0x16(%r10)
  0x0000000002c4d6f6: lock addl $0x0,(%rsp)
  0x0000000002c4d6fb: cmpq   $0x0,0x46(%r10)
  0x0000000002c4d703: jne    0x0000000002c4d71c
  0x0000000002c4d705: movabs $0x0,%rax
  0x0000000002c4d70f: lock cmpxchg %r15,0x16(%r10)
  0x0000000002c4d715: jne    0x0000000002c4d71c
  0x0000000002c4d717: or     $0x1,%eax
  0x0000000002c4d71a: jmp    0x0000000002c4d72b
  0x0000000002c4d71c: test   $0x0,%eax
  0x0000000002c4d721: jmp    0x0000000002c4d72b
  0x0000000002c4d723: mov    (%rax),%r10
  0x0000000002c4d726: lock cmpxchg %r10,(%r11)
  0x0000000002c4d72b: je     0x0000000002c4d343
  0x0000000002c4d731: mov    %r11,%rcx
  0x0000000002c4d734: lea    0x70(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x0000000002c4d739: movabs $0x5b6bc8b0,%r10
  0x0000000002c4d743: callq  *%r10              ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)

  0x0000000002c4d746: jmpq   0x0000000002c4d343
  0x0000000002c4d74b: movslq %ebx,%rdx          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d74e: jmpq   0x0000000002c4d3d4
  0x0000000002c4d753: mov    %r13,%rdi
  0x0000000002c4d756: xor    %rax,%rax
  0x0000000002c4d759: shl    $0x3,%rcx
  0x0000000002c4d75d: rep rex.W stos %al,%es:(%rdi)
  0x0000000002c4d760: mov    %r11d,0x20(%rsp)
  0x0000000002c4d765: mov    %r10,%rdx
  0x0000000002c4d768: xor    %r8d,%r8d
  0x0000000002c4d76b: mov    %rbp,%r9
  0x0000000002c4d76e: xor    %edi,%edi
  0x0000000002c4d770: rex.W pushq 0x48(%rsp)
  0x0000000002c4d775: rex.W popq 0x28(%rsp)
  0x0000000002c4d77a: mov    0x44(%rsp),%r11d
  0x0000000002c4d77f: mov    %r11d,0x40(%rsp)
  0x0000000002c4d784: mov    %r10,0x58(%rsp)
  0x0000000002c4d789: mov    %ebx,0x60(%rsp)
  0x0000000002c4d78d: xchg   %ax,%ax
  0x0000000002c4d78f: callq  0x0000000002c31b60  ; OopMap{rbp=Oop [40]=Oop [72]=Oop [88]=Oop off=1364}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002c4d794: jmpq   0x0000000002c4d48c
  0x0000000002c4d799: mov    %r13,%rdi
  0x0000000002c4d79c: xor    %rax,%rax
  0x0000000002c4d79f: shl    $0x3,%rcx
  0x0000000002c4d7a3: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d7a6: jmpq   0x0000000002c4d48c
  0x0000000002c4d7ab: mov    $0xfffffff7,%edx
  0x0000000002c4d7b0: mov    0x48(%rsp),%rbp
  0x0000000002c4d7b5: mov    0x44(%rsp),%r10d
  0x0000000002c4d7ba: mov    %r10d,%r8d
  0x0000000002c4d7bd: mov    %r8d,0x24(%rsp)
  0x0000000002c4d7c2: mov    %r11d,0x44(%rsp)
  0x0000000002c4d7c7: callq  0x0000000002b757a0  ; OopMap{rbp=Oop off=1420}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002c4d7cc: int3   
  0x0000000002c4d7cd: mov    $0xfffffff7,%edx
  0x0000000002c4d7d2: mov    %r11,%rbp
  0x0000000002c4d7d5: mov    0x44(%rsp),%r11d
  0x0000000002c4d7da: mov    %r11d,%r8d
  0x0000000002c4d7dd: mov    %r8d,0x24(%rsp)
  0x0000000002c4d7e2: mov    %r10d,0x38(%rsp)
  0x0000000002c4d7e7: mov    %r8d,0x3c(%rsp)
  0x0000000002c4d7ec: data16 xchg %ax,%ax
  0x0000000002c4d7ef: callq  0x0000000002b757a0  ; OopMap{rbp=Oop off=1460}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002c4d7f4: int3   
  0x0000000002c4d7f5: jmp    0x0000000002c4d7f7  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d7f7: mov    %rax,%rbx
  0x0000000002c4d7fa: jmp    0x0000000002c4d7ff  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d7fc: mov    %rax,%rbx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002c4d7ff: mov    0x48(%rsp),%r10
  0x0000000002c4d804: mov    $0x7,%r11d
  0x0000000002c4d80a: and    (%r10),%r11
  0x0000000002c4d80d: cmp    $0x5,%r11
  0x0000000002c4d811: jne    0x0000000002c4d823
  0x0000000002c4d813: mov    %rbx,%rdx
  0x0000000002c4d816: add    $0x80,%rsp
  0x0000000002c4d81d: pop    %rbp
  0x0000000002c4d81e: jmpq   0x0000000002c31c20  ;   {runtime_call}
  0x0000000002c4d823: lea    0x70(%rsp),%rax
  0x0000000002c4d828: mov    0x48(%rsp),%r11
  0x0000000002c4d82d: cmpq   $0x0,(%rax)
  0x0000000002c4d834: je     0x0000000002c4d8ae
  0x0000000002c4d83a: mov    (%r11),%r10
  0x0000000002c4d83d: test   $0x2,%r10
  0x0000000002c4d844: je     0x0000000002c4d8a6
  0x0000000002c4d846: mov    0x16(%r10),%rax
  0x0000000002c4d84a: xor    %r15,%rax
  0x0000000002c4d84d: or     0x26(%r10),%rax
  0x0000000002c4d851: jne    0x0000000002c4d8ae
  0x0000000002c4d853: mov    0x36(%r10),%rax
  0x0000000002c4d857: or     0x3e(%r10),%rax
  0x0000000002c4d85b: jne    0x0000000002c4d867
  0x0000000002c4d85d: movq   $0x0,0x16(%r10)
  0x0000000002c4d865: jmp    0x0000000002c4d8ae
  0x0000000002c4d867: cmpq   $0x0,0x46(%r10)
  0x0000000002c4d86f: je     0x0000000002c4d89a
  0x0000000002c4d871: movq   $0x0,0x16(%r10)
  0x0000000002c4d879: lock addl $0x0,(%rsp)
  0x0000000002c4d87e: cmpq   $0x0,0x46(%r10)
  0x0000000002c4d886: jne    0x0000000002c4d89f
  0x0000000002c4d888: movabs $0x0,%rax
  0x0000000002c4d892: lock cmpxchg %r15,0x16(%r10)
  0x0000000002c4d898: jne    0x0000000002c4d89f
  0x0000000002c4d89a: or     $0x1,%eax
  0x0000000002c4d89d: jmp    0x0000000002c4d8ae
  0x0000000002c4d89f: test   $0x0,%eax
  0x0000000002c4d8a4: jmp    0x0000000002c4d8ae
  0x0000000002c4d8a6: mov    (%rax),%r10
  0x0000000002c4d8a9: lock cmpxchg %r10,(%r11)
  0x0000000002c4d8ae: je     0x0000000002c4d813
  0x0000000002c4d8b4: mov    %r11,%rcx
  0x0000000002c4d8b7: lea    0x70(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x0000000002c4d8bc: movabs $0x5b6bc8b0,%r10
  0x0000000002c4d8c6: callq  *%r10
  0x0000000002c4d8c9: jmpq   0x0000000002c4d813
  0x0000000002c4d8ce: hlt    
  0x0000000002c4d8cf: hlt    
  0x0000000002c4d8d0: hlt    
  0x0000000002c4d8d1: hlt    
  0x0000000002c4d8d2: hlt    
  0x0000000002c4d8d3: hlt    
  0x0000000002c4d8d4: hlt    
  0x0000000002c4d8d5: hlt    
  0x0000000002c4d8d6: hlt    
  0x0000000002c4d8d7: hlt    
  0x0000000002c4d8d8: hlt    
  0x0000000002c4d8d9: hlt    
  0x0000000002c4d8da: hlt    
  0x0000000002c4d8db: hlt    
  0x0000000002c4d8dc: hlt    
  0x0000000002c4d8dd: hlt    
  0x0000000002c4d8de: hlt    
  0x0000000002c4d8df: hlt    
[Stub Code]
  0x0000000002c4d8e0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000002c4d8ea: jmpq   0x0000000002c4d8ea  ;   {runtime_call}
[Exception Handler]
  0x0000000002c4d8ef: jmpq   0x0000000002b87ee0  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000002c4d8f4: callq  0x0000000002c4d8f9
  0x0000000002c4d8f9: subq   $0x5,(%rsp)
  0x0000000002c4d8fe: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c4d903: hlt    
  0x0000000002c4d904: hlt    
  0x0000000002c4d905: hlt    
  0x0000000002c4d906: hlt    
  0x0000000002c4d907: hlt    
<nmethod compile_id='42' compiler='C2' level='4' entry='0x0000000002c4d240' size='3680' address='0x0000000002c4d0d0' relocation_offset='288' insts_offset='368' stub_offset='2064' scopes_data_offset='2160' scopes_pcs_offset='2696' dependencies_offset='3592' handler_table_offset='3608' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='28165' iicount='28165' stamp='0.544'/>
<writer thread='18064'/>
Decoding compiled method 0x0000000002c4ca50:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000000192551d8} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002c4cba0: mov    0x8(%rdx),%r10d
  0x0000000002c4cba4: shl    $0x3,%r10
  0x0000000002c4cba8: cmp    %r10,%rax
  0x0000000002c4cbab: jne    0x0000000002b75f60  ;   {runtime_call}
  0x0000000002c4cbb1: data16 xchg %ax,%ax
  0x0000000002c4cbb4: nopl   0x0(%rax,%rax,1)
  0x0000000002c4cbbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002c4cbc0: mov    %eax,-0x6000(%rsp)
  0x0000000002c4cbc7: push   %rbp
  0x0000000002c4cbc8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)

  0x0000000002c4cbcc: mov    %rdx,%r10
  0x0000000002c4cbcf: mov    0xc(%rdx),%ecx     ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x0000000002c4cbd2: test   %ecx,%ecx
  0x0000000002c4cbd4: je     0x0000000002c4ccc3
  0x0000000002c4cbda: mov    0xc(%r12,%rcx,8),%ebp  ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)

  0x0000000002c4cbdf: test   %r9d,%r9d
  0x0000000002c4cbe2: jl     0x0000000002c4cd09  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x0000000002c4cbe8: mov    $0xffffffff,%eax
  0x0000000002c4cbed: cmp    %ebp,%r9d
  0x0000000002c4cbf0: jge    0x0000000002c4ccb7  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x0000000002c4cbf6: cmp    $0x10000,%r8d
  0x0000000002c4cbfd: jge    0x0000000002c4cd25  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x0000000002c4cc03: cmp    %ebp,%r9d
  0x0000000002c4cc06: jae    0x0000000002c4cce9
  0x0000000002c4cc0c: mov    %ebp,%r11d
  0x0000000002c4cc0f: dec    %r11d
  0x0000000002c4cc12: cmp    %ebp,%r11d
  0x0000000002c4cc15: jae    0x0000000002c4cce9
  0x0000000002c4cc1b: lea    (%r12,%rcx,8),%rbx
  0x0000000002c4cc1f: mov    %r9d,%r10d
  0x0000000002c4cc22: inc    %r10d              ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x0000000002c4cc25: movzwl 0x10(%rbx,%r9,2),%ecx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002c4cc2b: cmp    %r8d,%ecx
  0x0000000002c4cc2e: je     0x0000000002c4ccb4  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002c4cc34: inc    %r9d               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000002c4cc37: cmp    %r10d,%r9d
  0x0000000002c4cc3a: jl     0x0000000002c4cc25  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000002c4cc3c: mov    %ebp,%edi
  0x0000000002c4cc3e: add    $0xfffffffd,%edi
  0x0000000002c4cc41: mov    $0x80000000,%ecx
  0x0000000002c4cc46: cmp    %edi,%r11d
  0x0000000002c4cc49: cmovl  %ecx,%edi
  0x0000000002c4cc4c: cmp    %edi,%r9d
  0x0000000002c4cc4f: jge    0x0000000002c4cc89  ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x0000000002c4cc51: movzwl 0x10(%rbx,%r9,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002c4cc57: cmp    %r8d,%r10d
  0x0000000002c4cc5a: je     0x0000000002c4ccb4  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002c4cc5c: movslq %r9d,%r10
  0x0000000002c4cc5f: movzwl 0x12(%rbx,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002c4cc65: cmp    %r8d,%ecx
  0x0000000002c4cc68: je     0x0000000002c4cca5  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002c4cc6a: movzwl 0x14(%rbx,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002c4cc70: cmp    %r8d,%ecx
  0x0000000002c4cc73: je     0x0000000002c4ccaa  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002c4cc75: movzwl 0x16(%rbx,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002c4cc7b: cmp    %r8d,%r11d
  0x0000000002c4cc7e: je     0x0000000002c4ccb0  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002c4cc80: add    $0x4,%r9d          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000002c4cc84: cmp    %edi,%r9d
  0x0000000002c4cc87: jl     0x0000000002c4cc51  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000002c4cc89: cmp    %ebp,%r9d
  0x0000000002c4cc8c: jge    0x0000000002c4ccb7
  0x0000000002c4cc8e: xchg   %ax,%ax            ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x0000000002c4cc90: movzwl 0x10(%rbx,%r9,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002c4cc96: cmp    %r8d,%r11d
  0x0000000002c4cc99: je     0x0000000002c4ccb4  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002c4cc9b: inc    %r9d               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000002c4cc9e: cmp    %ebp,%r9d
  0x0000000002c4cca1: jl     0x0000000002c4cc90  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000002c4cca3: jmp    0x0000000002c4ccb7
  0x0000000002c4cca5: inc    %r9d
  0x0000000002c4cca8: jmp    0x0000000002c4ccb4
  0x0000000002c4ccaa: add    $0x2,%r9d
  0x0000000002c4ccae: jmp    0x0000000002c4ccb4
  0x0000000002c4ccb0: add    $0x3,%r9d          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000002c4ccb4: mov    %r9d,%eax
  0x0000000002c4ccb7: add    $0x30,%rsp
  0x0000000002c4ccbb: pop    %rbp
  0x0000000002c4ccbc: test   %eax,-0x257ccc2(%rip)        # 0x00000000006d0000
                                                ;   {poll_return}
  0x0000000002c4ccc2: retq   
  0x0000000002c4ccc3: mov    0x39c(%r15),%r11d
  0x0000000002c4ccca: test   %r11d,%r11d
  0x0000000002c4cccd: jne    0x0000000002c4cd41
  0x0000000002c4cccf: mov    $0xfffffff6,%edx
  0x0000000002c4ccd4: mov    %r8d,%ebp
  0x0000000002c4ccd7: mov    %r9d,(%rsp)
  0x0000000002c4ccdb: mov    %r10,0x8(%rsp)
  0x0000000002c4cce0: data16 xchg %ax,%ax
  0x0000000002c4cce3: callq  0x0000000002b757a0  ; OopMap{[8]=Oop off=328}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x0000000002c4cce8: int3                      ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)

  0x0000000002c4cce9: mov    $0xffffff86,%edx
  0x0000000002c4ccee: mov    %r8d,(%rsp)
  0x0000000002c4ccf2: mov    %r9d,0x8(%rsp)
  0x0000000002c4ccf7: mov    %r10,0x10(%rsp)
  0x0000000002c4ccfc: mov    %ecx,0xc(%rsp)
  0x0000000002c4cd00: data16 xchg %ax,%ax
  0x0000000002c4cd03: callq  0x0000000002b757a0  ; OopMap{[12]=NarrowOop [16]=Oop off=360}
                                                ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)
                                                ;   {runtime_call}
  0x0000000002c4cd08: int3                      ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x0000000002c4cd09: mov    $0xffffff65,%edx
  0x0000000002c4cd0e: mov    %r8d,(%rsp)
  0x0000000002c4cd12: mov    %r9d,0x8(%rsp)
  0x0000000002c4cd17: mov    %r10,0x10(%rsp)
  0x0000000002c4cd1c: data16 xchg %ax,%ax
  0x0000000002c4cd1f: callq  0x0000000002b757a0  ; OopMap{[16]=Oop off=388}
                                                ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)
                                                ;   {runtime_call}
  0x0000000002c4cd24: int3                      ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x0000000002c4cd25: mov    $0xffffff65,%edx
  0x0000000002c4cd2a: mov    %r9d,0x4(%rsp)
  0x0000000002c4cd2f: mov    %r8d,0x8(%rsp)
  0x0000000002c4cd34: mov    %r10,0x10(%rsp)
  0x0000000002c4cd39: xchg   %ax,%ax
  0x0000000002c4cd3b: callq  0x0000000002b757a0  ; OopMap{[16]=Oop off=416}
                                                ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)
                                                ;   {runtime_call}
  0x0000000002c4cd40: int3                      ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x0000000002c4cd41: mov    $0xfffffff7,%edx
  0x0000000002c4cd46: mov    %r8d,%ebp
  0x0000000002c4cd49: mov    %r9d,(%rsp)
  0x0000000002c4cd4d: mov    %r10,0x8(%rsp)
  0x0000000002c4cd52: nop
  0x0000000002c4cd53: callq  0x0000000002b757a0  ; OopMap{[8]=Oop off=440}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x0000000002c4cd58: int3                      ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)

  0x0000000002c4cd59: hlt    
  0x0000000002c4cd5a: hlt    
  0x0000000002c4cd5b: hlt    
  0x0000000002c4cd5c: hlt    
  0x0000000002c4cd5d: hlt    
  0x0000000002c4cd5e: hlt    
  0x0000000002c4cd5f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002c4cd60: jmpq   0x0000000002b87ee0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002c4cd65: callq  0x0000000002c4cd6a
  0x0000000002c4cd6a: subq   $0x5,(%rsp)
  0x0000000002c4cd6f: jmpq   0x0000000002b77600  ;   {runtime_call}
  0x0000000002c4cd74: hlt    
  0x0000000002c4cd75: hlt    
  0x0000000002c4cd76: hlt    
  0x0000000002c4cd77: hlt    
<nmethod compile_id='44' compiler='C2' level='4' entry='0x0000000002c4cba0' size='1624' address='0x0000000002c4ca50' relocation_offset='288' insts_offset='336' stub_offset='784' scopes_data_offset='816' scopes_pcs_offset='976' dependencies_offset='1616' method='java/lang/String indexOf (II)I' bytes='70' count='2064' backedge_count='103447' iicount='2064' stamp='0.547'/>
<writer thread='20984'/>
[Loaded sun.launcher.LauncherHelper$FXHelper from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Void from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Shutdown from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
[Loaded java.lang.Shutdown$Lock from C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar]
<writer thread='17328'/>
<destroy_vm stamp='0.548'/>
<tty_done stamp='0.560'/>
</tty>
<compilation_log thread='8488'>
<start_compile_thread name='C2 CompilerThread0' thread='8488' process='14300' stamp='0.327'/>
<task compile_id='2' compile_kind='osr' method='java/lang/String hashCode ()I' bytes='55' count='2956' backedge_count='62464' iicount='2956' osr_bci='24' stamp='0.331'>
<phase name='parse' nodes='3' live='3' stamp='0.360'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='hashCode' return='722' flags='1' bytes='55' iicount='2957'/>
<parse method='832' uses='2957' osr_bci='24' stamp='0.360'>
<dependency type='evol_method' x0='832'/>
<uncommon_trap bci='24' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='24' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='24' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='180' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='none'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='none'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='1102' not_taken='58455' cnt='59557' prob='0.0185033'/>
<bc code='52' bci='39'/>
<uncommon_trap bci='39' reason='null_check' action='none'/>
<uncommon_trap bci='39' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='39' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='266' live='255' memory='67744' stamp='0.360'/>
</parse>
<phase_done name='parse' nodes='267' live='204' stamp='0.360'/>
</phase>
<phase name='optimizer' nodes='267' live='204' stamp='0.360'>
<phase name='idealLoop' nodes='289' live='195' stamp='0.360'>
<loop_tree>
<loop idx='289' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='378' live='223' stamp='0.361'/>
</phase>
<phase name='idealLoop' nodes='378' live='223' stamp='0.361'>
<loop_tree>
<loop idx='289' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='421' live='211' stamp='0.361'/>
</phase>
<phase name='idealLoop' nodes='421' live='211' stamp='0.361'>
<loop_tree>
<loop idx='533' main_loop='533' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='564' live='299' stamp='0.361'/>
</phase>
<phase name='ccp' nodes='564' live='299' stamp='0.361'>
<phase_done name='ccp' nodes='564' live='299' stamp='0.361'/>
</phase>
<phase name='idealLoop' nodes='566' live='295' stamp='0.361'>
<loop_tree>
<loop idx='477' inner_loop='1' pre_loop='426' >
</loop>
<loop idx='595' inner_loop='1' main_loop='595' >
</loop>
<loop idx='442' inner_loop='1' post_loop='426' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='607' live='316' stamp='0.361'/>
</phase>
<phase name='idealLoop' nodes='607' live='316' stamp='0.361'>
<loop_tree>
<loop idx='477' inner_loop='1' pre_loop='426' >
</loop>
<loop idx='595' inner_loop='1' main_loop='595' >
</loop>
<loop idx='442' inner_loop='1' post_loop='426' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='629' live='315' stamp='0.361'/>
</phase>
<phase_done name='optimizer' nodes='640' live='304' stamp='0.362'/>
</phase>
<phase name='matcher' nodes='640' live='304' stamp='0.362'>
<phase_done name='matcher' nodes='282' live='282' stamp='0.362'/>
</phase>
<phase name='regalloc' nodes='357' live='357' stamp='0.362'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='436' live='402' stamp='0.363'/>
</phase>
<phase name='output' nodes='436' live='402' stamp='0.363'>
<phase_done name='output' nodes='458' live='415' stamp='0.367'/>
</phase>
<dependency type='evol_method' x0='832'/>
<code_cache total_blobs='243' nmethods='3' adapters='160' free_code_cache='250550592'/>
<task_done success='1' nmsize='760' count='2978' backedge_count='62952' stamp='0.372'/>
</task>
<task compile_id='9' compile_kind='osr' method='java/lang/String indexOf (II)I' bytes='70' count='1809' backedge_count='97280' iicount='1809' osr_bci='37' stamp='0.380'>
<phase name='parse' nodes='3' live='3' stamp='0.380'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' iicount='1809'/>
<parse method='832' uses='1809' osr_bci='37' stamp='0.386'>
<dependency type='evol_method' x0='832'/>
<uncommon_trap bci='37' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='37' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='37' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='1193' not_taken='90190' cnt='91383' prob='0.0130549'/>
<bc code='52' bci='47'/>
<uncommon_trap bci='47' reason='null_check' action='none'/>
<uncommon_trap bci='47' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='47' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='49'/>
<branch target_bci='55' taken='90050' not_taken='139' cnt='90189' prob='0.998459'/>
<parse_done nodes='210' live='202' memory='53880' stamp='0.386'/>
</parse>
<phase_done name='parse' nodes='211' live='165' stamp='0.386'/>
</phase>
<phase name='optimizer' nodes='211' live='165' stamp='0.386'>
<phase name='idealLoop' nodes='224' live='157' stamp='0.386'>
<loop_tree>
<loop idx='224' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='278' live='163' stamp='0.387'/>
</phase>
<phase name='idealLoop' nodes='278' live='163' stamp='0.387'>
<loop_tree>
<loop idx='283' main_loop='283' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='385' live='226' stamp='0.387'/>
</phase>
<phase name='idealLoop' nodes='385' live='226' stamp='0.387'>
<loop_tree>
<loop idx='349' inner_loop='1' pre_loop='283' >
</loop>
<loop idx='413' inner_loop='1' main_loop='413' >
</loop>
<loop idx='300' inner_loop='1' post_loop='283' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='433' live='244' stamp='0.387'/>
</phase>
<phase name='ccp' nodes='433' live='244' stamp='0.387'>
<phase_done name='ccp' nodes='433' live='244' stamp='0.387'/>
</phase>
<phase name='idealLoop' nodes='435' live='238' stamp='0.387'>
<loop_tree>
<loop idx='349' inner_loop='1' pre_loop='283' >
</loop>
<loop idx='413' inner_loop='1' main_loop='413' >
</loop>
<loop idx='300' inner_loop='1' post_loop='283' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='450' live='236' stamp='0.387'/>
</phase>
<phase name='idealLoop' nodes='450' live='236' stamp='0.387'>
<loop_tree>
<loop idx='349' inner_loop='1' pre_loop='283' >
</loop>
<loop idx='471' inner_loop='1' main_loop='471' >
</loop>
<loop idx='300' inner_loop='1' post_loop='283' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='494' live='270' stamp='0.387'/>
</phase>
<phase name='idealLoop' nodes='494' live='270' stamp='0.387'>
<loop_tree>
<loop idx='349' inner_loop='1' pre_loop='283' >
</loop>
<loop idx='471' inner_loop='1' main_loop='471' >
</loop>
<loop idx='300' inner_loop='1' post_loop='283' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='516' live='266' stamp='0.387'/>
</phase>
<phase_done name='optimizer' nodes='520' live='252' stamp='0.387'/>
</phase>
<phase name='matcher' nodes='520' live='252' stamp='0.387'>
<phase_done name='matcher' nodes='211' live='211' stamp='0.388'/>
</phase>
<phase name='regalloc' nodes='289' live='289' stamp='0.388'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='352' live='326' stamp='0.388'/>
</phase>
<phase name='output' nodes='352' live='326' stamp='0.388'>
<phase_done name='output' nodes='380' live='338' stamp='0.410'/>
</phase>
<dependency type='evol_method' x0='832'/>
<code_cache total_blobs='251' nmethods='11' adapters='160' free_code_cache='250531072'/>
<task_done success='1' nmsize='600' count='2045' backedge_count='102819' stamp='0.416'/>
</task>
<task compile_id='18' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='9984' iicount='9984' stamp='0.430'>
<phase name='parse' nodes='3' live='3' stamp='0.430'>
<klass id='833' name='java/util/TreeMap$Entry' flags='24'/>
<klass id='832' name='java/util/TreeMap' flags='1'/>
<method id='834' holder='832' name='parentOf' return='833' arguments='833' flags='10' bytes='13' iicount='9984'/>
<parse method='834' uses='9984' stamp='0.430'>
<dependency type='evol_method' x0='834'/>
<bc code='199' bci='1'/>
<branch target_bci='8' taken='9983' not_taken='0' cnt='9983' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='43' live='41' memory='25800' stamp='0.430'/>
</parse>
<phase_done name='parse' nodes='44' live='25' stamp='0.430'/>
</phase>
<phase name='optimizer' nodes='44' live='25' stamp='0.430'>
<phase name='ccp' nodes='44' live='25' stamp='0.430'>
<phase_done name='ccp' nodes='44' live='25' stamp='0.430'/>
</phase>
<phase name='idealLoop' nodes='44' live='24' stamp='0.430'>
<phase_done name='idealLoop' nodes='44' live='24' stamp='0.430'/>
</phase>
<phase_done name='optimizer' nodes='44' live='24' stamp='0.430'/>
</phase>
<phase name='matcher' nodes='44' live='24' stamp='0.430'>
<phase_done name='matcher' nodes='24' live='24' stamp='0.430'/>
</phase>
<phase name='regalloc' nodes='30' live='29' stamp='0.430'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='33' live='30' stamp='0.430'/>
</phase>
<phase name='output' nodes='33' live='30' stamp='0.430'>
<phase_done name='output' nodes='39' live='36' stamp='0.436'/>
</phase>
<dependency type='evol_method' x0='834'/>
<code_cache total_blobs='257' nmethods='17' adapters='160' free_code_cache='250521344'/>
<task_done success='1' nmsize='88' count='10000' stamp='0.437'/>
</task>
<task compile_id='20' method='java/lang/String charAt (I)C' bytes='29' count='153728' iicount='153728' stamp='0.439'>
<phase name='parse' nodes='3' live='3' stamp='0.439'>
<type id='717' name='char'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' iicount='153728'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='832' bci='13' reason='unloaded' action='reinterpret' index='245' klass='834'/>
<parse method='832' uses='153728' stamp='0.439'>
<dependency type='evol_method' x0='832'/>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='153727' cnt='153727' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='none'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='153727' not_taken='0' cnt='153727' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='119' live='113' memory='37416' stamp='0.439'/>
</parse>
<phase_done name='parse' nodes='120' live='76' stamp='0.439'/>
</phase>
<phase name='optimizer' nodes='120' live='76' stamp='0.439'>
<phase name='ccp' nodes='124' live='76' stamp='0.439'>
<phase_done name='ccp' nodes='124' live='76' stamp='0.439'/>
</phase>
<phase name='idealLoop' nodes='124' live='76' stamp='0.439'>
<phase_done name='idealLoop' nodes='124' live='76' stamp='0.439'/>
</phase>
<phase_done name='optimizer' nodes='128' live='76' stamp='0.439'/>
</phase>
<phase name='matcher' nodes='128' live='76' stamp='0.439'>
<phase_done name='matcher' nodes='67' live='67' stamp='0.439'/>
</phase>
<phase name='regalloc' nodes='84' live='84' stamp='0.439'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='105' live='95' stamp='0.439'/>
</phase>
<phase name='output' nodes='105' live='95' stamp='0.439'>
<phase_done name='output' nodes='120' live='105' stamp='0.439'/>
</phase>
<dependency type='evol_method' x0='832'/>
<code_cache total_blobs='260' nmethods='20' adapters='160' free_code_cache='250518848'/>
<task_done success='1' nmsize='248' count='153732' stamp='0.442'/>
</task>
<task compile_id='22' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='22668' iicount='22668' stamp='0.442'>
<phase name='parse' nodes='3' live='3' stamp='0.442'>
<klass id='832' name='java/lang/CharacterData' flags='1024'/>
<klass id='835' name='java/lang/CharacterDataLatin1' flags='0'/>
<dependency type='abstract_with_unique_concrete_subtype' ctxk='832' x='835'/>
<type id='722' name='int'/>
<method id='833' holder='832' name='of' return='832' arguments='722' flags='24' bytes='120' iicount='22700'/>
<klass id='836' name='java/lang/CharacterData00' unloaded='1'/>
<uncommon_trap method='833' bci='96' reason='unloaded' action='reinterpret' index='45' klass='836'/>
<klass id='837' name='java/lang/CharacterData01' unloaded='1'/>
<uncommon_trap method='833' bci='100' reason='unloaded' action='reinterpret' index='46' klass='837'/>
<klass id='838' name='java/lang/CharacterData02' unloaded='1'/>
<uncommon_trap method='833' bci='104' reason='unloaded' action='reinterpret' index='47' klass='838'/>
<klass id='839' name='java/lang/CharacterData0E' unloaded='1'/>
<uncommon_trap method='833' bci='108' reason='unloaded' action='reinterpret' index='48' klass='839'/>
<klass id='840' name='java/lang/CharacterDataPrivateUse' unloaded='1'/>
<uncommon_trap method='833' bci='112' reason='unloaded' action='reinterpret' index='50' klass='840'/>
<klass id='841' name='java/lang/CharacterDataUndefined' unloaded='1'/>
<uncommon_trap method='833' bci='116' reason='unloaded' action='reinterpret' index='51' klass='841'/>
<parse method='833' uses='22700' stamp='0.442'>
<dependency type='evol_method' x0='833'/>
<bc code='154' bci='4'/>
<branch target_bci='11' taken='0' not_taken='22698' cnt='22698' prob='never'/>
<uncommon_trap bci='4' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='41' live='39' memory='25784' stamp='0.442'/>
</parse>
<phase_done name='parse' nodes='42' live='23' stamp='0.442'/>
</phase>
<phase name='optimizer' nodes='42' live='23' stamp='0.442'>
<phase name='ccp' nodes='42' live='23' stamp='0.442'>
<phase_done name='ccp' nodes='42' live='23' stamp='0.442'/>
</phase>
<phase name='idealLoop' nodes='42' live='23' stamp='0.442'>
<phase_done name='idealLoop' nodes='42' live='23' stamp='0.442'/>
</phase>
<phase_done name='optimizer' nodes='42' live='23' stamp='0.442'/>
</phase>
<phase name='matcher' nodes='42' live='23' stamp='0.442'>
<phase_done name='matcher' nodes='24' live='24' stamp='0.442'/>
</phase>
<phase name='regalloc' nodes='29' live='29' stamp='0.442'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='33' live='32' stamp='0.442'/>
</phase>
<phase name='output' nodes='33' live='32' stamp='0.442'>
<phase_done name='output' nodes='40' live='38' stamp='0.445'/>
</phase>
<dependency type='evol_method' x0='833'/>
<dependency type='abstract_with_unique_concrete_subtype' ctxk='832' x='835'/>
<code_cache total_blobs='264' nmethods='24' adapters='160' free_code_cache='250515392'/>
<task_done success='1' nmsize='120' count='23020' stamp='0.448'/>
</task>
<task compile_id='29' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='12546' iicount='12546' stamp='0.457'>
<phase name='parse' nodes='3' live='3' stamp='0.457'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='833' holder='832' name='toLowerCase' return='722' arguments='722' flags='0' bytes='39' iicount='12546'/>
<parse method='833' uses='12546' stamp='0.457'>
<dependency type='evol_method' x0='833'/>
<bc code='182' bci='4'/>
<method id='835' holder='832' name='getProperties' return='722' arguments='722' flags='0' bytes='11' compile_id='23' compiler='C2' level='4' iicount='22867'/>
<dependency type='unique_concrete_method' ctxk='832' x='835'/>
<call method='835' count='12034' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='12546' stamp='0.457'>
<dependency type='evol_method' x0='835'/>
<bc code='46' bci='7'/>
<uncommon_trap bci='7' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='65' live='63' memory='30512' stamp='0.457'/>
</parse>
<bc code='153' bci='12'/>
<branch target_bci='37' taken='11680' not_taken='866' cnt='12546' prob='0.930974'/>
<bc code='159' bci='21'/>
<branch target_bci='37' taken='0' not_taken='866' cnt='866' prob='never'/>
<uncommon_trap bci='21' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='97' live='93' memory='35808' stamp='0.457'/>
</parse>
<phase_done name='parse' nodes='98' live='60' stamp='0.457'/>
</phase>
<phase name='optimizer' nodes='98' live='60' stamp='0.457'>
<phase name='ccp' nodes='98' live='58' stamp='0.457'>
<phase_done name='ccp' nodes='98' live='58' stamp='0.457'/>
</phase>
<phase name='idealLoop' nodes='98' live='58' stamp='0.457'>
<phase_done name='idealLoop' nodes='98' live='58' stamp='0.457'/>
</phase>
<phase_done name='optimizer' nodes='98' live='57' stamp='0.457'/>
</phase>
<phase name='matcher' nodes='98' live='57' stamp='0.457'>
<phase_done name='matcher' nodes='50' live='50' stamp='0.457'/>
</phase>
<phase name='regalloc' nodes='62' live='62' stamp='0.457'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='79' live='75' stamp='0.458'/>
</phase>
<phase name='output' nodes='79' live='75' stamp='0.458'>
<phase_done name='output' nodes='91' live='83' stamp='0.458'/>
</phase>
<dependency type='evol_method' x0='833'/>
<dependency type='evol_method' x0='835'/>
<dependency type='unique_concrete_method' ctxk='832' x='835'/>
<code_cache total_blobs='269' nmethods='28' adapters='160' free_code_cache='250505536'/>
<task_done success='1' nmsize='216' count='12546' inlined_bytes='11' stamp='0.459'/>
</task>
<task compile_id='31' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='32640' iicount='32640' stamp='0.470'>
<phase name='parse' nodes='3' live='3' stamp='0.473'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='832' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' iicount='32640'/>
<parse method='832' uses='32640' stamp='0.473'>
<dependency type='evol_method' x0='832'/>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='none'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='32159' not_taken='481' cnt='32640' prob='0.985263'/>
<bc code='183' bci='17'/>
<method id='834' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='714'/>
<call method='834' count='473' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='481' stamp='0.474'>
<dependency type='evol_method' x0='834'/>
<bc code='183' bci='31'/>
<method id='837' holder='793' name='hugeCapacity' return='722' arguments='722' flags='2' bytes='28' iicount='1'/>
<call method='837' count='-1' prof_factor='0.673669' inline='1'/>
<klass id='752' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='837' bci='7' reason='unloaded' action='reinterpret' index='145' klass='752'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='146' live='143' memory='44360' stamp='0.474'/>
</parse>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='835' name='java/util/Arrays' flags='1'/>
<method id='836' holder='835' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='798'/>
<call method='836' count='473' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='481' stamp='0.474'>
<dependency type='evol_method' x0='836'/>
<bc code='184' bci='11'/>
<klass id='839' name='java/lang/Math' flags='17'/>
<method id='840' holder='839' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='19' compiler='C2' level='4' iicount='7176'/>
<call method='840' count='-1' prof_factor='0.602757' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='841' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='16' compile_kind='c2n' level='0' iicount='9088'/>
<call method='841' count='-1' prof_factor='0.602757' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='324' live='320' memory='79184' stamp='0.474'/>
</parse>
<parse_done nodes='351' live='346' memory='84000' stamp='0.474'/>
</parse>
<phase_done name='parse' nodes='353' live='224' stamp='0.474'/>
</phase>
<phase name='optimizer' nodes='353' live='224' stamp='0.474'>
<phase name='ccp' nodes='361' live='221' stamp='0.474'>
<phase_done name='ccp' nodes='361' live='221' stamp='0.474'/>
</phase>
<phase name='idealLoop' nodes='361' live='220' stamp='0.474'>
<phase_done name='idealLoop' nodes='367' live='220' stamp='0.474'/>
</phase>
<phase_done name='optimizer' nodes='422' live='254' stamp='0.474'/>
</phase>
<phase name='matcher' nodes='422' live='254' stamp='0.474'>
<phase_done name='matcher' nodes='256' live='256' stamp='0.474'/>
</phase>
<phase name='regalloc' nodes='321' live='321' stamp='0.475'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='436' live='383' stamp='0.476'/>
</phase>
<phase name='output' nodes='436' live='383' stamp='0.476'>
<phase_done name='output' nodes='456' live='395' stamp='0.476'/>
</phase>
<dependency type='evol_method' x0='832'/>
<dependency type='evol_method' x0='834'/>
<dependency type='evol_method' x0='836'/>
<code_cache total_blobs='274' nmethods='32' adapters='162' free_code_cache='250500800'/>
<task_done success='1' nmsize='776' count='32640' inlined_bytes='69' stamp='0.487'/>
</task>
<task compile_id='42' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='28160' iicount='28160' stamp='0.522'>
<phase name='parse' nodes='3' live='3' stamp='0.522'>
<klass id='794' name='java/lang/StringBuffer' flags='17'/>
<type id='717' name='char'/>
<method id='832' holder='794' name='append' return='794' arguments='717' flags='33' bytes='13' iicount='28160'/>
<parse method='832' uses='28160' stamp='0.522'>
<dependency type='evol_method' x0='832'/>
<bc code='183' bci='7'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='834' holder='793' name='append' return='793' arguments='717' flags='1' bytes='29' iicount='30970'/>
<call method='834' count='27647' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='28159' stamp='0.524'>
<dependency type='evol_method' x0='834'/>
<bc code='183' bci='7'/>
<type id='724' name='void'/>
<type id='722' name='int'/>
<method id='835' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' compile_id='31' compiler='C2' level='4' iicount='32640'/>
<call method='835' count='30463' prof_factor='0.909235' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='28158' stamp='0.524'>
<dependency type='evol_method' x0='835'/>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='none'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='32159' not_taken='481' cnt='32640' prob='0.985263'/>
<bc code='183' bci='17'/>
<method id='837' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='714'/>
<call method='837' count='473' prof_factor='0.862684' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='415' stamp='0.524'>
<dependency type='evol_method' x0='837'/>
<bc code='183' bci='31'/>
<method id='841' holder='793' name='hugeCapacity' return='722' arguments='722' flags='2' bytes='28' iicount='1'/>
<call method='841' count='-1' prof_factor='0.581232' inline='1'/>
<klass id='752' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='841' bci='7' reason='unloaded' action='reinterpret' index='145' klass='752'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='191' live='188' memory='53616' stamp='0.524'/>
</parse>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='838' name='java/util/Arrays' flags='1'/>
<method id='839' holder='838' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='804'/>
<call method='839' count='473' prof_factor='0.862684' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='415' stamp='0.524'>
<dependency type='evol_method' x0='839'/>
<bc code='184' bci='11'/>
<klass id='843' name='java/lang/Math' flags='17'/>
<method id='844' holder='843' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='19' compiler='C2' level='4' iicount='7187'/>
<call method='844' count='-1' prof_factor='0.516169' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='845' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='16' compile_kind='c2n' level='0' iicount='9088'/>
<call method='845' count='-1' prof_factor='0.516169' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='370' live='366' memory='93024' stamp='0.524'/>
</parse>
<parse_done nodes='400' live='395' memory='98760' stamp='0.524'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='none'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='465' live='456' memory='110920' stamp='0.524'/>
</parse>
<parse_done nodes='486' live='476' memory='114400' stamp='0.524'/>
</parse>
<phase_done name='parse' nodes='488' live='306' stamp='0.524'/>
</phase>
<phase name='optimizer' nodes='488' live='306' stamp='0.524'>
<phase name='ccp' nodes='500' live='302' stamp='0.524'>
<phase_done name='ccp' nodes='500' live='302' stamp='0.524'/>
</phase>
<phase name='idealLoop' nodes='500' live='301' stamp='0.524'>
<phase_done name='idealLoop' nodes='518' live='302' stamp='0.525'/>
</phase>
<phase_done name='optimizer' nodes='680' live='429' stamp='0.525'/>
</phase>
<phase name='matcher' nodes='680' live='429' stamp='0.525'>
<phase_done name='matcher' nodes='424' live='424' stamp='0.525'/>
</phase>
<phase name='regalloc' nodes='537' live='537' stamp='0.525'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='775' live='684' stamp='0.527'/>
</phase>
<phase name='output' nodes='779' live='688' stamp='0.527'>
<phase_done name='output' nodes='804' live='703' stamp='0.533'/>
</phase>
<dependency type='evol_method' x0='832'/>
<dependency type='evol_method' x0='834'/>
<dependency type='evol_method' x0='835'/>
<dependency type='evol_method' x0='837'/>
<dependency type='evol_method' x0='839'/>
<code_cache total_blobs='285' nmethods='43' adapters='162' free_code_cache='250484800'/>
<task_done success='1' nmsize='1736' count='28165' inlined_bytes='125' stamp='0.544'/>
</task>
</compilation_log>
<compilation_log thread='9088'>
<start_compile_thread name='C1 CompilerThread2' thread='9088' process='14300' stamp='0.327'/>
<task compile_id='1' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='2305' iicount='2305' level='3' stamp='0.331'>
<type id='722' name='int'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='832' name='java/util/HashMap' flags='1'/>
<method id='833' holder='832' name='hash' return='722' arguments='729' flags='24' bytes='20' iicount='2305'/>
<dependency type='evol_method' x0='833'/>
<phase name='buildIR' stamp='0.331'>
<parse method='833'  stamp='0.331'>
<bc code='182' bci='9'/>
<method id='835' holder='729' name='hashCode' return='722' flags='257' bytes='0' iicount='354'/>
<call method='835' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.331'/>
</parse>
<phase name='optimize_blocks' stamp='0.331'>
<phase_done name='optimize_blocks' stamp='0.331'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.331'>
<phase_done name='rangeCheckElimination' stamp='0.331'/>
</phase>
<phase name='optimize_null_checks' stamp='0.331'>
<phase_done name='optimize_null_checks' stamp='0.331'/>
</phase>
<phase_done name='buildIR' stamp='0.331'/>
</phase>
<phase name='emit_lir' stamp='0.331'>
<phase name='lirGeneration' stamp='0.331'>
<phase_done name='lirGeneration' stamp='0.331'/>
</phase>
<phase name='linearScan' stamp='0.331'>
<phase_done name='linearScan' stamp='0.331'/>
</phase>
<phase_done name='emit_lir' stamp='0.331'/>
</phase>
<phase name='codeemit' stamp='0.331'>
<phase_done name='codeemit' stamp='0.331'/>
</phase>
<phase name='codeinstall' stamp='0.331'>
<dependency type='evol_method' x0='833'/>
<phase_done name='codeinstall' stamp='0.360'/>
</phase>
<code_cache total_blobs='236' nmethods='1' adapters='158' free_code_cache='250596032'/>
<task_done success='1' nmsize='616' count='2307' stamp='0.360'/>
</task>
<task compile_id='3' method='java/util/Hashtable get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='69' count='256' backedge_count='56' iicount='256' level='3' stamp='0.360'>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='765' name='java/util/Hashtable' flags='1'/>
<method id='832' holder='765' name='get' return='729' arguments='729' flags='33' bytes='69' iicount='256'/>
<dependency type='evol_method' x0='832'/>
<phase name='buildIR' stamp='0.360'>
<parse method='832'  stamp='0.360'>
<bc code='182' bci='6'/>
<type id='722' name='int'/>
<method id='836' holder='729' name='hashCode' return='722' flags='257' bytes='0' iicount='354'/>
<call method='836' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='45'/>
<type id='716' name='boolean'/>
<method id='837' holder='729' name='equals' return='716' arguments='729' flags='1' bytes='11' iicount='1'/>
<call method='837' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.360'/>
</parse>
<phase name='optimize_blocks' stamp='0.360'>
<phase_done name='optimize_blocks' stamp='0.360'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.360'>
<phase_done name='rangeCheckElimination' stamp='0.360'/>
</phase>
<phase name='optimize_null_checks' stamp='0.360'>
<phase_done name='optimize_null_checks' stamp='0.360'/>
</phase>
<phase_done name='buildIR' stamp='0.360'/>
</phase>
<phase name='emit_lir' stamp='0.360'>
<phase name='lirGeneration' stamp='0.360'>
<phase_done name='lirGeneration' stamp='0.360'/>
</phase>
<phase name='linearScan' stamp='0.360'>
<phase_done name='linearScan' stamp='0.360'/>
</phase>
<phase_done name='emit_lir' stamp='0.360'/>
</phase>
<phase name='codeemit' stamp='0.360'>
<phase_done name='codeemit' stamp='0.360'/>
</phase>
<phase name='codeinstall' stamp='0.360'>
<dependency type='evol_method' x0='832'/>
<phase_done name='codeinstall' stamp='0.367'/>
</phase>
<code_cache total_blobs='241' nmethods='2' adapters='160' free_code_cache='250554496'/>
<task_done success='1' nmsize='1624' count='272' backedge_count='58' stamp='0.367'/>
</task>
<task compile_id='4' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='640' iicount='640' level='3' stamp='0.372'>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='832' name='java/lang/ref/ReferenceQueue' flags='1'/>
<klass id='755' name='java/lang/ref/Reference' flags='1025'/>
<method id='833' holder='755' name='&lt;init&gt;' return='724' arguments='729 832' flags='0' bytes='25' iicount='640'/>
<dependency type='evol_method' x0='833'/>
<phase name='buildIR' stamp='0.372'>
<parse method='833'  stamp='0.372'>
<bc code='183' bci='1'/>
<method id='835' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='12082'/>
<call method='835' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='755'/>
<parse_done stamp='0.372'/>
</parse>
<dependency type='evol_method' x0='835'/>
<parse_done stamp='0.372'/>
</parse>
<phase name='optimize_blocks' stamp='0.372'>
<phase_done name='optimize_blocks' stamp='0.372'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.372'>
<phase_done name='rangeCheckElimination' stamp='0.372'/>
</phase>
<phase name='optimize_null_checks' stamp='0.372'>
<phase_done name='optimize_null_checks' stamp='0.372'/>
</phase>
<phase_done name='buildIR' stamp='0.372'/>
</phase>
<phase name='emit_lir' stamp='0.372'>
<phase name='lirGeneration' stamp='0.373'>
<phase_done name='lirGeneration' stamp='0.373'/>
</phase>
<phase name='linearScan' stamp='0.373'>
<phase_done name='linearScan' stamp='0.373'/>
</phase>
<phase_done name='emit_lir' stamp='0.373'/>
</phase>
<phase name='codeemit' stamp='0.373'>
<phase_done name='codeemit' stamp='0.373'/>
</phase>
<phase name='codeinstall' stamp='0.373'>
<dependency type='evol_method' x0='833'/>
<dependency type='evol_method' x0='835'/>
<dependency type='no_finalizable_subclasses' ctxk='755'/>
<phase_done name='codeinstall' stamp='0.375'/>
</phase>
<code_cache total_blobs='243' nmethods='4' adapters='160' free_code_cache='250554688'/>
<task_done success='1' nmsize='592' count='640' inlined_bytes='1' stamp='0.375'/>
</task>
<task compile_id='6' method='java/util/HashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='23' count='1025' iicount='1025' level='3' stamp='0.376'>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='832' name='java/util/HashMap' flags='1'/>
<method id='833' holder='832' name='get' return='729' arguments='729' flags='1' bytes='23' iicount='1025'/>
<dependency type='evol_method' x0='833'/>
<phase name='buildIR' stamp='0.376'>
<parse method='833'  stamp='0.376'>
<bc code='184' bci='2'/>
<type id='722' name='int'/>
<method id='835' holder='832' name='hash' return='722' arguments='729' flags='24' bytes='20' compile_id='1' compiler='C1' level='3' iicount='2327'/>
<call method='835' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='182' bci='9'/>
<method id='837' holder='729' name='hashCode' return='722' flags='257' bytes='0' iicount='356'/>
<call method='837' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.376'/>
</parse>
<dependency type='evol_method' x0='835'/>
<bc code='182' bci='6'/>
<klass id='838' name='java/util/HashMap$Node' flags='8'/>
<method id='839' holder='832' name='getNode' return='838' arguments='722 729' flags='16' bytes='148' iicount='1587'/>
<call method='839' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.376'/>
</parse>
<phase name='optimize_blocks' stamp='0.376'>
<phase_done name='optimize_blocks' stamp='0.376'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.376'>
<phase_done name='rangeCheckElimination' stamp='0.376'/>
</phase>
<phase name='optimize_null_checks' stamp='0.376'>
<phase_done name='optimize_null_checks' stamp='0.376'/>
</phase>
<phase_done name='buildIR' stamp='0.376'/>
</phase>
<phase name='emit_lir' stamp='0.376'>
<phase name='lirGeneration' stamp='0.376'>
<phase_done name='lirGeneration' stamp='0.376'/>
</phase>
<phase name='linearScan' stamp='0.376'>
<phase_done name='linearScan' stamp='0.376'/>
</phase>
<phase_done name='emit_lir' stamp='0.376'/>
</phase>
<phase name='codeemit' stamp='0.376'>
<phase_done name='codeemit' stamp='0.376'/>
</phase>
<phase name='codeinstall' stamp='0.376'>
<dependency type='evol_method' x0='833'/>
<dependency type='evol_method' x0='835'/>
<phase_done name='codeinstall' stamp='0.380'/>
</phase>
<code_cache total_blobs='245' nmethods='5' adapters='160' free_code_cache='250547328'/>
<task_done success='1' nmsize='1048' count='1027' inlined_bytes='20' stamp='0.380'/>
</task>
<task compile_id='7' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='513' iicount='513' level='3' stamp='0.380'>
<klass id='833' name='java/util/HashMap$Node' flags='8'/>
<type id='722' name='int'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='832' name='java/util/HashMap' flags='1'/>
<method id='834' holder='832' name='newNode' return='833' arguments='722 729 729 833' flags='0' bytes='13' iicount='513'/>
<dependency type='evol_method' x0='834'/>
<phase name='buildIR' stamp='0.380'>
<parse method='834'  stamp='0.380'>
<bc code='183' bci='9'/>
<type id='724' name='void'/>
<method id='836' holder='833' name='&lt;init&gt;' return='724' arguments='722 729 729 833' flags='0' bytes='26' iicount='720'/>
<call method='836' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='183' bci='1'/>
<method id='838' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='12135'/>
<call method='838' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<parse_done stamp='0.386'/>
</parse>
<dependency type='evol_method' x0='838'/>
<parse_done stamp='0.386'/>
</parse>
<dependency type='evol_method' x0='836'/>
<parse_done stamp='0.386'/>
</parse>
<phase name='optimize_blocks' stamp='0.386'>
<phase_done name='optimize_blocks' stamp='0.386'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.386'>
<phase_done name='rangeCheckElimination' stamp='0.386'/>
</phase>
<phase name='optimize_null_checks' stamp='0.386'>
<phase_done name='optimize_null_checks' stamp='0.386'/>
</phase>
<phase_done name='buildIR' stamp='0.386'/>
</phase>
<phase name='emit_lir' stamp='0.386'>
<phase name='lirGeneration' stamp='0.386'>
<phase_done name='lirGeneration' stamp='0.386'/>
</phase>
<phase name='linearScan' stamp='0.386'>
<phase_done name='linearScan' stamp='0.386'/>
</phase>
<phase_done name='emit_lir' stamp='0.386'/>
</phase>
<phase name='codeemit' stamp='0.386'>
<phase_done name='codeemit' stamp='0.386'/>
</phase>
<phase name='codeinstall' stamp='0.386'>
<dependency type='evol_method' x0='834'/>
<dependency type='evol_method' x0='838'/>
<dependency type='evol_method' x0='836'/>
<phase_done name='codeinstall' stamp='0.390'/>
</phase>
<code_cache total_blobs='248' nmethods='7' adapters='160' free_code_cache='250542656'/>
<task_done success='1' nmsize='688' count='554' inlined_bytes='27' stamp='0.390'/>
</task>
<task compile_id='14' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='785' backedge_count='81' iicount='785' level='3' stamp='0.390'>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='722' name='int'/>
<type id='716' name='boolean'/>
<klass id='832' name='java/util/HashMap' flags='1'/>
<method id='833' holder='832' name='putVal' return='729' arguments='722 729 729 716 716' flags='16' bytes='300' iicount='785'/>
<dependency type='evol_method' x0='833'/>
<phase name='buildIR' stamp='0.390'>
<parse method='833'  stamp='0.390'>
<bc code='182' bci='20'/>
<klass id='837' name='[Ljava/util/HashMap$Node;' flags='1040'/>
<method id='838' holder='832' name='resize' return='837' flags='16' bytes='359' iicount='51'/>
<call method='838' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='56'/>
<klass id='836' name='java/util/HashMap$Node' flags='8'/>
<method id='840' holder='832' name='newNode' return='836' arguments='722 729 729 836' flags='0' bytes='13' compile_id='7' compiler='C1' level='3' iicount='554'/>
<call method='840' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='91'/>
<method id='841' holder='729' name='equals' return='716' arguments='729' flags='1' bytes='11' iicount='1'/>
<call method='841' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='123'/>
<klass id='842' name='java/util/HashMap$TreeNode' flags='24'/>
<method id='843' holder='842' name='putTreeVal' return='842' arguments='832 837 722 729 729' flags='16' bytes='314' iicount='1'/>
<call method='843' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='152'/>
<call method='840' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='169'/>
<type id='724' name='void'/>
<method id='844' holder='832' name='treeifyBin' return='724' arguments='837 722' flags='16' bytes='110' iicount='1'/>
<call method='844' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='203'/>
<call method='841' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='253'/>
<method id='846' holder='832' name='afterNodeAccess' return='724' arguments='836' flags='0' bytes='1' iicount='33'/>
<call method='846' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='288'/>
<call method='838' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='295'/>
<method id='847' holder='832' name='afterNodeInsertion' return='724' arguments='716' flags='0' bytes='1' iicount='554'/>
<call method='847' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.390'/>
</parse>
<phase name='optimize_blocks' stamp='0.390'>
<phase_done name='optimize_blocks' stamp='0.390'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.390'>
<phase_done name='rangeCheckElimination' stamp='0.390'/>
</phase>
<phase name='optimize_null_checks' stamp='0.390'>
<phase_done name='optimize_null_checks' stamp='0.390'/>
</phase>
<phase_done name='buildIR' stamp='0.390'/>
</phase>
<phase name='emit_lir' stamp='0.390'>
<phase name='lirGeneration' stamp='0.390'>
<phase_done name='lirGeneration' stamp='0.391'/>
</phase>
<phase name='linearScan' stamp='0.391'>
<phase_done name='linearScan' stamp='0.391'/>
</phase>
<phase_done name='emit_lir' stamp='0.391'/>
</phase>
<phase name='codeemit' stamp='0.391'>
<phase_done name='codeemit' stamp='0.391'/>
</phase>
<phase name='codeinstall' stamp='0.391'>
<dependency type='evol_method' x0='833'/>
<phase_done name='codeinstall' stamp='0.410'/>
</phase>
<code_cache total_blobs='252' nmethods='9' adapters='160' free_code_cache='250515904'/>
<task_done success='1' nmsize='4952' count='791' backedge_count='82' stamp='0.410'/>
</task>
<task compile_id='11' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='2377' iicount='2377' level='3' stamp='0.410'>
<type id='724' name='void'/>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' iicount='2377'/>
<dependency type='evol_method' x0='832'/>
<phase name='buildIR' stamp='0.410'>
<parse method='832'  stamp='0.410'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='834' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='12248'/>
<call method='834' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<parse_done stamp='0.416'/>
</parse>
<dependency type='evol_method' x0='834'/>
<bc code='183' bci='13'/>
<klass id='836' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='837' holder='836' name='&lt;init&gt;' return='724' arguments='722' unloaded='1'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='30'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='65'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='75'/>
<klass id='839' name='java/util/Arrays' flags='1'/>
<method id='840' holder='839' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' iicount='2810'/>
<call method='840' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.416'/>
</parse>
<phase name='optimize_blocks' stamp='0.416'>
<phase_done name='optimize_blocks' stamp='0.416'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.416'>
<phase_done name='rangeCheckElimination' stamp='0.416'/>
</phase>
<phase name='optimize_null_checks' stamp='0.416'>
<phase_done name='optimize_null_checks' stamp='0.416'/>
</phase>
<phase_done name='buildIR' stamp='0.416'/>
</phase>
<phase name='emit_lir' stamp='0.416'>
<phase name='lirGeneration' stamp='0.416'>
<phase_done name='lirGeneration' stamp='0.416'/>
</phase>
<phase name='linearScan' stamp='0.416'>
<phase_done name='linearScan' stamp='0.416'/>
</phase>
<phase_done name='emit_lir' stamp='0.416'/>
</phase>
<phase name='codeemit' stamp='0.416'>
<phase_done name='codeemit' stamp='0.416'/>
</phase>
<phase name='codeinstall' stamp='0.416'>
<dependency type='evol_method' x0='832'/>
<dependency type='evol_method' x0='834'/>
<phase_done name='codeinstall' stamp='0.423'/>
</phase>
<code_cache total_blobs='253' nmethods='12' adapters='160' free_code_cache='250522176'/>
<task_done success='1' nmsize='1336' count='2378' inlined_bytes='1' stamp='0.423'/>
</task>
<task compile_id='12' method='java/lang/String indexOf (I)I' bytes='7' count='1737' iicount='1737' level='3' stamp='0.423'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722' flags='1' bytes='7' iicount='1737'/>
<dependency type='evol_method' x0='832'/>
<phase name='buildIR' stamp='0.423'>
<parse method='832'  stamp='0.423'>
<bc code='182' bci='3'/>
<method id='834' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' iicount='2045'/>
<call method='834' instr='invokevirtual'/>
<inline_fail reason='inlining prohibited by policy'/>
<parse_done stamp='0.424'/>
</parse>
<phase name='optimize_blocks' stamp='0.424'>
<phase_done name='optimize_blocks' stamp='0.424'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.424'>
<phase_done name='rangeCheckElimination' stamp='0.424'/>
</phase>
<phase name='optimize_null_checks' stamp='0.424'>
<phase_done name='optimize_null_checks' stamp='0.424'/>
</phase>
<phase_done name='buildIR' stamp='0.424'/>
</phase>
<phase name='emit_lir' stamp='0.424'>
<phase name='lirGeneration' stamp='0.424'>
<phase_done name='lirGeneration' stamp='0.424'/>
</phase>
<phase name='linearScan' stamp='0.424'>
<phase_done name='linearScan' stamp='0.424'/>
</phase>
<phase_done name='emit_lir' stamp='0.424'/>
</phase>
<phase name='codeemit' stamp='0.424'>
<phase_done name='codeemit' stamp='0.424'/>
</phase>
<phase name='codeinstall' stamp='0.424'>
<dependency type='evol_method' x0='832'/>
<phase_done name='codeinstall' stamp='0.426'/>
</phase>
<code_cache total_blobs='253' nmethods='14' adapters='160' free_code_cache='250531840'/>
<task_done success='1' nmsize='552' count='1737' stamp='0.426'/>
</task>
<task compile_id='15' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='790' iicount='790' level='3' stamp='0.426'>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='832' name='java/util/HashMap' flags='1'/>
<method id='833' holder='832' name='put' return='729' arguments='729 729' flags='1' bytes='13' iicount='790'/>
<dependency type='evol_method' x0='833'/>
<phase name='buildIR' stamp='0.426'>
<parse method='833'  stamp='0.426'>
<bc code='184' bci='2'/>
<type id='722' name='int'/>
<method id='835' holder='832' name='hash' return='722' arguments='729' flags='24' bytes='20' compile_id='1' compiler='C1' level='3' iicount='2389'/>
<call method='835' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='182' bci='9'/>
<method id='837' holder='729' name='hashCode' return='722' flags='257' bytes='0' iicount='356'/>
<call method='837' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.426'/>
</parse>
<dependency type='evol_method' x0='835'/>
<bc code='182' bci='9'/>
<type id='716' name='boolean'/>
<method id='838' holder='832' name='putVal' return='729' arguments='722 729 729 716 716' flags='16' bytes='300' compile_id='14' compiler='C1' level='3' iicount='792'/>
<call method='838' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.426'/>
</parse>
<phase name='optimize_blocks' stamp='0.426'>
<phase_done name='optimize_blocks' stamp='0.426'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.426'>
<phase_done name='rangeCheckElimination' stamp='0.426'/>
</phase>
<phase name='optimize_null_checks' stamp='0.426'>
<phase_done name='optimize_null_checks' stamp='0.426'/>
</phase>
<phase_done name='buildIR' stamp='0.426'/>
</phase>
<phase name='emit_lir' stamp='0.426'>
<phase name='lirGeneration' stamp='0.426'>
<phase_done name='lirGeneration' stamp='0.426'/>
</phase>
<phase name='linearScan' stamp='0.426'>
<phase_done name='linearScan' stamp='0.426'/>
</phase>
<phase_done name='emit_lir' stamp='0.426'/>
</phase>
<phase name='codeemit' stamp='0.426'>
<phase_done name='codeemit' stamp='0.426'/>
</phase>
<phase name='codeinstall' stamp='0.426'>
<dependency type='evol_method' x0='833'/>
<dependency type='evol_method' x0='835'/>
<phase_done name='codeinstall' stamp='0.430'/>
</phase>
<code_cache total_blobs='254' nmethods='15' adapters='160' free_code_cache='250530048'/>
<task_done success='1' nmsize='952' count='790' inlined_bytes='20' stamp='0.430'/>
</task>
<task compile_id='17' method='java/lang/String substring (II)Ljava/lang/String;' bytes='79' count='768' iicount='768' level='3' stamp='0.430'>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='722' name='int'/>
<method id='832' holder='730' name='substring' return='730' arguments='722 722' flags='1' bytes='79' iicount='768'/>
<dependency type='evol_method' x0='832'/>
<phase name='buildIR' stamp='0.430'>
<parse method='832'  stamp='0.430'>
<bc code='183' bci='9'/>
<type id='724' name='void'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='835' holder='834' name='&lt;init&gt;' return='724' arguments='722' unloaded='1'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='44'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='75'/>
<klass id='821' name='[C' flags='1041'/>
<method id='836' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' compile_id='11' compiler='C1' level='3' iicount='2378'/>
<call method='836' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.430'/>
</parse>
<phase name='optimize_blocks' stamp='0.430'>
<phase_done name='optimize_blocks' stamp='0.430'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.430'>
<phase_done name='rangeCheckElimination' stamp='0.430'/>
</phase>
<phase name='optimize_null_checks' stamp='0.430'>
<phase_done name='optimize_null_checks' stamp='0.430'/>
</phase>
<phase_done name='buildIR' stamp='0.430'/>
</phase>
<phase name='emit_lir' stamp='0.430'>
<phase name='lirGeneration' stamp='0.430'>
<phase_done name='lirGeneration' stamp='0.430'/>
</phase>
<phase name='linearScan' stamp='0.430'>
<phase_done name='linearScan' stamp='0.430'/>
</phase>
<phase_done name='emit_lir' stamp='0.430'/>
</phase>
<phase name='codeemit' stamp='0.430'>
<phase_done name='codeemit' stamp='0.430'/>
</phase>
<phase name='codeinstall' stamp='0.430'>
<dependency type='evol_method' x0='832'/>
<phase_done name='codeinstall' stamp='0.436'/>
</phase>
<code_cache total_blobs='256' nmethods='16' adapters='160' free_code_cache='250521920'/>
<task_done success='1' nmsize='1272' count='768' stamp='0.436'/>
</task>
<task compile_id='8' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='561' iicount='561' level='3' stamp='0.436'>
<type id='724' name='void'/>
<type id='716' name='boolean'/>
<klass id='832' name='java/util/HashMap' flags='1'/>
<method id='833' holder='832' name='afterNodeInsertion' return='724' arguments='716' flags='0' bytes='1' iicount='561'/>
<dependency type='evol_method' x0='833'/>
<phase name='buildIR' stamp='0.437'>
<parse method='833'  stamp='0.437'>
<parse_done stamp='0.437'/>
</parse>
<phase name='optimize_blocks' stamp='0.437'>
<phase_done name='optimize_blocks' stamp='0.437'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.437'>
<phase_done name='rangeCheckElimination' stamp='0.437'/>
</phase>
<phase name='optimize_null_checks' stamp='0.437'>
<phase_done name='optimize_null_checks' stamp='0.437'/>
</phase>
<phase_done name='buildIR' stamp='0.437'/>
</phase>
<phase name='emit_lir' stamp='0.437'>
<phase name='lirGeneration' stamp='0.437'>
<phase_done name='lirGeneration' stamp='0.437'/>
</phase>
<phase name='linearScan' stamp='0.437'>
<phase_done name='linearScan' stamp='0.437'/>
</phase>
<phase_done name='emit_lir' stamp='0.437'/>
</phase>
<phase name='codeemit' stamp='0.437'>
<phase_done name='codeemit' stamp='0.437'/>
</phase>
<phase name='codeinstall' stamp='0.437'>
<dependency type='evol_method' x0='833'/>
<phase_done name='codeinstall' stamp='0.438'/>
</phase>
<code_cache total_blobs='257' nmethods='18' adapters='160' free_code_cache='250525888'/>
<task_done success='1' nmsize='336' count='561' stamp='0.438'/>
</task>
<task compile_id='24' method='java/lang/Character toUpperCase (C)C' bytes='6' count='256' iicount='256' level='3' stamp='0.442'>
<type id='717' name='char'/>
<klass id='810' name='java/lang/Character' flags='17'/>
<method id='832' holder='810' name='toUpperCase' return='717' arguments='717' flags='9' bytes='6' iicount='256'/>
<dependency type='evol_method' x0='832'/>
<phase name='buildIR' stamp='0.442'>
<parse method='832'  stamp='0.442'>
<bc code='184' bci='1'/>
<type id='722' name='int'/>
<method id='834' holder='810' name='toUpperCase' return='722' arguments='722' flags='9' bytes='9' iicount='255'/>
<call method='834' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<bc code='184' bci='1'/>
<klass id='836' name='java/lang/CharacterData' flags='1024'/>
<method id='837' holder='836' name='of' return='836' arguments='722' flags='24' bytes='120' iicount='22771'/>
<call method='837' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='839' holder='836' name='toUpperCase' return='722' arguments='722' flags='1024' bytes='0' iicount='1'/>
<call method='839' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.442'/>
</parse>
<dependency type='evol_method' x0='834'/>
<parse_done stamp='0.442'/>
</parse>
<phase name='optimize_blocks' stamp='0.442'>
<phase_done name='optimize_blocks' stamp='0.442'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.442'>
<phase_done name='rangeCheckElimination' stamp='0.442'/>
</phase>
<phase name='optimize_null_checks' stamp='0.442'>
<phase_done name='optimize_null_checks' stamp='0.442'/>
</phase>
<phase_done name='buildIR' stamp='0.442'/>
</phase>
<phase name='emit_lir' stamp='0.442'>
<phase name='lirGeneration' stamp='0.442'>
<phase_done name='lirGeneration' stamp='0.442'/>
</phase>
<phase name='linearScan' stamp='0.442'>
<phase_done name='linearScan' stamp='0.442'/>
</phase>
<phase_done name='emit_lir' stamp='0.442'/>
</phase>
<phase name='codeemit' stamp='0.442'>
<phase_done name='codeemit' stamp='0.442'/>
</phase>
<phase name='codeinstall' stamp='0.442'>
<dependency type='evol_method' x0='832'/>
<dependency type='evol_method' x0='834'/>
<phase_done name='codeinstall' stamp='0.445'/>
</phase>
<code_cache total_blobs='262' nmethods='21' adapters='160' free_code_cache='250512000'/>
<task_done success='1' nmsize='664' count='256' inlined_bytes='9' stamp='0.445'/>
</task>
<task compile_id='25' method='java/lang/CharacterDataLatin1 toUpperCase (I)I' bytes='53' count='256' iicount='256' level='3' stamp='0.447'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='833' holder='832' name='toUpperCase' return='722' arguments='722' flags='0' bytes='53' iicount='504'/>
<dependency type='evol_method' x0='833'/>
<phase name='buildIR' stamp='0.448'>
<parse method='833'  stamp='0.448'>
<bc code='182' bci='4'/>
<method id='835' holder='832' name='getProperties' return='722' arguments='722' flags='0' bytes='11' compile_id='23' compiler='C2' level='4' iicount='22771'/>
<call method='835' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='832'/>
<parse method='835'>
<parse_done stamp='0.448'/>
</parse>
<dependency type='evol_method' x0='835'/>
<parse_done stamp='0.448'/>
</parse>
<phase name='optimize_blocks' stamp='0.448'>
<phase_done name='optimize_blocks' stamp='0.448'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.448'>
<phase_done name='rangeCheckElimination' stamp='0.448'/>
</phase>
<phase name='optimize_null_checks' stamp='0.448'>
<phase_done name='optimize_null_checks' stamp='0.448'/>
</phase>
<phase_done name='buildIR' stamp='0.448'/>
</phase>
<phase name='emit_lir' stamp='0.448'>
<phase name='lirGeneration' stamp='0.448'>
<phase_done name='lirGeneration' stamp='0.448'/>
</phase>
<phase name='linearScan' stamp='0.448'>
<phase_done name='linearScan' stamp='0.448'/>
</phase>
<phase_done name='emit_lir' stamp='0.448'/>
</phase>
<phase name='codeemit' stamp='0.448'>
<phase_done name='codeemit' stamp='0.448'/>
</phase>
<phase name='codeinstall' stamp='0.448'>
<dependency type='evol_method' x0='833'/>
<dependency type='evol_method' x0='835'/>
<dependency type='leaf_type' ctxk='832'/>
<phase_done name='codeinstall' stamp='0.452'/>
</phase>
<code_cache total_blobs='264' nmethods='25' adapters='160' free_code_cache='250519232'/>
<task_done success='1' nmsize='752' count='504' inlined_bytes='11' stamp='0.452'/>
</task>
<task compile_id='26' method='java/util/TreeMap leftOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='1792' iicount='1792' level='3' stamp='0.452'>
<klass id='833' name='java/util/TreeMap$Entry' flags='24'/>
<klass id='832' name='java/util/TreeMap' flags='1'/>
<method id='834' holder='832' name='leftOf' return='833' arguments='833' flags='10' bytes='13' iicount='1792'/>
<dependency type='evol_method' x0='834'/>
<phase name='buildIR' stamp='0.453'>
<parse method='834'  stamp='0.453'>
<parse_done stamp='0.453'/>
</parse>
<phase name='optimize_blocks' stamp='0.453'>
<phase_done name='optimize_blocks' stamp='0.453'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.453'>
<phase_done name='rangeCheckElimination' stamp='0.453'/>
</phase>
<phase name='optimize_null_checks' stamp='0.453'>
<phase_done name='optimize_null_checks' stamp='0.453'/>
</phase>
<phase_done name='buildIR' stamp='0.453'/>
</phase>
<phase name='emit_lir' stamp='0.453'>
<phase name='lirGeneration' stamp='0.453'>
<phase_done name='lirGeneration' stamp='0.453'/>
</phase>
<phase name='linearScan' stamp='0.453'>
<phase_done name='linearScan' stamp='0.453'/>
</phase>
<phase_done name='emit_lir' stamp='0.453'/>
</phase>
<phase name='codeemit' stamp='0.453'>
<phase_done name='codeemit' stamp='0.453'/>
</phase>
<phase name='codeinstall' stamp='0.453'>
<dependency type='evol_method' x0='834'/>
<phase_done name='codeinstall' stamp='0.455'/>
</phase>
<code_cache total_blobs='265' nmethods='26' adapters='160' free_code_cache='250518208'/>
<task_done success='1' nmsize='432' count='1801' stamp='0.455'/>
</task>
<task compile_id='27' method='java/util/TreeMap setColor (Ljava/util/TreeMap$Entry;Z)V' bytes='10' count='2434' iicount='2434' level='3' stamp='0.455'>
<type id='724' name='void'/>
<klass id='833' name='java/util/TreeMap$Entry' flags='24'/>
<type id='716' name='boolean'/>
<klass id='832' name='java/util/TreeMap' flags='1'/>
<method id='834' holder='832' name='setColor' return='724' arguments='833 716' flags='10' bytes='10' iicount='2434'/>
<dependency type='evol_method' x0='834'/>
<phase name='buildIR' stamp='0.455'>
<parse method='834'  stamp='0.455'>
<parse_done stamp='0.455'/>
</parse>
<phase name='optimize_blocks' stamp='0.455'>
<phase_done name='optimize_blocks' stamp='0.455'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.455'>
<phase_done name='rangeCheckElimination' stamp='0.455'/>
</phase>
<phase name='optimize_null_checks' stamp='0.455'>
<phase_done name='optimize_null_checks' stamp='0.455'/>
</phase>
<phase_done name='buildIR' stamp='0.455'/>
</phase>
<phase name='emit_lir' stamp='0.455'>
<phase name='lirGeneration' stamp='0.455'>
<phase_done name='lirGeneration' stamp='0.455'/>
</phase>
<phase name='linearScan' stamp='0.455'>
<phase_done name='linearScan' stamp='0.455'/>
</phase>
<phase_done name='emit_lir' stamp='0.455'/>
</phase>
<phase name='codeemit' stamp='0.455'>
<phase_done name='codeemit' stamp='0.455'/>
</phase>
<phase name='codeinstall' stamp='0.455'>
<dependency type='evol_method' x0='834'/>
<phase_done name='codeinstall' stamp='0.457'/>
</phase>
<code_cache total_blobs='266' nmethods='27' adapters='160' free_code_cache='250517248'/>
<task_done success='1' nmsize='368' count='2434' stamp='0.457'/>
</task>
<task compile_id='30' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='2816' iicount='2816' level='3' stamp='0.457'>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='832' name='java/util/Arrays' flags='1'/>
<method id='833' holder='832' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' iicount='2816'/>
<dependency type='evol_method' x0='833'/>
<phase name='buildIR' stamp='0.457'>
<parse method='833'  stamp='0.457'>
<bc code='183' bci='16'/>
<type id='724' name='void'/>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<method id='836' holder='795' name='&lt;init&gt;' return='724' flags='1' bytes='7' iicount='526'/>
<call method='836' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='183' bci='3'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='838' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='1018'/>
<call method='838' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='840' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='13' compiler='C2' level='4' iicount='12257'/>
<call method='840' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='840'>
<parse_done stamp='0.457'/>
</parse>
<dependency type='evol_method' x0='840'/>
<parse_done stamp='0.457'/>
</parse>
<dependency type='evol_method' x0='838'/>
<parse_done stamp='0.457'/>
</parse>
<dependency type='evol_method' x0='836'/>
<bc code='182' bci='20'/>
<method id='842' holder='795' name='append' return='795' arguments='722' flags='1' bytes='8' iicount='1'/>
<call method='842' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<bc code='183' bci='2'/>
<method id='844' holder='793' name='append' return='793' arguments='722' flags='1' bytes='62' iicount='1'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.457'/>
</parse>
<dependency type='evol_method' x0='842'/>
<bc code='182' bci='25'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='847' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' iicount='1355'/>
<call method='847' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<bc code='183' bci='2'/>
<method id='849' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' iicount='1742'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.457'/>
</parse>
<dependency type='evol_method' x0='847'/>
<bc code='182' bci='29'/>
<call method='842' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<bc code='183' bci='2'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.457'/>
</parse>
<dependency type='evol_method' x0='842'/>
<bc code='182' bci='32'/>
<method id='851' holder='795' name='toString' return='730' flags='1' bytes='17' iicount='574'/>
<call method='851' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='183' bci='13'/>
<method id='853' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' compile_id='11' compiler='C1' level='3' iicount='2384'/>
<call method='853' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.457'/>
</parse>
<dependency type='evol_method' x0='851'/>
<bc code='183' bci='35'/>
<klass id='835' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='855' holder='835' name='&lt;init&gt;' return='724' arguments='730' flags='1' bytes='6' iicount='1'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='54'/>
<klass id='857' name='java/lang/Math' flags='17'/>
<method id='858' holder='857' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='19' compiler='C2' level='4' iicount='7176'/>
<call method='858' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='858'>
<parse_done stamp='0.457'/>
</parse>
<dependency type='evol_method' x0='858'/>
<bc code='184' bci='57'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='860' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='16' compile_kind='c2n' level='0' iicount='9088'/>
<call method='860' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<dependency type='evol_method' x0='860'/>
<parse_done stamp='0.457'/>
</parse>
<phase name='optimize_blocks' stamp='0.457'>
<phase_done name='optimize_blocks' stamp='0.457'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.457'>
<phase_done name='rangeCheckElimination' stamp='0.457'/>
</phase>
<phase name='optimize_null_checks' stamp='0.457'>
<phase_done name='optimize_null_checks' stamp='0.457'/>
</phase>
<phase_done name='buildIR' stamp='0.457'/>
</phase>
<phase name='emit_lir' stamp='0.457'>
<phase name='lirGeneration' stamp='0.457'>
<phase_done name='lirGeneration' stamp='0.457'/>
</phase>
<phase name='linearScan' stamp='0.457'>
<phase_done name='linearScan' stamp='0.458'/>
</phase>
<phase_done name='emit_lir' stamp='0.458'/>
</phase>
<phase name='codeemit' stamp='0.458'>
<phase_done name='codeemit' stamp='0.458'/>
</phase>
<phase name='codeinstall' stamp='0.458'>
<dependency type='evol_method' x0='833'/>
<dependency type='evol_method' x0='840'/>
<dependency type='evol_method' x0='838'/>
<dependency type='evol_method' x0='836'/>
<dependency type='evol_method' x0='842'/>
<dependency type='evol_method' x0='847'/>
<dependency type='evol_method' x0='851'/>
<dependency type='evol_method' x0='858'/>
<dependency type='evol_method' x0='860'/>
<phase_done name='codeinstall' stamp='0.470'/>
</phase>
<code_cache total_blobs='270' nmethods='29' adapters='160' free_code_cache='250499776'/>
<task_done success='1' nmsize='2936' count='2817' inlined_bytes='72' stamp='0.470'/>
</task>
<task compile_id='32' method='java/util/concurrent/ConcurrentHashMap tabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' bytes='21' count='512' iicount='512' level='3' stamp='0.476'>
<klass id='833' name='java/util/concurrent/ConcurrentHashMap$Node' flags='8'/>
<klass id='834' name='[Ljava/util/concurrent/ConcurrentHashMap$Node;' flags='1040'/>
<type id='722' name='int'/>
<klass id='832' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='835' holder='832' name='tabAt' return='833' arguments='834 722' flags='24' bytes='21' iicount='512'/>
<dependency type='evol_method' x0='835'/>
<phase name='buildIR' stamp='0.476'>
<parse method='835'  stamp='0.476'>
<bc code='182' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='839' holder='796' name='getObjectVolatile' return='729' arguments='729 723' flags='257' bytes='0' compile_id='33' compile_kind='c2n' level='0' iicount='512'/>
<call method='839' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<dependency type='evol_method' x0='839'/>
<parse_done stamp='0.487'/>
</parse>
<phase name='optimize_blocks' stamp='0.487'>
<phase_done name='optimize_blocks' stamp='0.487'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.487'>
<phase_done name='rangeCheckElimination' stamp='0.487'/>
</phase>
<phase name='optimize_null_checks' stamp='0.487'>
<phase_done name='optimize_null_checks' stamp='0.487'/>
</phase>
<phase_done name='buildIR' stamp='0.487'/>
</phase>
<phase name='emit_lir' stamp='0.487'>
<phase name='lirGeneration' stamp='0.487'>
<phase_done name='lirGeneration' stamp='0.487'/>
</phase>
<phase name='linearScan' stamp='0.487'>
<phase_done name='linearScan' stamp='0.487'/>
</phase>
<phase_done name='emit_lir' stamp='0.487'/>
</phase>
<phase name='codeemit' stamp='0.487'>
<phase_done name='codeemit' stamp='0.487'/>
</phase>
<phase name='codeinstall' stamp='0.487'>
<dependency type='evol_method' x0='835'/>
<dependency type='evol_method' x0='839'/>
<phase_done name='codeinstall' stamp='0.492'/>
</phase>
<code_cache total_blobs='275' nmethods='34' adapters='162' free_code_cache='250504064'/>
<task_done success='1' nmsize='560' count='780' stamp='0.492'/>
</task>
<task compile_id='34' method='java/util/concurrent/ConcurrentHashMap setTabAt ([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V' bytes='19' count='336' iicount='336' level='3' stamp='0.492'>
<type id='724' name='void'/>
<klass id='834' name='[Ljava/util/concurrent/ConcurrentHashMap$Node;' flags='1040'/>
<type id='722' name='int'/>
<klass id='833' name='java/util/concurrent/ConcurrentHashMap$Node' flags='8'/>
<klass id='832' name='java/util/concurrent/ConcurrentHashMap' flags='1'/>
<method id='835' holder='832' name='setTabAt' return='724' arguments='834 722 833' flags='24' bytes='19' iicount='336'/>
<dependency type='evol_method' x0='835'/>
<phase name='buildIR' stamp='0.492'>
<parse method='835'  stamp='0.492'>
<bc code='182' bci='15'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='839' holder='796' name='putObjectVolatile' return='724' arguments='729 723 729' flags='257' bytes='0' compile_id='35' compile_kind='c2n' level='0' iicount='256'/>
<call method='839' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<dependency type='evol_method' x0='839'/>
<parse_done stamp='0.492'/>
</parse>
<phase name='optimize_blocks' stamp='0.492'>
<phase_done name='optimize_blocks' stamp='0.492'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.492'>
<phase_done name='rangeCheckElimination' stamp='0.492'/>
</phase>
<phase name='optimize_null_checks' stamp='0.492'>
<phase_done name='optimize_null_checks' stamp='0.492'/>
</phase>
<phase_done name='buildIR' stamp='0.492'/>
</phase>
<phase name='emit_lir' stamp='0.492'>
<phase name='lirGeneration' stamp='0.492'>
<phase_done name='lirGeneration' stamp='0.492'/>
</phase>
<phase name='linearScan' stamp='0.492'>
<phase_done name='linearScan' stamp='0.492'/>
</phase>
<phase_done name='emit_lir' stamp='0.492'/>
</phase>
<phase name='codeemit' stamp='0.492'>
<phase_done name='codeemit' stamp='0.492'/>
</phase>
<phase name='codeinstall' stamp='0.492'>
<dependency type='evol_method' x0='835'/>
<dependency type='evol_method' x0='839'/>
<phase_done name='codeinstall' stamp='0.499'/>
</phase>
<code_cache total_blobs='276' nmethods='35' adapters='162' free_code_cache='250503232'/>
<task_done success='1' nmsize='368' count='336' stamp='0.499'/>
</task>
<task compile_id='38' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='3131' backedge_count='2725' iicount='3131' level='3' stamp='0.499'>
<type id='716' name='boolean'/>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='722' name='int'/>
<method id='832' holder='730' name='startsWith' return='716' arguments='730 722' flags='1' bytes='72' iicount='3131'/>
<dependency type='evol_method' x0='832'/>
<phase name='buildIR' stamp='0.499'>
<parse method='832'  stamp='0.499'>
<parse_done stamp='0.499'/>
</parse>
<phase name='optimize_blocks' stamp='0.499'>
<phase_done name='optimize_blocks' stamp='0.499'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.499'>
<phase_done name='rangeCheckElimination' stamp='0.499'/>
</phase>
<phase name='optimize_null_checks' stamp='0.499'>
<phase_done name='optimize_null_checks' stamp='0.499'/>
</phase>
<phase_done name='buildIR' stamp='0.499'/>
</phase>
<phase name='emit_lir' stamp='0.499'>
<phase name='lirGeneration' stamp='0.499'>
<phase_done name='lirGeneration' stamp='0.499'/>
</phase>
<phase name='linearScan' stamp='0.499'>
<phase_done name='linearScan' stamp='0.499'/>
</phase>
<phase_done name='emit_lir' stamp='0.499'/>
</phase>
<phase name='codeemit' stamp='0.499'>
<phase_done name='codeemit' stamp='0.499'/>
</phase>
<phase name='codeinstall' stamp='0.499'>
<dependency type='evol_method' x0='832'/>
<phase_done name='codeinstall' stamp='0.504'/>
</phase>
<code_cache total_blobs='277' nmethods='36' adapters='162' free_code_cache='250501312'/>
<task_done success='1' nmsize='816' count='3131' backedge_count='2725' stamp='0.504'/>
</task>
<task compile_id='36' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='1516' iicount='1516' level='3' stamp='0.504'>
<type id='716' name='boolean'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='startsWith' return='716' arguments='730' flags='1' bytes='7' iicount='1516'/>
<dependency type='evol_method' x0='832'/>
<phase name='buildIR' stamp='0.505'>
<parse method='832'  stamp='0.505'>
<bc code='182' bci='3'/>
<type id='722' name='int'/>
<method id='834' holder='730' name='startsWith' return='716' arguments='730 722' flags='1' bytes='72' compile_id='38' compiler='C1' level='3' iicount='3131'/>
<call method='834' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.505'/>
</parse>
<phase name='optimize_blocks' stamp='0.505'>
<phase_done name='optimize_blocks' stamp='0.505'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.505'>
<phase_done name='rangeCheckElimination' stamp='0.505'/>
</phase>
<phase name='optimize_null_checks' stamp='0.505'>
<phase_done name='optimize_null_checks' stamp='0.505'/>
</phase>
<phase_done name='buildIR' stamp='0.505'/>
</phase>
<phase name='emit_lir' stamp='0.505'>
<phase name='lirGeneration' stamp='0.505'>
<phase_done name='lirGeneration' stamp='0.505'/>
</phase>
<phase name='linearScan' stamp='0.505'>
<phase_done name='linearScan' stamp='0.505'/>
</phase>
<phase_done name='emit_lir' stamp='0.505'/>
</phase>
<phase name='codeemit' stamp='0.505'>
<phase_done name='codeemit' stamp='0.505'/>
</phase>
<phase name='codeinstall' stamp='0.505'>
<dependency type='evol_method' x0='832'/>
<phase_done name='codeinstall' stamp='0.512'/>
</phase>
<code_cache total_blobs='278' nmethods='37' adapters='162' free_code_cache='250500224'/>
<task_done success='1' nmsize='552' count='1516' stamp='0.512'/>
</task>
<task compile_id='40' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='1024' iicount='1024' level='3' stamp='0.512'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='832' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='1024'/>
<dependency type='evol_method' x0='832'/>
<phase name='buildIR' stamp='0.512'>
<parse method='832'  stamp='0.512'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='834' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='13' compiler='C2' level='4' iicount='12271'/>
<call method='834' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='793'/>
<parse_done stamp='0.512'/>
</parse>
<dependency type='evol_method' x0='834'/>
<parse_done stamp='0.512'/>
</parse>
<phase name='optimize_blocks' stamp='0.512'>
<phase_done name='optimize_blocks' stamp='0.512'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.512'>
<phase_done name='rangeCheckElimination' stamp='0.512'/>
</phase>
<phase name='optimize_null_checks' stamp='0.512'>
<phase_done name='optimize_null_checks' stamp='0.512'/>
</phase>
<phase_done name='buildIR' stamp='0.512'/>
</phase>
<phase name='emit_lir' stamp='0.512'>
<phase name='lirGeneration' stamp='0.512'>
<phase_done name='lirGeneration' stamp='0.512'/>
</phase>
<phase name='linearScan' stamp='0.512'>
<phase_done name='linearScan' stamp='0.512'/>
</phase>
<phase_done name='emit_lir' stamp='0.512'/>
</phase>
<phase name='codeemit' stamp='0.512'>
<phase_done name='codeemit' stamp='0.512'/>
</phase>
<phase name='codeinstall' stamp='0.512'>
<dependency type='evol_method' x0='832'/>
<dependency type='evol_method' x0='834'/>
<dependency type='no_finalizable_subclasses' ctxk='793'/>
<phase_done name='codeinstall' stamp='0.514'/>
</phase>
<code_cache total_blobs='279' nmethods='38' adapters='162' free_code_cache='250499008'/>
<task_done success='1' nmsize='592' count='1027' inlined_bytes='1' stamp='0.514'/>
</task>
<task compile_id='37' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='649' iicount='649' level='3' stamp='0.514'>
<type id='724' name='void'/>
<klass id='821' name='[C' flags='1041'/>
<type id='716' name='boolean'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='&lt;init&gt;' return='724' arguments='821 716' flags='0' bytes='10' iicount='649'/>
<dependency type='evol_method' x0='832'/>
<phase name='buildIR' stamp='0.515'>
<parse method='832'  stamp='0.515'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='834' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='13' compiler='C2' level='4' iicount='12273'/>
<call method='834' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<parse_done stamp='0.515'/>
</parse>
<dependency type='evol_method' x0='834'/>
<parse_done stamp='0.515'/>
</parse>
<phase name='optimize_blocks' stamp='0.515'>
<phase_done name='optimize_blocks' stamp='0.515'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.515'>
<phase_done name='rangeCheckElimination' stamp='0.515'/>
</phase>
<phase name='optimize_null_checks' stamp='0.515'>
<phase_done name='optimize_null_checks' stamp='0.515'/>
</phase>
<phase_done name='buildIR' stamp='0.515'/>
</phase>
<phase name='emit_lir' stamp='0.515'>
<phase name='lirGeneration' stamp='0.515'>
<phase_done name='lirGeneration' stamp='0.515'/>
</phase>
<phase name='linearScan' stamp='0.515'>
<phase_done name='linearScan' stamp='0.515'/>
</phase>
<phase_done name='emit_lir' stamp='0.515'/>
</phase>
<phase name='codeemit' stamp='0.515'>
<phase_done name='codeemit' stamp='0.515'/>
</phase>
<phase name='codeinstall' stamp='0.515'>
<dependency type='evol_method' x0='832'/>
<dependency type='evol_method' x0='834'/>
<phase_done name='codeinstall' stamp='0.517'/>
</phase>
<code_cache total_blobs='282' nmethods='39' adapters='162' free_code_cache='250486464'/>
<task_done success='1' nmsize='464' count='649' inlined_bytes='1' stamp='0.517'/>
</task>
<task compile_id='39' method='java/net/URL getFile ()Ljava/lang/String;' bytes='5' count='514' iicount='514' level='1' stamp='0.522'>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='801' name='java/net/URL' flags='17'/>
<method id='832' holder='801' name='getFile' return='730' flags='1' bytes='5' iicount='514'/>
<dependency type='evol_method' x0='832'/>
<phase name='buildIR' stamp='0.522'>
<parse method='832'  stamp='0.522'>
<parse_done stamp='0.522'/>
</parse>
<phase name='optimize_blocks' stamp='0.522'>
<phase_done name='optimize_blocks' stamp='0.522'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.522'>
<phase_done name='rangeCheckElimination' stamp='0.522'/>
</phase>
<phase name='optimize_null_checks' stamp='0.522'>
<phase_done name='optimize_null_checks' stamp='0.522'/>
</phase>
<phase_done name='buildIR' stamp='0.522'/>
</phase>
<phase name='emit_lir' stamp='0.522'>
<phase name='lirGeneration' stamp='0.522'>
<phase_done name='lirGeneration' stamp='0.522'/>
</phase>
<phase name='linearScan' stamp='0.522'>
<phase_done name='linearScan' stamp='0.522'/>
</phase>
<phase_done name='emit_lir' stamp='0.522'/>
</phase>
<phase name='codeemit' stamp='0.522'>
<phase_done name='codeemit' stamp='0.522'/>
</phase>
<phase name='codeinstall' stamp='0.522'>
<dependency type='evol_method' x0='832'/>
<phase_done name='codeinstall' stamp='0.524'/>
</phase>
<code_cache total_blobs='282' nmethods='41' adapters='162' free_code_cache='250496448'/>
<task_done success='1' nmsize='272' count='514' stamp='0.524'/>
</task>
</compilation_log>
<compilation_log thread='18064'>
<start_compile_thread name='C2 CompilerThread1' thread='18064' process='14300' stamp='0.327'/>
<task compile_id='5' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='29568' backedge_count='17688' iicount='29568' stamp='0.373'>
<phase name='parse' nodes='3' live='3' stamp='0.375'>
<type id='716' name='boolean'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='equals' return='716' arguments='729' flags='1' bytes='81' iicount='29568'/>
<parse method='832' uses='29568' stamp='0.375'>
<dependency type='evol_method' x0='832'/>
<bc code='166' bci='2'/>
<branch target_bci='7' taken='28948' not_taken='620' cnt='29568' prob='0.979031'/>
<bc code='193' bci='8'/>
<uncommon_trap bci='8' reason='null_check' action='make_not_entrant'/>
<uncommon_trap bci='8' reason='class_check' action='maybe_recompile'/>
<bc code='153' bci='11'/>
<branch target_bci='79' taken='0' not_taken='28948' cnt='28948' prob='never'/>
<bc code='190' bci='23'/>
<uncommon_trap bci='23' reason='null_check' action='none'/>
<uncommon_trap bci='23' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='30'/>
<uncommon_trap bci='30' reason='null_check' action='none'/>
<uncommon_trap bci='30' reason='null_check' action='maybe_recompile'/>
<bc code='160' bci='31'/>
<branch target_bci='79' taken='27970' not_taken='978' cnt='28948' prob='0.966215'/>
<bc code='153' bci='53'/>
<branch target_bci='77' taken='69' not_taken='16432' cnt='16501' prob='0.00418156'/>
<uncommon_trap bci='56' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='56' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='60'/>
<uncommon_trap bci='60' reason='null_check' action='none'/>
<uncommon_trap bci='60' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='60' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='52' bci='65'/>
<uncommon_trap bci='65' reason='null_check' action='none'/>
<uncommon_trap bci='65' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='65' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='66'/>
<branch target_bci='71' taken='15523' not_taken='909' cnt='16432' prob='0.944681'/>
<bc code='153' bci='53'/>
<branch target_bci='77' taken='69' not_taken='16432' cnt='15523' prob='0.00418156'/>
<parse_done nodes='338' live='320' memory='83712' stamp='0.376'/>
</parse>
<phase_done name='parse' nodes='339' live='223' stamp='0.376'/>
</phase>
<phase name='optimizer' nodes='339' live='223' stamp='0.376'>
<phase name='idealLoop' nodes='359' live='211' stamp='0.376'>
<loop_tree>
<loop idx='366' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='400' live='178' stamp='0.376'/>
</phase>
<phase name='idealLoop' nodes='400' live='178' stamp='0.376'>
<loop_tree>
<loop idx='562' inner_loop='1' main_loop='562' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='679' live='302' stamp='0.376'/>
</phase>
<phase name='idealLoop' nodes='679' live='302' stamp='0.376'>
<loop_tree>
<loop idx='480' inner_loop='1' pre_loop='366' >
</loop>
<loop idx='716' inner_loop='1' main_loop='716' >
</loop>
<loop idx='426' inner_loop='1' post_loop='366' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='754' live='333' stamp='0.376'/>
</phase>
<phase name='ccp' nodes='754' live='333' stamp='0.376'>
<phase_done name='ccp' nodes='754' live='333' stamp='0.376'/>
</phase>
<phase name='idealLoop' nodes='754' live='332' stamp='0.376'>
<loop_tree>
<loop idx='480' inner_loop='1' pre_loop='366' >
</loop>
<loop idx='716' inner_loop='1' main_loop='716' >
</loop>
<loop idx='426' inner_loop='1' post_loop='366' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='754' live='311' stamp='0.377'/>
</phase>
<phase name='idealLoop' nodes='754' live='311' stamp='0.377'>
<loop_tree>
<loop idx='480' inner_loop='1' pre_loop='366' >
</loop>
<loop idx='716' inner_loop='1' main_loop='716' >
</loop>
<loop idx='426' inner_loop='1' post_loop='366' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='754' live='308' stamp='0.377'/>
</phase>
<phase_done name='optimizer' nodes='765' live='286' stamp='0.377'/>
</phase>
<phase name='matcher' nodes='765' live='286' stamp='0.377'>
<phase_done name='matcher' nodes='249' live='249' stamp='0.377'/>
</phase>
<phase name='regalloc' nodes='333' live='332' stamp='0.377'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='412' live='376' stamp='0.378'/>
</phase>
<phase name='output' nodes='412' live='376' stamp='0.378'>
<phase_done name='output' nodes='431' live='390' stamp='0.380'/>
</phase>
<dependency type='evol_method' x0='832'/>
<code_cache total_blobs='246' nmethods='6' adapters='160' free_code_cache='250545024'/>
<task_done success='1' nmsize='792' count='29572' backedge_count='17695' stamp='0.386'/>
</task>
<task compile_id='10' method='java/lang/String hashCode ()I' bytes='55' count='3011' backedge_count='63488' iicount='3011' stamp='0.386'>
<phase name='parse' nodes='3' live='3' stamp='0.386'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='hashCode' return='722' flags='1' bytes='55' iicount='3011'/>
<parse method='832' uses='3011' stamp='0.386'>
<dependency type='evol_method' x0='832'/>
<bc code='154' bci='6'/>
<branch target_bci='53' taken='1516' not_taken='1146' cnt='2662' prob='0.569497'/>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='none'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='14'/>
<branch target_bci='53' taken='1' not_taken='1145' cnt='1146' prob='0.0008726'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='1144' not_taken='59373' cnt='60517' prob='0.0189038'/>
<uncommon_trap bci='33' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='33' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='39'/>
<uncommon_trap bci='39' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='190' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='none'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='1144' not_taken='59373' cnt='59373' prob='0.0189038'/>
<parse_done nodes='223' live='215' memory='54704' stamp='0.390'/>
</parse>
<phase_done name='parse' nodes='224' live='146' stamp='0.390'/>
</phase>
<phase name='optimizer' nodes='224' live='146' stamp='0.390'>
<phase name='idealLoop' nodes='233' live='126' stamp='0.390'>
<loop_tree>
<loop idx='233' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='240' live='109' stamp='0.390'/>
</phase>
<phase name='idealLoop' nodes='240' live='109' stamp='0.390'>
<loop_tree>
<loop idx='245' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='266' live='114' stamp='0.390'/>
</phase>
<phase name='idealLoop' nodes='266' live='114' stamp='0.390'>
<loop_tree>
<loop idx='341' inner_loop='1' main_loop='341' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='352' live='182' stamp='0.390'/>
</phase>
<phase name='ccp' nodes='352' live='182' stamp='0.390'>
<phase_done name='ccp' nodes='352' live='182' stamp='0.390'/>
</phase>
<phase name='idealLoop' nodes='352' live='182' stamp='0.390'>
<loop_tree>
<loop idx='306' inner_loop='1' pre_loop='245' >
</loop>
<loop idx='380' inner_loop='1' main_loop='380' >
</loop>
<loop idx='279' inner_loop='1' post_loop='245' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='412' live='209' stamp='0.391'/>
</phase>
<phase name='idealLoop' nodes='412' live='209' stamp='0.391'>
<loop_tree>
<loop idx='306' inner_loop='1' pre_loop='245' >
</loop>
<loop idx='380' inner_loop='1' main_loop='380' >
</loop>
<loop idx='279' inner_loop='1' post_loop='245' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='431' live='198' stamp='0.391'/>
</phase>
<phase name='idealLoop' nodes='431' live='198' stamp='0.391'>
<loop_tree>
<loop idx='306' inner_loop='1' pre_loop='245' >
</loop>
<loop idx='380' inner_loop='1' main_loop='380' >
</loop>
<loop idx='279' inner_loop='1' post_loop='245' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='438' live='181' stamp='0.391'/>
</phase>
<phase_done name='optimizer' nodes='441' live='170' stamp='0.391'/>
</phase>
<phase name='matcher' nodes='441' live='170' stamp='0.391'>
<phase_done name='matcher' nodes='154' live='154' stamp='0.391'/>
</phase>
<phase name='regalloc' nodes='192' live='192' stamp='0.391'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='211' live='207' stamp='0.392'/>
</phase>
<phase name='output' nodes='211' live='207' stamp='0.392'>
<phase_done name='output' nodes='230' live='218' stamp='0.410'/>
</phase>
<dependency type='evol_method' x0='832'/>
<code_cache total_blobs='252' nmethods='10' adapters='160' free_code_cache='250520832'/>
<task_done success='1' nmsize='408' count='3051' backedge_count='63978' stamp='0.413'/>
</task>
<task compile_id='13' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='12248' iicount='12248' stamp='0.416'>
<phase name='parse' nodes='3' live='3' stamp='0.416'>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='832' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='12248'/>
<parse method='832' uses='12248' stamp='0.416'>
<dependency type='evol_method' x0='832'/>
<parse_done nodes='54' live='53' memory='27144' stamp='0.416'/>
</parse>
<phase_done name='parse' nodes='56' live='38' stamp='0.416'/>
</phase>
<phase name='optimizer' nodes='56' live='38' stamp='0.416'>
<phase name='ccp' nodes='56' live='38' stamp='0.416'>
<phase_done name='ccp' nodes='56' live='38' stamp='0.416'/>
</phase>
<phase name='idealLoop' nodes='56' live='38' stamp='0.416'>
<phase_done name='idealLoop' nodes='56' live='38' stamp='0.416'/>
</phase>
<phase_done name='optimizer' nodes='56' live='37' stamp='0.416'/>
</phase>
<phase name='matcher' nodes='56' live='37' stamp='0.416'>
<phase_done name='matcher' nodes='33' live='33' stamp='0.416'/>
</phase>
<phase name='regalloc' nodes='42' live='42' stamp='0.416'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='45' live='44' stamp='0.417'/>
</phase>
<phase name='output' nodes='45' live='44' stamp='0.417'>
<phase_done name='output' nodes='55' live='53' stamp='0.423'/>
</phase>
<dependency type='evol_method' x0='832'/>
<code_cache total_blobs='253' nmethods='13' adapters='160' free_code_cache='250527552'/>
<task_done success='1' nmsize='152' count='12251' stamp='0.423'/>
</task>
<task compile_id='19' method='java/lang/Math min (II)I' bytes='11' count='7168' iicount='7168' stamp='0.439'>
<phase name='parse' nodes='3' live='3' stamp='0.439'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/Math' flags='17'/>
<method id='833' holder='832' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='7168'/>
<parse method='833' uses='7168' stamp='0.439'>
<dependency type='evol_method' x0='833'/>
<bc code='163' bci='2'/>
<branch target_bci='9' taken='3376' not_taken='3792' cnt='7168' prob='0.470982'/>
<parse_done nodes='32' live='31' memory='23912' stamp='0.439'/>
</parse>
<phase_done name='parse' nodes='33' live='18' stamp='0.439'/>
</phase>
<phase name='optimizer' nodes='33' live='18' stamp='0.439'>
<phase name='ccp' nodes='33' live='18' stamp='0.439'>
<phase_done name='ccp' nodes='33' live='18' stamp='0.439'/>
</phase>
<phase name='idealLoop' nodes='33' live='18' stamp='0.439'>
<phase_done name='idealLoop' nodes='34' live='14' stamp='0.439'/>
</phase>
<phase_done name='optimizer' nodes='34' live='14' stamp='0.439'/>
</phase>
<phase name='matcher' nodes='34' live='14' stamp='0.439'>
<phase_done name='matcher' nodes='15' live='15' stamp='0.439'/>
</phase>
<phase name='regalloc' nodes='17' live='17' stamp='0.439'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='18' live='18' stamp='0.439'/>
</phase>
<phase name='output' nodes='18' live='18' stamp='0.439'>
<phase_done name='output' nodes='23' live='23' stamp='0.439'/>
</phase>
<dependency type='evol_method' x0='833'/>
<code_cache total_blobs='260' nmethods='19' adapters='160' free_code_cache='250514496'/>
<task_done success='1' nmsize='88' count='7176' stamp='0.439'/>
</task>
<task compile_id='21' method='java/lang/String length ()I' bytes='6' count='31238' iicount='31238' stamp='0.442'>
<phase name='parse' nodes='3' live='3' stamp='0.442'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='length' return='722' flags='1' bytes='6' iicount='31248'/>
<parse method='832' uses='31248' stamp='0.442'>
<dependency type='evol_method' x0='832'/>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='none'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='61' live='58' memory='28240' stamp='0.442'/>
</parse>
<phase_done name='parse' nodes='62' live='41' stamp='0.442'/>
</phase>
<phase name='optimizer' nodes='62' live='41' stamp='0.442'>
<phase name='ccp' nodes='66' live='41' stamp='0.442'>
<phase_done name='ccp' nodes='66' live='41' stamp='0.442'/>
</phase>
<phase name='idealLoop' nodes='66' live='41' stamp='0.442'>
<phase_done name='idealLoop' nodes='66' live='41' stamp='0.442'/>
</phase>
<phase_done name='optimizer' nodes='69' live='41' stamp='0.442'/>
</phase>
<phase name='matcher' nodes='69' live='41' stamp='0.442'>
<phase_done name='matcher' nodes='36' live='36' stamp='0.442'/>
</phase>
<phase name='regalloc' nodes='44' live='44' stamp='0.442'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='48' live='46' stamp='0.442'/>
</phase>
<phase name='output' nodes='48' live='46' stamp='0.442'>
<phase_done name='output' nodes='59' live='55' stamp='0.445'/>
</phase>
<dependency type='evol_method' x0='832'/>
<code_cache total_blobs='264' nmethods='22' adapters='160' free_code_cache='250505344'/>
<task_done success='1' nmsize='152' count='31354' stamp='0.446'/>
</task>
<task compile_id='23' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='22771' iicount='22771' stamp='0.446'>
<phase name='parse' nodes='3' live='3' stamp='0.446'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='833' holder='832' name='getProperties' return='722' arguments='722' flags='0' bytes='11' iicount='22771'/>
<parse method='833' uses='22771' stamp='0.446'>
<dependency type='evol_method' x0='833'/>
<bc code='46' bci='7'/>
<uncommon_trap bci='7' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='54' live='52' memory='27536' stamp='0.446'/>
</parse>
<phase_done name='parse' nodes='55' live='32' stamp='0.446'/>
</phase>
<phase name='optimizer' nodes='55' live='32' stamp='0.446'>
<phase name='ccp' nodes='55' live='32' stamp='0.446'>
<phase_done name='ccp' nodes='55' live='32' stamp='0.446'/>
</phase>
<phase name='idealLoop' nodes='55' live='32' stamp='0.446'>
<phase_done name='idealLoop' nodes='55' live='32' stamp='0.446'/>
</phase>
<phase_done name='optimizer' nodes='55' live='31' stamp='0.446'/>
</phase>
<phase name='matcher' nodes='55' live='31' stamp='0.446'>
<phase_done name='matcher' nodes='26' live='26' stamp='0.446'/>
</phase>
<phase name='regalloc' nodes='31' live='31' stamp='0.446'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='37' live='36' stamp='0.446'/>
</phase>
<phase name='output' nodes='37' live='36' stamp='0.446'>
<phase_done name='output' nodes='45' live='43' stamp='0.446'/>
</phase>
<dependency type='evol_method' x0='833'/>
<code_cache total_blobs='265' nmethods='23' adapters='160' free_code_cache='250504640'/>
<task_done success='1' nmsize='152' count='22771' stamp='0.447'/>
</task>
<task compile_id='28' method='java/lang/Character toLowerCase (I)I' bytes='9' count='12544' iicount='12544' stamp='0.457'>
<phase name='parse' nodes='3' live='3' stamp='0.457'>
<type id='722' name='int'/>
<klass id='810' name='java/lang/Character' flags='17'/>
<method id='832' holder='810' name='toLowerCase' return='722' arguments='722' flags='9' bytes='9' iicount='12546'/>
<parse method='832' uses='12546' stamp='0.457'>
<dependency type='evol_method' x0='832'/>
<bc code='184' bci='1'/>
<klass id='835' name='java/lang/CharacterData' flags='1024'/>
<method id='836' holder='835' name='of' return='835' arguments='722' flags='24' bytes='120' compile_id='22' compiler='C2' level='4' iicount='23021'/>
<call method='836' count='12034' prof_factor='1' inline='1'/>
<klass id='838' name='java/lang/CharacterData00' unloaded='1'/>
<uncommon_trap method='836' bci='96' reason='unloaded' action='reinterpret' index='45' klass='838'/>
<klass id='839' name='java/lang/CharacterData01' unloaded='1'/>
<uncommon_trap method='836' bci='100' reason='unloaded' action='reinterpret' index='46' klass='839'/>
<klass id='840' name='java/lang/CharacterData02' unloaded='1'/>
<uncommon_trap method='836' bci='104' reason='unloaded' action='reinterpret' index='47' klass='840'/>
<klass id='841' name='java/lang/CharacterData0E' unloaded='1'/>
<uncommon_trap method='836' bci='108' reason='unloaded' action='reinterpret' index='48' klass='841'/>
<klass id='842' name='java/lang/CharacterDataPrivateUse' unloaded='1'/>
<uncommon_trap method='836' bci='112' reason='unloaded' action='reinterpret' index='50' klass='842'/>
<klass id='843' name='java/lang/CharacterDataUndefined' unloaded='1'/>
<uncommon_trap method='836' bci='116' reason='unloaded' action='reinterpret' index='51' klass='843'/>
<inline_success reason='inline (hot)'/>
<klass id='834' name='java/lang/CharacterDataLatin1' flags='0'/>
<dependency type='abstract_with_unique_concrete_subtype' ctxk='835' x='834'/>
<parse method='836' uses='12546' stamp='0.457'>
<dependency type='evol_method' x0='836'/>
<bc code='154' bci='4'/>
<branch target_bci='11' taken='0' not_taken='23021' cnt='23021' prob='never'/>
<uncommon_trap bci='4' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='51' live='49' memory='27472' stamp='0.457'/>
</parse>
<bc code='182' bci='5'/>
<method id='847' holder='834' name='toLowerCase' return='722' arguments='722' flags='0' bytes='39' iicount='12546'/>
<dependency type='unique_concrete_method' ctxk='834' x='847'/>
<call method='847' count='12034' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='847' uses='12546' stamp='0.457'>
<dependency type='evol_method' x0='847'/>
<bc code='182' bci='4'/>
<method id='848' holder='834' name='getProperties' return='722' arguments='722' flags='0' bytes='11' compile_id='23' compiler='C2' level='4' iicount='22867'/>
<dependency type='unique_concrete_method' ctxk='834' x='848'/>
<call method='848' count='12034' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='848' uses='12546' stamp='0.457'>
<dependency type='evol_method' x0='848'/>
<bc code='46' bci='7'/>
<uncommon_trap bci='7' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='102' live='98' memory='36328' stamp='0.457'/>
</parse>
<bc code='153' bci='12'/>
<branch target_bci='37' taken='11680' not_taken='866' cnt='12546' prob='0.930974'/>
<bc code='159' bci='21'/>
<branch target_bci='37' taken='0' not_taken='866' cnt='866' prob='never'/>
<uncommon_trap bci='21' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='133' live='127' memory='42608' stamp='0.457'/>
</parse>
<parse_done nodes='133' live='126' memory='42992' stamp='0.457'/>
</parse>
<phase_done name='parse' nodes='134' live='70' stamp='0.457'/>
</phase>
<phase name='optimizer' nodes='134' live='70' stamp='0.457'>
<phase name='ccp' nodes='134' live='68' stamp='0.457'>
<phase_done name='ccp' nodes='134' live='68' stamp='0.457'/>
</phase>
<phase name='idealLoop' nodes='134' live='68' stamp='0.457'>
<phase_done name='idealLoop' nodes='134' live='68' stamp='0.457'/>
</phase>
<phase_done name='optimizer' nodes='135' live='68' stamp='0.457'/>
</phase>
<phase name='matcher' nodes='135' live='68' stamp='0.457'>
<phase_done name='matcher' nodes='63' live='63' stamp='0.457'/>
</phase>
<phase name='regalloc' nodes='78' live='78' stamp='0.458'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='98' live='91' stamp='0.458'/>
</phase>
<phase name='output' nodes='98' live='91' stamp='0.458'>
<phase_done name='output' nodes='111' live='99' stamp='0.459'/>
</phase>
<dependency type='evol_method' x0='832'/>
<dependency type='evol_method' x0='836'/>
<dependency type='evol_method' x0='847'/>
<dependency type='evol_method' x0='848'/>
<dependency type='abstract_with_unique_concrete_subtype' ctxk='835' x='834'/>
<dependency type='unique_concrete_method' ctxk='834' x='847'/>
<dependency type='unique_concrete_method' ctxk='834' x='848'/>
<code_cache total_blobs='270' nmethods='30' adapters='160' free_code_cache='250504768'/>
<task_done success='1' nmsize='216' count='12546' inlined_bytes='170' stamp='0.472'/>
</task>
<task compile_id='41' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='30464' iicount='30464' stamp='0.514'>
<phase name='parse' nodes='3' live='3' stamp='0.515'>
<type id='716' name='boolean'/>
<type id='717' name='char'/>
<klass id='832' name='java/io/WinNTFileSystem' flags='0'/>
<method id='833' holder='832' name='isSlash' return='716' arguments='717' flags='2' bytes='18' iicount='30464'/>
<parse method='833' uses='30464' stamp='0.515'>
<dependency type='evol_method' x0='833'/>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='1659' not_taken='28804' cnt='30463' prob='0.0544595'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='27862' not_taken='942' cnt='28804' prob='0.967296'/>
<parse_done nodes='49' live='48' memory='26512' stamp='0.515'/>
</parse>
<phase_done name='parse' nodes='50' live='27' stamp='0.515'/>
</phase>
<phase name='optimizer' nodes='50' live='27' stamp='0.515'>
<phase name='ccp' nodes='50' live='27' stamp='0.515'>
<phase_done name='ccp' nodes='50' live='27' stamp='0.515'/>
</phase>
<phase name='idealLoop' nodes='50' live='27' stamp='0.515'>
<phase_done name='idealLoop' nodes='50' live='27' stamp='0.515'/>
</phase>
<phase_done name='optimizer' nodes='50' live='27' stamp='0.515'/>
</phase>
<phase name='matcher' nodes='50' live='27' stamp='0.515'>
<phase_done name='matcher' nodes='26' live='26' stamp='0.515'/>
</phase>
<phase name='regalloc' nodes='36' live='36' stamp='0.515'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='36' live='36' stamp='0.515'/>
</phase>
<phase name='output' nodes='36' live='36' stamp='0.515'>
<phase_done name='output' nodes='46' live='43' stamp='0.517'/>
</phase>
<dependency type='evol_method' x0='833'/>
<code_cache total_blobs='282' nmethods='40' adapters='162' free_code_cache='250491840'/>
<task_done success='1' nmsize='120' count='30465' stamp='0.522'/>
</task>
<task compile_id='43' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='30976' iicount='30976' stamp='0.524'>
<phase name='parse' nodes='3' live='3' stamp='0.524'>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<type id='717' name='char'/>
<method id='832' holder='793' name='append' return='793' arguments='717' flags='1' bytes='29' iicount='30976'/>
<parse method='832' uses='30976' stamp='0.524'>
<dependency type='evol_method' x0='832'/>
<bc code='183' bci='7'/>
<type id='724' name='void'/>
<type id='722' name='int'/>
<method id='834' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' compile_id='31' compiler='C2' level='4' iicount='32640'/>
<call method='834' count='30463' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='30975' stamp='0.524'>
<dependency type='evol_method' x0='834'/>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='none'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='32159' not_taken='481' cnt='32640' prob='0.985263'/>
<bc code='183' bci='17'/>
<method id='835' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='714'/>
<call method='835' count='473' prof_factor='0.948989' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='456' stamp='0.524'>
<dependency type='evol_method' x0='835'/>
<bc code='183' bci='31'/>
<method id='839' holder='793' name='hugeCapacity' return='722' arguments='722' flags='2' bytes='28' iicount='1'/>
<call method='839' count='-1' prof_factor='0.638655' inline='1'/>
<klass id='752' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='839' bci='7' reason='unloaded' action='reinterpret' index='145' klass='752'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='164' live='161' memory='47648' stamp='0.524'/>
</parse>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='836' name='java/util/Arrays' flags='1'/>
<method id='837' holder='836' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='804'/>
<call method='837' count='473' prof_factor='0.948989' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='456' stamp='0.524'>
<dependency type='evol_method' x0='837'/>
<bc code='184' bci='11'/>
<klass id='841' name='java/lang/Math' flags='17'/>
<method id='842' holder='841' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='19' compiler='C2' level='4' iicount='7187'/>
<call method='842' count='-1' prof_factor='0.567164' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='843' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='16' compile_kind='c2n' level='0' iicount='9088'/>
<call method='843' count='-1' prof_factor='0.567164' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='342' live='338' memory='85688' stamp='0.524'/>
</parse>
<parse_done nodes='369' live='364' memory='91352' stamp='0.524'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='none'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='433' live='424' memory='103416' stamp='0.524'/>
</parse>
<phase_done name='parse' nodes='435' live='272' stamp='0.524'/>
</phase>
<phase name='optimizer' nodes='435' live='272' stamp='0.524'>
<phase name='ccp' nodes='447' live='268' stamp='0.524'>
<phase_done name='ccp' nodes='447' live='268' stamp='0.524'/>
</phase>
<phase name='idealLoop' nodes='447' live='267' stamp='0.524'>
<phase_done name='idealLoop' nodes='465' live='268' stamp='0.524'/>
</phase>
<phase_done name='optimizer' nodes='522' live='304' stamp='0.525'/>
</phase>
<phase name='matcher' nodes='522' live='304' stamp='0.525'>
<phase_done name='matcher' nodes='306' live='306' stamp='0.525'/>
</phase>
<phase name='regalloc' nodes='380' live='380' stamp='0.525'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='540' live='474' stamp='0.526'/>
</phase>
<phase name='output' nodes='542' live='476' stamp='0.526'>
<phase_done name='output' nodes='564' live='489' stamp='0.527'/>
</phase>
<dependency type='evol_method' x0='832'/>
<dependency type='evol_method' x0='834'/>
<dependency type='evol_method' x0='835'/>
<dependency type='evol_method' x0='837'/>
<code_cache total_blobs='285' nmethods='42' adapters='162' free_code_cache='250483136'/>
<task_done success='1' nmsize='1000' count='30976' inlined_bytes='96' stamp='0.533'/>
</task>
<task compile_id='44' method='java/lang/String indexOf (II)I' bytes='70' count='2063' backedge_count='103424' iicount='2063' stamp='0.533'>
<phase name='parse' nodes='3' live='3' stamp='0.533'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' iicount='2063'/>
<parse method='832' uses='2063' stamp='0.533'>
<dependency type='evol_method' x0='832'/>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='none'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<bc code='156' bci='7'/>
<branch target_bci='15' taken='1856' not_taken='0' cnt='1856' prob='always'/>
<uncommon_trap bci='7' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='17'/>
<branch target_bci='22' taken='1586' not_taken='270' cnt='1856' prob='0.854526'/>
<bc code='162' bci='25'/>
<branch target_bci='63' taken='0' not_taken='1586' cnt='1586' prob='never'/>
<uncommon_trap bci='25' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='1352' not_taken='96427' cnt='97779' prob='0.0138271'/>
<uncommon_trap bci='43' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='43' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='47'/>
<uncommon_trap bci='47' reason='null_check' action='none'/>
<uncommon_trap bci='47' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='47' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='49'/>
<branch target_bci='55' taken='96194' not_taken='233' cnt='96427' prob='0.997584'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='1352' not_taken='96427' cnt='96194' prob='0.0138271'/>
<parse_done nodes='218' live='206' memory='56344' stamp='0.533'/>
</parse>
<phase_done name='parse' nodes='219' live='151' stamp='0.533'/>
</phase>
<phase name='optimizer' nodes='219' live='151' stamp='0.533'>
<phase name='idealLoop' nodes='228' live='137' stamp='0.533'>
<loop_tree>
<loop idx='234' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='235' live='118' stamp='0.533'/>
</phase>
<phase name='idealLoop' nodes='235' live='118' stamp='0.533'>
<loop_tree>
<loop idx='234' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='248' live='124' stamp='0.533'/>
</phase>
<phase name='idealLoop' nodes='248' live='124' stamp='0.533'>
<loop_tree>
<loop idx='324' inner_loop='1' main_loop='324' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='337' live='200' stamp='0.534'/>
</phase>
<phase name='ccp' nodes='337' live='200' stamp='0.534'>
<phase_done name='ccp' nodes='337' live='200' stamp='0.534'/>
</phase>
<phase name='idealLoop' nodes='337' live='200' stamp='0.534'>
<loop_tree>
<loop idx='288' inner_loop='1' pre_loop='234' >
</loop>
<loop idx='363' inner_loop='1' main_loop='363' >
</loop>
<loop idx='260' inner_loop='1' post_loop='234' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='403' live='238' stamp='0.534'/>
</phase>
<phase name='idealLoop' nodes='403' live='238' stamp='0.534'>
<loop_tree>
<loop idx='288' inner_loop='1' pre_loop='234' >
</loop>
<loop idx='363' inner_loop='1' main_loop='363' >
</loop>
<loop idx='260' inner_loop='1' post_loop='234' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='422' live='228' stamp='0.534'/>
</phase>
<phase name='idealLoop' nodes='422' live='228' stamp='0.534'>
<loop_tree>
<loop idx='288' inner_loop='1' pre_loop='234' >
</loop>
<loop idx='363' inner_loop='1' main_loop='363' >
</loop>
<loop idx='260' inner_loop='1' post_loop='234' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='422' live='225' stamp='0.534'/>
</phase>
<phase_done name='optimizer' nodes='426' live='214' stamp='0.534'/>
</phase>
<phase name='matcher' nodes='426' live='214' stamp='0.534'>
<phase_done name='matcher' nodes='173' live='173' stamp='0.534'/>
</phase>
<phase name='regalloc' nodes='241' live='241' stamp='0.534'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='266' live='263' stamp='0.535'/>
</phase>
<phase name='output' nodes='268' live='265' stamp='0.535'>
<phase_done name='output' nodes='295' live='278' stamp='0.544'/>
</phase>
<dependency type='evol_method' x0='832'/>
<code_cache total_blobs='286' nmethods='44' adapters='162' free_code_cache='250483136'/>
<task_done success='1' nmsize='472' count='2064' backedge_count='103447' stamp='0.547'/>
</task>
</compilation_log>
<hotspot_log_done stamp='0.635'/>
</hotspot_log>
